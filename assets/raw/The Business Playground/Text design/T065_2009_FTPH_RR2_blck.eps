%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: T065_FTPH_RR2_blck.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Brigden, Chantal
%%CreationDate: 4/6/09
%%BoundingBox: 0 0 314 94
%%HiResBoundingBox: 0 0 313.1001 93.9156
%%CropBox: 0 0 313.1001 93.9156
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 3950 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDECFFA8A8FD08FFA8FFA8FFA8A8A8FD6EFFA8527DFD06A8%AF7DA8A8A87DFF527D7DA8A8FFA8FFA8FD67FFA8527D275227275252277D%5227277DFF7D7D52275227525252FD67FFA8FFA8A87DA87DA87DA87DA87D%A8A8FFA8A87DA87DA87DA8A8FD6CFFA8FD11FFA8FD6DFF5252A8A8FFA8A8%7D7DA8A8A8FFA87D7DAFA87D7DFD6CFF277D5252275227587D527D2752A8%2752F852527DFD6CFFA8FFA87D7D7DA87DA87DA87DFD04A87D7DA87DFD68%FFA8FD7FFFA8A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8A8A8FF7DFFA8FF52FD%68FF7D5252FF277D52A8A87D27527D52277D5252527DA852277DFD68FFA8%7DA8FF7D7DA8A8FF7DA87D7D527D7D7DA8A87DFF587DA8FD74FFA8FDFCFF%FD76FF7DFD1852FD67FF52F827F827F827F827F827F827F827F827F827F8%27F827F827FD67FF5227F8527D527D52277DF87D7D275252527D277D277D%F82727FD67FF52F82752FF7DA85252A8527DA827A8527D277D7DA87D27F8%27FD67FF5227277D5227A8527DA87D7D7D527EFD067DA82727F8FD67FF52%F8272727F85227522752527D527D2751522726272727F827FD67FF52FD04%277D52FD0B7D5252FD0427F8FD67FF52F827275227522727F827F827F827%F827275251522727F827FD67FF5227F8272727F8272727F8272727F82727%27F8272727F82727FD67FFA884A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8FDFCFFFD8EFFA8FD25FFA8FD0FFFA8FD0BFFA8FD17FFA8FD%1BFFA87DFFA8A8A8FFA8FFA87DA8FFFD07A8FFA8A8FFFFA8FF7DFFA8A8FF%FFA87DA8FFA8FFA8A8A8FF7DA8FFFFA87DA8FFFD05A8FFFFA87DFFA8FF7D%A8A8FFA8FFA8A8A8FFA8FFFFFF7DFD08A8FFFFFF7DFFA8A87EFFA8FD04FF%FD06A8FFA8FFA8A8A8FFFFA87DFFA8A8A8FFFF7DA8FFA8FFA8527D52FD04%7D527DFF527D7DFD04527D52A8A8FF7D7D527D52FD047DA8A8A8587D527D%52FF7D7D527D52FFA8A8527D527D7D7D52A8A8FFA87D277DA8A87D7D527D%527D7D527D7DFD04A8FD087DA8A8A87D7D7D277D7D7D52FF84FF7D7D527D%277D5252FD047DA8A8A87D527D7D7D52FF527D527D7D52FD07FFA8A8FD04%FF7DFD37FFA8FD0FFFA8FFFFFFA8A8FD05FFA8FD04FFA8FFA87DA8A8FD0C%FFA87DFD06FF7DA8FD09FFA8FD07FFA8A8FD08FFA8FD05FFA8FFFFFFA8FD%04FFA8A8FD04FFA8A8FD07FFA8FFA8FD05FFA8FFFFFFA8FFFFFFA8FD05FF%A8FD05FFA8FD0FFFA8FFA8FD09FFA8FD09FFA8FFFFFF7D7DA87DA87DA8FF%FFA87DA8A87DA87DFFA8FF7DA8FD047DA8FFA87D7DA87DA8A87D7DA87D7D%A8FFA8A87DA87DA87DFFA87D7DA87DA8A8FFA8A87D7D7DA852A87D7DA8FF%7D7D7DA87D84A8A87DFF52A87DA8A8FFFFFD047DA87DA87DA8FD047DA8FF%A87D7D7DA87D7DA87DA8FFFFA87DA8A87DA8FFFFFD057DA87DA8A87D7D52%7D7DFFA8A8FD057DA8A8FFA8A8527D52A87DFFA8FFFD057DFF7DA87D7D7D%FD05A87D5252A87DFF7DA87D7D7DA8A8FFA87D7D527D7DA87D7DFFA8A87D%A8FD067DA87D84A852A8A8AF7D7D7DA852A87DA87D7D527D7DFFA8FF7DA8%7D7D7DA87D7D7DFFA8A8A87D7DA87DFFA8A87DA87D7D52A8FD15FFA8FDE9%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-04-06T16:49:23+01:00</xap:CreateDate>
         <xap:ModifyDate>2009-04-06T16:49:23+01:00</xap:ModifyDate>
         <xap:MetadataDate>2009-04-06T16:49:23+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>80</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAUAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq4kAEk0A3JOKqcVxbzV9KVJONCeDBqVrT&#xA;p8sVVMVaLoHCFhzYFlWu5C0BIHtUYqptd2qBi0yKFbgxLAUaleJ3603piq+OSORA8bB0NQGUgjY0&#xA;O498VXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUJq9rL&#xA;d6Ve2sVPVuIJYo+Ww5OhUV+k4q8dT8n/AD1pNhFaeWtTXTytjapJLBKLVnu4IL9m5i2hjR0+tXMH&#xA;2lqyKeVTXkqjJPIv5zvfakW8wBbWS+ku9OEN5cLxjKyBImVlYhB+7JTkV6/Sq1qH5f8A5sTx3U0O&#xA;qQpqxh1CKG/a9uWJN1eWs0ZhCpGbVRBbugRWYA+NdlUwT8s9Zv8AyfrGma7DYX2pajqNlqSSOfWj&#xA;E0VtaQXTVeMcXJt5hUDcN2qcVSrU/wAs/wA0Ymu08u6uul2nrXT2Fpb3UsECJNcahNH+6jTgKetZ&#xA;g0H7LD5qpgPKf5tx6pM8/mCL6tNrC3iK95MqGzWWQ+kIFiV1X05I19NZwvJRWu9VXq+KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvFtF/J/zz5d8s21poOt&#xA;G01E2F015FFKYbb9ImG2ituKKnFlX0pWZyOTMQWriq+4/L783bzTZYb7W2uBJbLG9p9bdFYxmKRV&#xA;LLHs7FGRn9+9TiqKufJf5q2sGoQaLeRWySpeSadwu3RIprrVLi6cyoIiZZHtZY0Vy3wMCd+pVa8z&#xA;/lh531z9CTy6hG13Y6bb2uoO7rW4mj1K0u2EhMTfD6dszck4kuF/ZLVVSpfy3/N28e1l166ttSms&#xA;buSSBzO1RAb3TrwKhZGah/R8gXk23Jeg6KvcsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirB/Leh+dtP19TNNGuhiG9ZrUFFUXM97LNHIojFWLRuOfMbdQalhi&#xA;qUeWdD/OKOWwl1zUgWtrlmuY4pI2ilgeS3LKwZCx4objjuD9k7bKFW/MHlX8zXv7uXQdTawgluLi&#xA;VY4nhVWEgcozB43+KvCuKoe20n82tQ1m7ka+mtdI+usjRyOiu8cc04JhUx1WJozGNyeXVaUxVC6d&#xA;5I/NaHTNPsrm/wD9Etf0d6ljDMkSqtgdMYpC0aKV5mO9qK8T8HTFUy8z+UPzB1zzHfQT3YfypPPZ&#xA;uLT1lVGt47qxeSMRhFcMI4rvnych+aj5KvTsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVSjzd5jg8teWtR164ha4h06EzyQxkBmC9gTtirxb/ocLyv8A9WC+/wCR&#xA;kP8AXFXf9DheV/8AqwX3/IyH+uKu/wChwvK//Vgvv+RkP9cVd/0OF5X/AOrBff8AIyH+uKu/6HC8&#xA;r/8AVgvv+RkP9cVd/wBDheV/+rBff8jIf64q+gMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVYT+df/kqfM//ADAv+sYq+PPyw17Q9C1e/wBR1eKOeOKyJtreRI39&#xA;WVbiF/TX1Y5kVnjVxVl6YFZbPf8AkjXvLGgxStY6RFPqlzc6zawyQRyW9rJeSSCJU+r+u/GBuMZE&#xA;6r0HE9iqe6Bq/wCVz+ZtR1WzSy+oazZWpj0yexiKW90He2lV7RRcCOIuqTSem9QjEq1cVY9pJ8hW&#xA;OjeXINVudK+vWd1dxXkSQm4DyNBP9XubxjCJeEVy0aPHzeN0AIGzVCoqPW/y5XT5rbzGtjeajeWM&#xA;FtrF7pkUaBJZLuUrcWojSNDPbwmNpSi8Xpx3NThV57+Ydxpdx541yfSnhk06S8la1e3UJCYy2xjU&#xA;UAXwGBX6EYVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYp+a2&#xA;l6hq35c+YNN06Brm+urR47eBKcnYkUArTFXyLp35NfmjaSNJN5LlvqgBUuCwRfekM0RJ+Zp7YFTu&#xA;Lyl+f9rtp3lr9GLtx+pWNjC4p/xcF9Y/7Jzirb+Xf+comavPzCgoAFjvZY1AApsqSqo+gYq2nl7/&#xA;AJygUFXGuXCHqlzcG4XuPszSOvffFVGXyJ+dN2GGqeSYNRDgAtJZW0ElRtUzWZtpifm5xVIZ/wAk&#xA;fzWkmZ4/Kl1CjGoiXiVX2BZ2anzJxV92YVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirzOy8jazxt5NJ84/6GI0tL1o6u0jLaiBUSSOVVj4v&#xA;SRfhLjb4utVU2/wP5ohtBBYeZ5bQR+l9XVYuSIIoiCpDN8QeXizf5NV71Cq7VPJ+qajdaLPJqS2t&#xA;9Y2skEjKS9wQ5QPJHN8Lh+A4s4ArX6MVSS48kfmJPeXrzeZTbJBbWsenajKpci5SN47icQpIiKGq&#xA;vhX9pT1ZVNZ/Kur2t3p1xqXmkmzgv2u5Le62WUniyRoxkWnAqeK7jfYV3xVNtQ0DW7h43s9aK3MU&#xA;N9bSXMsaNIn1ySKWMqsXpoDCIlUVFSveu+KpVP5L8z3Fm8I81SyJIyi9MickdYkEbRgB19Orci3E&#xA;7nZuQxVMNH8va5BqkV5N5jlv4ohxltyAEdHEzElQzKGZpInDAbcSFAQhQqpan5Wu5NQ0u4bzBJFf&#xA;wpbwc5BGDdrDOJpg8K8IyzhQVKpVSP5SysqpaP5Z1/T9Rt31PzbLqNvbxs95aTrGnqjgVLtxI4ot&#xA;IzSlPtVryriqh/gO/sIAi+Y5rXSUUfWIGZhXjOHBadn58fRVYqE/ZHWm2KprpXlnVbfy7a6ZPrL3&#xA;LQ2M9m8ixqI5mloIp2rycNGgpRHC7nYCgCqRWXkzV7GGx0RPN7J6MMSCyVRHI6xzeq3AJIrgGNWT&#xA;bsTXYKqqpjpfk3zNaXFs9x5knnt7YwFbVVZVPpBA4Zi7lxIqkUbp13arFVH655dvL+O1jOqUli1J&#xA;b63aeNWChFakCJGYeQC8uJarD7QPJVIVSjTfJ2vL5c1Ky1XzM+pSajZ3Fl9bYfuk9WJIYnVGdxyR&#xA;g9d6ty+KpGKtP5I1sXVtFaeaJoNPR/TmtIyUd40lif04/SdI4eMMHCkUa05MehpiqyTyj5xoXl82&#xA;rHqUQZ2vBCR8LiicofVEYRWXovFW41YMeVVU403y/r9pFeJdeYJSbqKGKz4IrG3kRKMyNcGcyFzv&#xA;8X01O+Kqeq+Un/S8+tWV/HpUsrQvd3CRJzeKFXDq8hK7PVak7ClaVCkKoK28neYX4snmu5ntlEYi&#xA;UEtuqqHLyc2L8xUUPsftVYqphpXl3W7GymtbnzBKWmS3is5ERS0RgQByv1gz8jKF3B6Df7VWxVC6&#xA;n5R16XX7i/07VmsIr+SJrlokBdI4ISBQyFwzNKsVF48Aok2rI1VUr078vvNmm6bLH/i+eORnmmeW&#xA;NBwDS3ouxRbhpqbGSNiTVuXxeGKsn0DR9btbKxF/qk0txBJI9yhKSCaMoY4Y5GZS1UXgzFCOTgno&#xA;aYqkCeRtcsVj+p6+1tcJHMUSBAnqO90Z6usjsJeEMjxgy8tzzYk4qlNj5N/MubTbFrvzUYElZ2vX&#xA;gaRmii9S5likSV5pFciOWJKbr8I5eoF3VZA/lPzNLOWHmu5WdJkmVY1QD0fX9QxtGeSkSBKcqbfE&#xA;q0T4cVR3mDy7c6sps/0zLDKZ5bqJVEYkjhe0e19NOIUlBJLzLNU70r0oql0vlLzWsjyQeaJzJCLh&#xA;reBEUBfWEYiDIzem/prG6pyHHflTlUlVBx+UPMlzYaJLf64LLWNKhvfrPIm5B+uygwu3qSfEbdY/&#xA;gLlhyHelcVWal5W89Npcj6L5mlvLm4ZF+0FiAWOFF4vyZkVGSVzxJZyw586Hkqj9R/LGG6DiDV7y&#xA;yjZ5pVhgIWJZJbxrvnwFNwW4V6lR1GKozy75OvdOlhurvVrqecQywywGVniHNv3fAsFJMUSpHzK1&#xA;biGNCW5KrdX8hm/MLR6rdW00FktiLpSTcSBJUk5TSgozV4Ubjxb4mow5HFVJvy+uGllLa9fSQXEs&#xA;0lxbzMJEIlVlRE5fYVC5ag6nwxVOdR8uQ39u8M1zM3O6W8Rn4uYmTjRIgVoq/D99cVYha/lRqcc6&#xA;ifzRqMsUdvIizrK8cpmlh+r1Kg8OCIAVHXl4U3VZXpvllrTT7a1k1C5naAXQdy54ym7cuTIrF2b0&#xA;+VEq23virH4PyqitIkh0/XNQtIYgfQijccYyIY44yo25ek8XNFk5KKlaU48VUTdflrZXWn2VhdX0&#xA;13HaCaP17oCecpLPDMhWRjVJYhbIiSbnufi3xVSh/K+FLtbyXWL2a8igmt4rp5G9XjPKrszty+M8&#xA;VK7/AA77AbUVTfzD5Qj1i2kja8lDm8t7+FZgtxAkltx4x+g9AYm4cita8jyBBpiqQt+WWpSa011J&#xA;5jvlsW+tSLBBIYPSkuEjjRYUT4FSJUJX3PuTiqb6h5HS+tLGN9RngvLK0NmL6AlJmDSQSF+bM8gP&#xA;+jU+0ftGtcVQyfl1xuXnbXtTkPrevbxvOwSJhzUBQhTkoQxDi1RWMNTkzEqplrnlRdVtzGdQureZ&#xA;bxb+2uEZS8EqRemoi5CgQfa4mtamuxxVjZ/KJQ0scWv30Wnma1lttORqQQraszhFUEV5s3xE+3hi&#xA;qaaX+XkWn6xa6iuq3kyWsLQx2srl0BaP0zIpYkhz1YmpO30qtat+W9nqdzDPNqN2TFZwWMgZg5mS&#xA;3dpUaZiKs/qlHqKbr4EjFUK35aXpfmPM2oh1t5beNy5ZgZGd1mJLf3oMhqwptQALQYqir38vBeaV&#xA;qFhcarcSfXZbSeMOBJBDJZusihIJC6mNmQBkJ3UAdQWKqyLyBPDr9rqceouq8o2v0jrEJEgeWaKF&#xA;EUkCMyzBmFdggXozYqjPMHkgazBaxPqt5CbO4lvLeRWUss8j8lPKgPCNGeNVB+y1K4qlR/KuFVSO&#xA;LWb36srNK9vPJJcI8nKRoy3qyNRVDovw0JCD4hVqqr7z8sPrUXpya9qBAeM1aRnLIks0xV+TEMXa&#xA;ccjsPhG1AAFW9E/LKTTp7S6uPMGo6heWjFlnmlcBgZ0l4tErenQIHiHw7K/sMVTLWfI9vqn1X1dQ&#xA;u1a1muJg/MM5S7NJoeRG0ZiZo17qDUGoBxVKbf8AK1oYYIB5g1AwWlultZxrIyBAsolZmCMofkC8&#xA;dGFAhC/sg4qmOjeRX0/V/wBKS6rcXV0DwLNVecP78iOUBir8WuBQ0FOCgAb1VW6x+XtrqMSn9I3c&#xA;eoQWX1G01IvzuI6sS0vL4Q0jKSpNOhNKVxVdpPkaTT9Tjvv0xd3FPrBnSVi3qPcMzBiWZgvphqLR&#xA;dqAAgVBVUtX/AC3s9TuYJ5dTvA0VpBYykuGaeO3d5VMzUHJjMUcnb7NPsswKqXx/lRKkqU8yaitq&#xA;luYfq8bmIGYCTjcFo2Vi6tIG37r88Vf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:C0DECCCA245C11DE88E3FB8C24020358</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C0DECCCB245C11DE88E3FB8C24020358</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:5A6941ADCFEADD11A338BF163782AA9B</stRef:instanceID>
            <stRef:documentID>uuid:588C34A778D311DD9C4AD2A45E86598A</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>209.902778</stDim:w>
            <stDim:h>297.038889</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Myriad-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Myriad</stFnt:fontFamily>
                  <stFnt:fontFace>Roman</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriaRom; Myriad</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=100</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -93.9155 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 93.9155 li
313.1 93.9155 li
313.1 0 li
cp
clp
[1 0 0 1 0 0 ]ct
3.99072 83.2905 mo
3.36133 83.2905 li
3.36133 81.0288 li
1.14209 81.0288 li
1.14209 83.2905 li
0.512695 83.2905 li
0.512695 78.7407 li
1.14209 78.7407 li
1.14209 80.5737 li
3.36133 80.5737 li
3.36133 78.7407 li
3.99072 78.7407 li
3.99072 83.2905 li
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
f
6.21045 81.5483 mo
5.69775 81.7046 5.43164 81.9517 5.43164 82.3608 cv
5.43164 82.6987 5.66504 82.9136 5.89893 82.9136 cv
6.31396 82.9136 6.84619 82.3999 6.76807 81.3862 cv
6.21045 81.5483 li
cp
6.56055 82.939 mo
6.3335 83.1675 6.04785 83.3687 5.74951 83.3687 cv
5.20459 83.3687 4.82813 82.978 4.82813 82.3677 cv
4.82813 81.8022 5.30811 81.4448 5.98291 81.2437 cv
6.76807 80.9956 li
6.74219 80.5991 6.4375 80.3462 6.11914 80.3462 cv
5.74316 80.3462 5.50293 80.5015 5.26904 80.6968 cv
5.04199 80.4038 li
5.3667 80.0923 5.69775 79.9624 6.15186 79.9624 cv
6.63867 79.9624 7.35205 80.1187 7.35205 81.0679 cv
7.35205 82.4976 li
7.35205 82.7446 7.38477 83.0562 7.49512 83.2905 cv
6.85889 83.2905 li
6.78125 83.1538 6.76807 82.9458 6.76807 82.7378 cv
6.56055 82.939 li
cp
f
8.89648 80.4429 mo
9.13037 80.1968 li
9.2666 80.0601 9.48047 79.9624 9.61719 79.9624 cv
9.75977 79.9624 9.97412 80.0659 10.1558 80.2808 cv
9.88965 80.6577 li
9.74658 80.5864 9.604 80.521 9.45459 80.521 cv
9.15625 80.521 8.90967 80.8198 8.90967 81.5425 cv
8.90967 83.2905 li
8.32568 83.2905 li
8.32568 80.0405 li
8.89648 80.0405 li
8.89648 80.4429 li
cp
f
10.6162 83.2905 mo
10.6162 78.5132 li
11.2002 78.5132 li
11.2002 83.2905 li
10.6162 83.2905 li
cp
f
12.6021 81.6265 mo
12.6021 82.2378 12.8096 82.9526 13.5688 82.9526 cv
14.3345 82.9526 14.542 82.2378 14.542 81.6265 cv
14.542 81.0415 14.3018 80.3784 13.5688 80.3784 cv
12.8418 80.3784 12.6021 81.0415 12.6021 81.6265 cv
cp
11.9722 81.6265 mo
11.9722 80.5737 12.751 79.9624 13.5688 79.9624 cv
14.3862 79.9624 15.1714 80.5737 15.1714 81.6265 cv
15.1714 82.6343 14.5293 83.3687 13.5688 83.3687 cv
12.6147 83.3687 11.9722 82.6343 11.9722 81.6265 cv
cp
f
18.2085 80.0405 mo
18.5264 80.814 18.8442 81.5942 19.1558 82.5229 cv
19.1689 82.5229 li
19.4219 81.5679 19.688 80.7749 19.9473 79.9761 cv
20.4858 80.0659 li
19.3438 83.2905 li
18.9351 83.2905 li
18.6108 82.4839 18.2798 81.6792 17.9619 80.7554 cv
17.9487 80.7554 li
17.6372 81.6792 17.3193 82.4839 17.0015 83.2905 cv
16.6187 83.2905 li
15.4961 80.1187 li
16.0669 79.9761 li
16.333 80.7749 16.6055 81.5679 16.8652 82.5229 cv
16.8779 82.5229 li
17.1895 81.5942 17.5073 80.814 17.8257 80.0405 cv
18.2085 80.0405 li
cp
f
20.168 84.2925 mo
20.5967 83.1479 li
20.7651 82.6792 20.8364 82.5366 21.0898 82.5366 cv
21.2324 82.5366 21.5566 82.6733 21.2324 83.2192 cv
20.5249 84.4351 li
20.168 84.2925 li
cp
f
26.644 79.1948 mo
25.0347 79.1948 li
25.0347 80.6646 li
26.6118 80.6646 li
26.6118 81.1196 li
25.0347 81.1196 li
25.0347 82.8354 li
26.9233 82.8354 li
26.9233 83.2905 li
24.4053 83.2905 li
24.4053 78.7407 li
26.644 78.7407 li
26.644 79.1948 li
cp
f
28.1753 80.4429 mo
28.4805 80.1187 28.9478 79.9624 29.2852 79.9624 cv
30.0313 79.9624 30.4336 80.3784 30.4336 81.1978 cv
30.4336 83.2905 li
29.8496 83.2905 li
29.8496 81.3208 li
29.8496 80.7104 29.5903 80.3921 29.0645 80.3921 cv
28.604 80.3921 28.1821 80.7104 28.1821 81.3335 cv
28.1821 83.2905 li
27.5981 83.2905 li
27.5981 80.0405 li
28.1753 80.0405 li
28.1753 80.4429 li
cp
f
33.7559 81.562 mo
33.7559 80.9507 33.4253 80.3784 32.7891 80.3784 cv
32.1143 80.3784 31.8354 80.9116 31.8354 81.6011 cv
31.8354 82.2964 32.1338 82.9526 32.7505 82.9526 cv
33.4575 82.9526 33.7559 82.2827 33.7559 81.562 cv
cp
34.3398 83.1733 mo
34.3398 84.4155 33.5679 84.9155 32.6919 84.9155 cv
32.2114 84.9155 31.7314 84.8237 31.355 84.5913 cv
31.5176 84.2065 li
31.9131 84.4351 32.2764 84.4995 32.6787 84.4995 cv
33.3472 84.4995 33.7559 84.0698 33.7559 83.2192 cv
33.7559 82.7769 li
33.7432 82.7769 li
33.5161 83.0952 33.1719 83.3687 32.6597 83.3687 cv
31.7642 83.3687 31.2061 82.6665 31.2061 81.6265 cv
31.2061 80.7817 31.8286 79.9624 32.7568 79.9624 cv
33.146 79.9624 33.5615 80.1577 33.7432 80.4897 cv
33.7559 80.4897 li
33.7559 80.0405 li
34.3398 80.0405 li
34.3398 83.1733 li
cp
f
35.3198 83.2905 mo
35.3198 78.5132 li
35.9038 78.5132 li
35.9038 83.2905 li
35.3198 83.2905 li
cp
f
38.0581 81.5483 mo
37.5454 81.7046 37.2793 81.9517 37.2793 82.3608 cv
37.2793 82.6987 37.5132 82.9136 37.7466 82.9136 cv
38.1621 82.9136 38.6943 82.3999 38.6162 81.3862 cv
38.0581 81.5483 li
cp
38.4087 82.939 mo
38.1816 83.1675 37.896 83.3687 37.5977 83.3687 cv
37.0522 83.3687 36.6758 82.978 36.6758 82.3677 cv
36.6758 81.8022 37.1563 81.4448 37.8311 81.2437 cv
38.6162 80.9956 li
38.5903 80.5991 38.2852 80.3462 37.9673 80.3462 cv
37.5908 80.3462 37.3511 80.5015 37.1172 80.6968 cv
36.8901 80.4038 li
37.2144 80.0923 37.5454 79.9624 38 79.9624 cv
38.4863 79.9624 39.2002 80.1187 39.2002 81.0679 cv
39.2002 82.4976 li
39.2002 82.7446 39.2329 83.0562 39.3428 83.2905 cv
38.707 83.2905 li
38.6294 83.1538 38.6162 82.9458 38.6162 82.7378 cv
38.4087 82.939 li
cp
f
40.751 80.4429 mo
41.0562 80.1187 41.5234 79.9624 41.8608 79.9624 cv
42.6069 79.9624 43.0093 80.3784 43.0093 81.1978 cv
43.0093 83.2905 li
42.4253 83.2905 li
42.4253 81.3208 li
42.4253 80.7104 42.1655 80.3921 41.6401 80.3921 cv
41.1792 80.3921 40.7578 80.7104 40.7578 81.3335 cv
40.7578 83.2905 li
40.1738 83.2905 li
40.1738 80.0405 li
40.751 80.0405 li
40.751 80.4429 li
cp
f
46.3315 81.562 mo
46.3315 80.9507 46.001 80.3784 45.3647 80.3784 cv
44.6899 80.3784 44.4111 80.9116 44.4111 81.6011 cv
44.4111 82.2964 44.7095 82.9526 45.3257 82.9526 cv
46.0332 82.9526 46.3315 82.2827 46.3315 81.562 cv
cp
46.3315 82.7769 mo
46.3188 82.7769 li
46.0918 83.0952 45.7476 83.3687 45.2153 83.3687 cv
44.3394 83.3687 43.7817 82.6665 43.7817 81.6265 cv
43.7817 80.7817 44.3916 79.9624 45.2803 79.9624 cv
45.7217 79.9624 46.1177 80.1313 46.3188 80.4429 cv
46.3315 80.4429 li
46.3315 78.5132 li
46.9155 78.5132 li
46.9155 83.2905 li
46.3315 83.2905 li
46.3315 82.7769 li
cp
f
50.5581 82.4155 mo
50.0737 82.4155 49.6846 82.0308 49.6846 81.5405 cv
49.6792 81.0562 50.0688 80.6655 50.5581 80.6655 cv
51.042 80.6655 51.4316 81.0562 51.4316 81.5405 cv
51.4316 82.0249 51.042 82.4155 50.5581 82.4155 cv
cp
f
54.2705 78.7407 mo
54.8999 78.7407 li
54.8999 82.8354 li
56.7886 82.8354 li
56.7886 83.2905 li
54.2705 83.2905 li
54.2705 78.7407 li
cp
f
57.7681 81.6265 mo
57.7681 82.2378 57.9756 82.9526 58.7349 82.9526 cv
59.5005 82.9526 59.7085 82.2378 59.7085 81.6265 cv
59.7085 81.0415 59.4683 80.3784 58.7349 80.3784 cv
58.0083 80.3784 57.7681 81.0415 57.7681 81.6265 cv
cp
57.1387 81.6265 mo
57.1387 80.5737 57.9175 79.9624 58.7349 79.9624 cv
59.5527 79.9624 60.3379 80.5737 60.3379 81.6265 cv
60.3379 82.6343 59.6953 83.3687 58.7349 83.3687 cv
57.7813 83.3687 57.1387 82.6343 57.1387 81.6265 cv
cp
f
61.6875 80.4429 mo
61.9927 80.1187 62.4595 79.9624 62.7974 79.9624 cv
63.5435 79.9624 63.9458 80.3784 63.9458 81.1978 cv
63.9458 83.2905 li
63.3618 83.2905 li
63.3618 81.3208 li
63.3618 80.7104 63.1021 80.3921 62.5767 80.3921 cv
62.1157 80.3921 61.6938 80.7104 61.6938 81.3335 cv
61.6938 83.2905 li
61.1099 83.2905 li
61.1099 80.0405 li
61.6875 80.0405 li
61.6875 80.4429 li
cp
f
67.2681 81.562 mo
67.2681 80.9507 66.937 80.3784 66.3013 80.3784 cv
65.6265 80.3784 65.3472 80.9116 65.3472 81.6011 cv
65.3472 82.2964 65.646 82.9526 66.2622 82.9526 cv
66.9697 82.9526 67.2681 82.2827 67.2681 81.562 cv
cp
67.2681 82.7769 mo
67.2549 82.7769 li
67.0278 83.0952 66.6841 83.3687 66.1519 83.3687 cv
65.2759 83.3687 64.7178 82.6665 64.7178 81.6265 cv
64.7178 80.7817 65.3276 79.9624 66.2168 79.9624 cv
66.6582 79.9624 67.0537 80.1313 67.2549 80.4429 cv
67.2681 80.4429 li
67.2681 78.5132 li
67.8521 78.5132 li
67.8521 83.2905 li
67.2681 83.2905 li
67.2681 82.7769 li
cp
f
69.2407 81.6265 mo
69.2407 82.2378 69.4482 82.9526 70.2075 82.9526 cv
70.9731 82.9526 71.1807 82.2378 71.1807 81.6265 cv
71.1807 81.0415 70.9409 80.3784 70.2075 80.3784 cv
69.481 80.3784 69.2407 81.0415 69.2407 81.6265 cv
cp
68.6113 81.6265 mo
68.6113 80.5737 69.3901 79.9624 70.2075 79.9624 cv
71.0249 79.9624 71.8101 80.5737 71.8101 81.6265 cv
71.8101 82.6343 71.168 83.3687 70.2075 83.3687 cv
69.2534 83.3687 68.6113 82.6343 68.6113 81.6265 cv
cp
f
73.1602 80.4429 mo
73.4648 80.1187 73.9321 79.9624 74.2695 79.9624 cv
75.0161 79.9624 75.4185 80.3784 75.4185 81.1978 cv
75.4185 83.2905 li
74.834 83.2905 li
74.834 81.3208 li
74.834 80.7104 74.5747 80.3921 74.0488 80.3921 cv
73.5884 80.3921 73.1665 80.7104 73.1665 81.3335 cv
73.1665 83.2905 li
72.5825 83.2905 li
72.5825 80.0405 li
73.1602 80.0405 li
73.1602 80.4429 li
cp
f
79.0732 82.4155 mo
78.5894 82.4155 78.1997 82.0308 78.1997 81.5405 cv
78.1948 81.0562 78.5845 80.6655 79.0732 80.6655 cv
79.5576 80.6655 79.9468 81.0562 79.9468 81.5405 cv
79.9468 82.0249 79.5576 82.4155 79.0732 82.4155 cv
cp
f
86.7637 83.2905 mo
86.2705 83.2905 li
85.2842 82.1069 83.5908 80.0659 83.3184 79.6694 cv
83.3052 79.6694 li
83.3052 83.2905 li
82.7861 83.2905 li
82.7861 78.7407 li
83.2534 78.7407 li
84.2524 79.9233 85.9268 81.9126 86.2319 82.3677 cv
86.2446 82.3677 li
86.2446 78.7407 li
86.7637 78.7407 li
86.7637 83.2905 li
cp
f
89.8594 81.314 mo
89.8594 80.8081 89.645 80.3784 89.1323 80.3784 cv
88.5093 80.3784 88.2627 80.8979 88.2432 81.314 cv
89.8594 81.314 li
cp
88.2046 81.7046 mo
88.1978 82.355 88.6587 82.9526 89.3013 82.9526 cv
89.5996 82.9526 89.9629 82.8413 90.1899 82.6733 cv
90.3589 82.9917 li
90.0215 83.2319 89.6191 83.3687 89.2817 83.3687 cv
88.2695 83.3687 87.6011 82.7446 87.6011 81.6011 cv
87.6011 80.4761 88.4058 79.9624 89.1387 79.9624 cv
90.125 79.9624 90.4561 80.853 90.3911 81.7046 cv
88.2046 81.7046 li
cp
f
93.4087 80.0405 mo
93.7266 80.814 94.0444 81.5942 94.356 82.5229 cv
94.3691 82.5229 li
94.6221 81.5679 94.8882 80.7749 95.1475 79.9761 cv
95.686 80.0659 li
94.5439 83.2905 li
94.1353 83.2905 li
93.811 82.4839 93.48 81.6792 93.1621 80.7554 cv
93.1489 80.7554 li
92.8374 81.6792 92.5195 82.4839 92.2017 83.2905 cv
91.8188 83.2905 li
90.6963 80.1187 li
91.2671 79.9761 li
91.5332 80.7749 91.8057 81.5679 92.0654 82.5229 cv
92.0781 82.5229 li
92.3896 81.5942 92.708 80.814 93.0259 80.0405 cv
93.4087 80.0405 li
cp
f
98.9956 83.2905 mo
98.9956 81.3208 li
97.6265 78.8062 li
98.3076 78.6753 li
99.4043 80.8335 li
100.598 78.6753 li
101.156 78.7534 li
99.625 81.3208 li
99.625 83.2905 li
98.9956 83.2905 li
cp
f
101.748 81.6265 mo
101.748 82.2378 101.956 82.9526 102.715 82.9526 cv
103.48 82.9526 103.688 82.2378 103.688 81.6265 cv
103.688 81.0415 103.448 80.3784 102.715 80.3784 cv
101.988 80.3784 101.748 81.0415 101.748 81.6265 cv
cp
101.119 81.6265 mo
101.119 80.5737 101.897 79.9624 102.715 79.9624 cv
103.532 79.9624 104.317 80.5737 104.317 81.6265 cv
104.317 82.6343 103.675 83.3687 102.715 83.3687 cv
101.761 83.3687 101.119 82.6343 101.119 81.6265 cv
cp
f
105.661 80.4429 mo
105.895 80.1968 li
106.031 80.0601 106.245 79.9624 106.381 79.9624 cv
106.524 79.9624 106.738 80.0659 106.919 80.2808 cv
106.654 80.6577 li
106.511 80.5864 106.368 80.521 106.219 80.521 cv
105.92 80.521 105.674 80.8198 105.674 81.5425 cv
105.674 83.2905 li
105.09 83.2905 li
105.09 80.0405 li
105.661 80.0405 li
105.661 80.4429 li
cp
f
107.38 78.5132 mo
107.964 78.5132 li
107.964 81.353 li
108.062 81.353 li
109.333 79.9761 li
109.768 80.2222 li
108.613 81.4312 li
109.982 83.0894 li
109.405 83.355 li
107.978 81.5161 li
107.964 81.5161 li
107.964 83.2905 li
107.38 83.2905 li
107.38 78.5132 li
cp
f
114.044 81.5405 mo
114.044 81.0562 113.655 80.6655 113.17 80.6655 cv
112.681 80.6655 112.292 81.0562 112.297 81.5405 cv
112.297 82.0308 112.686 82.4155 113.17 82.4155 cv
113.655 82.4155 114.044 82.0249 114.044 81.5405 cv
cp
f
117.513 82.8354 mo
118.123 82.8354 li
118.635 82.8354 119.076 82.5562 119.076 82.0103 cv
119.076 81.3726 118.531 81.146 118.019 81.146 cv
117.513 81.146 li
117.513 82.8354 li
cp
117.513 80.6909 mo
117.824 80.6909 li
118.369 80.6909 118.843 80.314 118.843 79.8257 cv
118.843 79.4233 118.564 79.1948 118.044 79.1948 cv
117.513 79.1948 li
117.513 80.6909 li
cp
116.883 83.2905 mo
116.883 78.7407 li
118.291 78.7407 li
118.966 78.7407 119.472 79.0786 119.472 79.6694 cv
119.472 80.4116 118.895 80.7622 118.544 80.8276 cv
118.544 80.8394 li
119.141 80.8589 119.751 81.23 119.751 81.9712 cv
119.751 82.7319 119.103 83.2905 118.162 83.2905 cv
116.883 83.2905 li
cp
f
120.984 81.6265 mo
120.984 82.2378 121.192 82.9526 121.951 82.9526 cv
122.717 82.9526 122.924 82.2378 122.924 81.6265 cv
122.924 81.0415 122.684 80.3784 121.951 80.3784 cv
121.224 80.3784 120.984 81.0415 120.984 81.6265 cv
cp
120.354 81.6265 mo
120.354 80.5737 121.133 79.9624 121.951 79.9624 cv
122.769 79.9624 123.554 80.5737 123.554 81.6265 cv
123.554 82.6343 122.912 83.3687 121.951 83.3687 cv
120.997 83.3687 120.354 82.6343 120.354 81.6265 cv
cp
f
125.851 80.5601 mo
125.617 80.4038 125.429 80.353 125.254 80.353 cv
125.046 80.353 124.78 80.4507 124.78 80.7231 cv
124.78 80.9956 125.079 81.1323 125.449 81.4116 cv
125.864 81.73 126.136 81.9976 126.136 82.4526 cv
126.136 82.9976 125.598 83.3687 125.001 83.3687 cv
124.631 83.3687 124.216 83.2065 124.001 82.9585 cv
124.287 82.6274 li
124.475 82.8032 124.729 82.9526 124.988 82.9526 cv
125.26 82.9526 125.54 82.8101 125.54 82.4917 cv
125.54 82.1147 125.202 81.9517 124.897 81.73 cv
124.527 81.4644 124.203 81.2437 124.203 80.8003 cv
124.203 80.2876 124.709 79.9624 125.28 79.9624 cv
125.598 79.9624 125.909 80.0923 126.078 80.2612 cv
125.851 80.5601 li
cp
f
127.603 79.0659 mo
127.019 79.2612 li
127.019 80.0405 li
126.564 80.0405 li
126.564 80.3784 li
127.019 80.3784 li
127.019 82.3286 li
127.019 82.9917 127.331 83.3687 127.979 83.3687 cv
128.2 83.3687 128.44 83.2905 128.641 83.1606 cv
128.499 82.8354 li
128.388 82.894 128.265 82.9458 128.051 82.9458 cv
127.694 82.9458 127.603 82.6733 127.603 82.2183 cv
127.603 80.3784 li
128.453 80.3784 li
128.453 80.0405 li
127.603 80.0405 li
127.603 79.0659 li
cp
f
129.563 81.6265 mo
129.563 82.2378 129.77 82.9526 130.529 82.9526 cv
131.295 82.9526 131.503 82.2378 131.503 81.6265 cv
131.503 81.0415 131.263 80.3784 130.529 80.3784 cv
129.803 80.3784 129.563 81.0415 129.563 81.6265 cv
cp
128.933 81.6265 mo
128.933 80.5737 129.712 79.9624 130.529 79.9624 cv
131.347 79.9624 132.132 80.5737 132.132 81.6265 cv
132.132 82.6343 131.49 83.3687 130.529 83.3687 cv
129.576 83.3687 128.933 82.6343 128.933 81.6265 cv
cp
f
133.482 80.4429 mo
133.787 80.1187 134.254 79.9624 134.591 79.9624 cv
135.338 79.9624 135.74 80.3784 135.74 81.1978 cv
135.74 83.2905 li
135.156 83.2905 li
135.156 81.3208 li
135.156 80.7104 134.896 80.3921 134.371 80.3921 cv
133.91 80.3921 133.488 80.7104 133.488 81.3335 cv
133.488 83.2905 li
132.904 83.2905 li
132.904 80.0405 li
133.482 80.0405 li
133.482 80.4429 li
cp
f
139.396 82.4155 mo
138.911 82.4155 138.522 82.0308 138.522 81.5405 cv
138.517 81.0562 138.906 80.6655 139.396 80.6655 cv
139.879 80.6655 140.269 81.0562 140.269 81.5405 cv
140.269 82.0249 139.879 82.4155 139.396 82.4155 cv
cp
f
145.236 79.4429 mo
145.016 79.2798 144.724 79.1177 144.451 79.1177 cv
143.997 79.1177 143.744 79.3843 143.744 79.7349 cv
143.744 80.0601 144.023 80.3003 144.607 80.7231 cv
145.23 81.1782 145.593 81.5942 145.593 82.1792 cv
145.593 82.8999 144.912 83.3687 144.185 83.3687 cv
143.75 83.3687 143.231 83.2124 142.907 82.894 cv
143.186 82.5171 li
143.452 82.7056 143.744 82.9136 144.172 82.9136 cv
144.62 82.9136 144.964 82.6733 144.964 82.1655 cv
144.964 81.5942 144.283 81.2241 143.913 80.9507 cv
143.536 80.6577 143.115 80.3784 143.115 79.7349 cv
143.115 79.1245 143.705 78.6626 144.412 78.6626 cv
144.886 78.6626 145.282 78.8315 145.535 79.1177 cv
145.236 79.4429 li
cp
f
147.611 81.5483 mo
147.099 81.7046 146.833 81.9517 146.833 82.3608 cv
146.833 82.6987 147.066 82.9136 147.3 82.9136 cv
147.716 82.9136 148.247 82.3999 148.169 81.3862 cv
147.611 81.5483 li
cp
147.962 82.939 mo
147.735 83.1675 147.449 83.3687 147.151 83.3687 cv
146.605 83.3687 146.229 82.978 146.229 82.3677 cv
146.229 81.8022 146.709 81.4448 147.384 81.2437 cv
148.169 80.9956 li
148.144 80.5991 147.839 80.3462 147.521 80.3462 cv
147.144 80.3462 146.904 80.5015 146.67 80.6968 cv
146.443 80.4038 li
146.768 80.0923 147.099 79.9624 147.553 79.9624 cv
148.04 79.9624 148.753 80.1187 148.753 81.0679 cv
148.753 82.4976 li
148.753 82.7446 148.786 83.0562 148.896 83.2905 cv
148.261 83.2905 li
148.183 83.1538 148.169 82.9458 148.169 82.7378 cv
147.962 82.939 li
cp
f
150.304 80.0405 mo
149.728 80.0405 li
149.728 83.2905 li
150.312 83.2905 li
150.312 81.3335 li
150.312 80.7104 150.733 80.3921 151.192 80.3921 cv
151.72 80.3921 151.978 80.7104 151.978 81.3208 cv
151.978 83.2905 li
152.563 83.2905 li
152.563 81.1978 li
152.563 80.3784 152.161 79.9624 151.413 79.9624 cv
151.077 79.9624 150.608 80.1187 150.304 80.4429 cv
150.304 80.0405 li
cp
f
157.753 79.1948 mo
156.144 79.1948 li
156.144 80.9243 li
157.722 80.9243 li
157.722 81.3794 li
156.144 81.3794 li
156.144 83.2905 li
155.515 83.2905 li
155.515 78.7407 li
157.753 78.7407 li
157.753 79.1948 li
cp
f
159.175 80.4429 mo
159.409 80.1968 li
159.544 80.0601 159.759 79.9624 159.896 79.9624 cv
160.038 79.9624 160.251 80.0659 160.433 80.2808 cv
160.167 80.6577 li
160.024 80.5864 159.882 80.521 159.733 80.521 cv
159.435 80.521 159.188 80.8198 159.188 81.5425 cv
159.188 83.2905 li
158.604 83.2905 li
158.604 80.0405 li
159.175 80.0405 li
159.175 80.4429 li
cp
f
162.614 81.3862 mo
162.692 82.3999 162.159 82.9136 161.745 82.9136 cv
161.511 82.9136 161.276 82.6987 161.276 82.3608 cv
161.276 81.9517 161.544 81.7046 162.056 81.5483 cv
162.614 81.3862 li
cp
162.614 82.7378 mo
162.614 82.9458 162.626 83.1538 162.704 83.2905 cv
163.34 83.2905 li
163.229 83.0562 163.198 82.7446 163.198 82.4976 cv
163.198 81.0679 li
163.198 80.1187 162.483 79.9624 161.997 79.9624 cv
161.544 79.9624 161.212 80.0923 160.888 80.4038 cv
161.114 80.6968 li
161.349 80.5015 161.589 80.3462 161.966 80.3462 cv
162.282 80.3462 162.587 80.5991 162.614 80.9956 cv
161.829 81.2437 li
161.153 81.4448 160.673 81.8022 160.673 82.3677 cv
160.673 82.978 161.05 83.3687 161.595 83.3687 cv
161.894 83.3687 162.179 83.1675 162.405 82.939 cv
162.614 82.7378 li
cp
f
164.749 80.4429 mo
165.053 80.1187 165.52 79.9624 165.858 79.9624 cv
166.604 79.9624 167.006 80.3784 167.006 81.1978 cv
167.006 83.2905 li
166.422 83.2905 li
166.422 81.3208 li
166.422 80.7104 166.163 80.3921 165.637 80.3921 cv
165.176 80.3921 164.754 80.7104 164.754 81.3335 cv
164.754 83.2905 li
164.17 83.2905 li
164.17 80.0405 li
164.749 80.0405 li
164.749 80.4429 li
cp
f
170.491 83.0308 mo
170.172 83.2573 169.79 83.3687 169.51 83.3687 cv
167.973 83.3687 167.778 82.1069 167.778 81.6597 cv
167.778 80.8472 168.317 79.9624 169.538 79.9624 cv
169.868 79.9624 170.167 80.0464 170.407 80.229 cv
170.211 80.5601 li
170.024 80.4702 169.784 80.3921 169.543 80.3921 cv
169.012 80.3921 168.409 80.7427 168.409 81.6265 cv
168.409 82.3022 168.752 82.939 169.538 82.939 cv
169.817 82.939 170.077 82.8687 170.329 82.7056 cv
170.491 83.0308 li
cp
f
171.737 80.0405 mo
171.737 83.2905 li
171.153 83.2905 li
171.153 80.0405 li
171.737 80.0405 li
cp
171.075 78.9683 mo
171.075 78.8062 171.211 78.6235 171.444 78.6235 cv
171.678 78.6235 171.815 78.8062 171.815 78.9683 cv
171.815 79.144 171.731 79.3647 171.444 79.3647 cv
171.159 79.3647 171.075 79.144 171.075 78.9683 cv
cp
f
174.481 80.2612 mo
174.313 80.0923 174 79.9624 173.684 79.9624 cv
173.112 79.9624 172.606 80.2876 172.606 80.8003 cv
172.606 81.2437 172.93 81.4644 173.301 81.73 cv
173.606 81.9517 173.944 82.1147 173.944 82.4917 cv
173.944 82.8101 173.665 82.9526 173.391 82.9526 cv
173.131 82.9526 172.879 82.8032 172.69 82.6274 cv
172.405 82.9585 li
172.62 83.2065 173.034 83.3687 173.405 83.3687 cv
174 83.3687 174.54 82.9976 174.54 82.4526 cv
174.54 81.9976 174.268 81.73 173.852 81.4116 cv
173.483 81.1323 173.184 80.9956 173.184 80.7231 cv
173.184 80.4507 173.45 80.353 173.657 80.353 cv
173.833 80.353 174.02 80.4038 174.254 80.5601 cv
174.481 80.2612 li
cp
f
177.778 83.0308 mo
177.459 83.2573 177.077 83.3687 176.797 83.3687 cv
175.26 83.3687 175.065 82.1069 175.065 81.6597 cv
175.065 80.8472 175.604 79.9624 176.825 79.9624 cv
177.155 79.9624 177.454 80.0464 177.694 80.229 cv
177.499 80.5601 li
177.311 80.4702 177.071 80.3921 176.831 80.3921 cv
176.299 80.3921 175.696 80.7427 175.696 81.6265 cv
175.696 82.3022 176.04 82.939 176.825 82.939 cv
177.104 82.939 177.362 82.8687 177.616 82.7056 cv
177.778 83.0308 li
cp
f
178.848 81.6265 mo
178.848 82.2378 179.057 82.9526 179.815 82.9526 cv
180.581 82.9526 180.79 82.2378 180.79 81.6265 cv
180.79 81.0415 180.549 80.3784 179.815 80.3784 cv
179.088 80.3784 178.848 81.0415 178.848 81.6265 cv
cp
178.219 81.6265 mo
178.219 80.5737 178.999 79.9624 179.815 79.9624 cv
180.633 79.9624 181.418 80.5737 181.418 81.6265 cv
181.418 82.6343 180.776 83.3687 179.815 83.3687 cv
178.862 83.3687 178.219 82.6343 178.219 81.6265 cv
cp
f
184.852 82.4155 mo
184.37 82.4155 183.979 82.0308 183.979 81.5405 cv
183.975 81.0562 184.364 80.6655 184.852 80.6655 cv
185.336 80.6655 185.727 81.0562 185.727 81.5405 cv
185.727 82.0249 185.336 82.4155 184.852 82.4155 cv
cp
f
189.506 83.2905 mo
189.506 79.1948 li
188.053 79.1948 li
188.053 78.7407 li
191.596 78.7407 li
191.596 79.1948 li
190.135 79.1948 li
190.135 83.2905 li
189.506 83.2905 li
cp
f
192.084 81.6265 mo
192.084 82.2378 192.292 82.9526 193.051 82.9526 cv
193.817 82.9526 194.024 82.2378 194.024 81.6265 cv
194.024 81.0415 193.784 80.3784 193.051 80.3784 cv
192.325 80.3784 192.084 81.0415 192.084 81.6265 cv
cp
191.456 81.6265 mo
191.456 80.5737 192.233 79.9624 193.051 79.9624 cv
193.868 79.9624 194.655 80.5737 194.655 81.6265 cv
194.655 82.6343 194.012 83.3687 193.051 83.3687 cv
192.096 83.3687 191.456 82.6343 191.456 81.6265 cv
cp
f
195.997 80.4429 mo
196.231 80.1968 li
196.368 80.0601 196.581 79.9624 196.717 79.9624 cv
196.86 79.9624 197.075 80.0659 197.256 80.2808 cv
196.991 80.6577 li
196.846 80.5864 196.704 80.521 196.555 80.521 cv
196.256 80.521 196.01 80.8198 196.01 81.5425 cv
196.01 83.2905 li
195.426 83.2905 li
195.426 80.0405 li
195.997 80.0405 li
195.997 80.4429 li
cp
f
198.125 81.6265 mo
198.125 82.2378 198.333 82.9526 199.092 82.9526 cv
199.858 82.9526 200.065 82.2378 200.065 81.6265 cv
200.065 81.0415 199.825 80.3784 199.092 80.3784 cv
198.366 80.3784 198.125 81.0415 198.125 81.6265 cv
cp
197.497 81.6265 mo
197.497 80.5737 198.274 79.9624 199.092 79.9624 cv
199.911 79.9624 200.696 80.5737 200.696 81.6265 cv
200.696 82.6343 200.053 83.3687 199.092 83.3687 cv
198.139 83.3687 197.497 82.6343 197.497 81.6265 cv
cp
f
202.045 80.4429 mo
202.35 80.1187 202.817 79.9624 203.155 79.9624 cv
203.901 79.9624 204.303 80.3784 204.303 81.1978 cv
204.303 83.2905 li
203.719 83.2905 li
203.719 81.3208 li
203.719 80.7104 203.459 80.3921 202.934 80.3921 cv
202.473 80.3921 202.051 80.7104 202.051 81.3335 cv
202.051 83.2905 li
201.467 83.2905 li
201.467 80.0405 li
202.045 80.0405 li
202.045 80.4429 li
cp
f
206.016 80.0405 mo
206.866 80.0405 li
206.866 80.3784 li
206.016 80.3784 li
206.016 82.2183 li
206.016 82.6733 206.106 82.9458 206.463 82.9458 cv
206.678 82.9458 206.801 82.894 206.911 82.8354 cv
207.055 83.1606 li
206.854 83.2905 206.614 83.3687 206.393 83.3687 cv
205.743 83.3687 205.432 82.9917 205.432 82.3286 cv
205.432 80.3784 li
204.977 80.3784 li
204.977 80.0405 li
205.432 80.0405 li
205.432 79.2612 li
206.016 79.0659 li
206.016 80.0405 li
cp
f
207.975 81.6265 mo
207.975 82.2378 208.184 82.9526 208.942 82.9526 cv
209.708 82.9526 209.917 82.2378 209.917 81.6265 cv
209.917 81.0415 209.676 80.3784 208.942 80.3784 cv
208.215 80.3784 207.975 81.0415 207.975 81.6265 cv
cp
207.346 81.6265 mo
207.346 80.5737 208.125 79.9624 208.942 79.9624 cv
209.76 79.9624 210.545 80.5737 210.545 81.6265 cv
210.545 82.6343 209.903 83.3687 208.942 83.3687 cv
207.989 83.3687 207.346 82.6343 207.346 81.6265 cv
cp
f
214.854 81.5405 mo
214.854 81.0562 214.463 80.6655 213.981 80.6655 cv
213.491 80.6655 213.102 81.0562 213.106 81.5405 cv
213.106 82.0308 213.497 82.4155 213.981 82.4155 cv
214.463 82.4155 214.854 82.0249 214.854 81.5405 cv
cp
f
219.821 79.4429 mo
219.6 79.2798 219.309 79.1177 219.036 79.1177 cv
218.583 79.1177 218.329 79.3843 218.329 79.7349 cv
218.329 80.0601 218.608 80.3003 219.192 80.7231 cv
219.815 81.1782 220.178 81.5942 220.178 82.1792 cv
220.178 82.8999 219.497 83.3687 218.77 83.3687 cv
218.334 83.3687 217.817 83.2124 217.491 82.894 cv
217.77 82.5171 li
218.036 82.7056 218.329 82.9136 218.756 82.9136 cv
219.206 82.9136 219.549 82.6733 219.549 82.1655 cv
219.549 81.5942 218.868 81.2241 218.497 80.9507 cv
218.122 80.6577 217.7 80.3784 217.7 79.7349 cv
217.7 79.1245 218.29 78.6626 218.997 78.6626 cv
219.471 78.6626 219.866 78.8315 220.12 79.1177 cv
219.821 79.4429 li
cp
f
221.196 79.9761 mo
221.528 80.8003 221.866 81.6323 222.19 82.6147 cv
222.202 82.6147 li
222.54 81.6323 222.877 80.8003 223.221 79.9761 cv
223.735 80.0991 li
222.067 83.8628 li
221.76 84.5522 221.36 84.9155 220.801 84.9155 cv
220.508 84.9155 li
220.508 84.4995 li
220.737 84.4995 li
221.139 84.4995 221.424 84.396 221.885 83.1089 cv
220.612 80.1382 li
221.196 79.9761 li
cp
f
226.608 81.562 mo
226.608 80.9507 226.278 80.3784 225.641 80.3784 cv
224.967 80.3784 224.688 80.9116 224.688 81.6011 cv
224.688 82.2964 224.987 82.9526 225.602 82.9526 cv
226.309 82.9526 226.608 82.2827 226.608 81.562 cv
cp
226.608 82.7769 mo
226.596 82.7769 li
226.368 83.0952 226.024 83.3687 225.493 83.3687 cv
224.616 83.3687 224.059 82.6665 224.059 81.6265 cv
224.059 80.7817 224.668 79.9624 225.557 79.9624 cv
225.999 79.9624 226.395 80.1313 226.596 80.4429 cv
226.608 80.4429 li
226.608 78.5132 li
227.192 78.5132 li
227.192 83.2905 li
226.608 83.2905 li
226.608 82.7769 li
cp
f
228.75 80.0405 mo
228.172 80.0405 li
228.172 83.2905 li
228.756 83.2905 li
228.756 81.3335 li
228.756 80.7104 229.178 80.3921 229.639 80.3921 cv
230.165 80.3921 230.424 80.7104 230.424 81.3208 cv
230.424 83.2905 li
231.008 83.2905 li
231.008 81.1978 li
231.008 80.3784 230.606 79.9624 229.86 79.9624 cv
229.522 79.9624 229.055 80.1187 228.75 80.4429 cv
228.75 80.0405 li
cp
f
234.038 81.314 mo
234.038 80.8081 233.825 80.3784 233.311 80.3784 cv
232.688 80.3784 232.442 80.8979 232.422 81.314 cv
234.038 81.314 li
cp
232.383 81.7046 mo
232.377 82.355 232.838 82.9526 233.481 82.9526 cv
233.778 82.9526 234.143 82.8413 234.37 82.6733 cv
234.538 82.9917 li
234.2 83.2319 233.797 83.3687 233.461 83.3687 cv
232.448 83.3687 231.78 82.7446 231.78 81.6011 cv
231.78 80.4761 232.584 79.9624 233.319 79.9624 cv
234.305 79.9624 234.635 80.853 234.571 81.7046 cv
232.383 81.7046 li
cp
f
235.485 79.9761 mo
235.817 80.8003 236.153 81.6323 236.479 82.6147 cv
236.491 82.6147 li
236.829 81.6323 237.167 80.8003 237.51 79.9761 cv
238.022 80.0991 li
236.354 83.8628 li
236.049 84.5522 235.647 84.9155 235.09 84.9155 cv
234.797 84.9155 li
234.797 84.4995 li
235.024 84.4995 li
235.426 84.4995 235.713 84.396 236.172 83.1089 cv
234.901 80.1382 li
235.485 79.9761 li
cp
f
242.104 81.5405 mo
242.104 81.0562 241.713 80.6655 241.231 80.6655 cv
240.741 80.6655 240.352 81.0562 240.356 81.5405 cv
240.356 82.0308 240.747 82.4155 241.231 82.4155 cv
241.713 82.4155 242.104 82.0249 242.104 81.5405 cv
cp
f
247.071 79.4429 mo
246.85 79.2798 246.559 79.1177 246.286 79.1177 cv
245.833 79.1177 245.579 79.3843 245.579 79.7349 cv
245.579 80.0601 245.858 80.3003 246.442 80.7231 cv
247.065 81.1782 247.428 81.5942 247.428 82.1792 cv
247.428 82.8999 246.747 83.3687 246.02 83.3687 cv
245.584 83.3687 245.067 83.2124 244.741 82.894 cv
245.02 82.5171 li
245.288 82.7056 245.579 82.9136 246.006 82.9136 cv
246.456 82.9136 246.799 82.6733 246.799 82.1655 cv
246.799 81.5942 246.118 81.2241 245.747 80.9507 cv
245.372 80.6577 244.95 80.3784 244.95 79.7349 cv
244.95 79.1245 245.54 78.6626 246.247 78.6626 cv
246.721 78.6626 247.116 78.8315 247.37 79.1177 cv
247.071 79.4429 li
cp
f
248.868 80.0405 mo
248.868 83.2905 li
248.284 83.2905 li
248.284 80.0405 li
248.868 80.0405 li
cp
248.208 78.9683 mo
248.208 78.8062 248.342 78.6235 248.577 78.6235 cv
248.811 78.6235 248.946 78.8062 248.946 78.9683 cv
248.946 79.144 248.862 79.3647 248.577 79.3647 cv
248.292 79.3647 248.208 79.144 248.208 78.9683 cv
cp
f
250.438 80.4429 mo
250.745 80.1187 251.211 79.9624 251.549 79.9624 cv
252.295 79.9624 252.698 80.3784 252.698 81.1978 cv
252.698 83.2905 li
252.114 83.2905 li
252.114 81.3208 li
252.114 80.7104 251.854 80.3921 251.329 80.3921 cv
250.868 80.3921 250.446 80.7104 250.446 81.3335 cv
250.446 83.2905 li
249.862 83.2905 li
249.862 80.0405 li
250.438 80.0405 li
250.438 80.4429 li
cp
f
256.02 81.562 mo
256.02 80.9507 255.688 80.3784 255.053 80.3784 cv
254.377 80.3784 254.098 80.9116 254.098 81.6011 cv
254.098 82.2964 254.397 82.9526 255.014 82.9526 cv
255.721 82.9526 256.02 82.2827 256.02 81.562 cv
cp
256.604 83.1733 mo
256.604 84.4155 255.831 84.9155 254.956 84.9155 cv
254.475 84.9155 253.995 84.8237 253.618 84.5913 cv
253.78 84.2065 li
254.176 84.4351 254.54 84.4995 254.942 84.4995 cv
255.61 84.4995 256.02 84.0698 256.02 83.2192 cv
256.02 82.7769 li
256.006 82.7769 li
255.78 83.0952 255.436 83.3687 254.922 83.3687 cv
254.028 83.3687 253.469 82.6665 253.469 81.6265 cv
253.469 80.7817 254.092 79.9624 255.02 79.9624 cv
255.409 79.9624 255.825 80.1577 256.006 80.4897 cv
256.02 80.4897 li
256.02 80.0405 li
256.604 80.0405 li
256.604 83.1733 li
cp
f
258.745 81.5483 mo
258.233 81.7046 257.965 81.9517 257.965 82.3608 cv
257.965 82.6987 258.2 82.9136 258.434 82.9136 cv
258.848 82.9136 259.381 82.3999 259.303 81.3862 cv
258.745 81.5483 li
cp
259.094 82.939 mo
258.868 83.1675 258.583 83.3687 258.284 83.3687 cv
257.739 83.3687 257.362 82.978 257.362 82.3677 cv
257.362 81.8022 257.842 81.4448 258.518 81.2437 cv
259.303 80.9956 li
259.276 80.5991 258.971 80.3462 258.655 80.3462 cv
258.278 80.3462 258.038 80.5015 257.803 80.6968 cv
257.577 80.4038 li
257.901 80.0923 258.233 79.9624 258.686 79.9624 cv
259.172 79.9624 259.887 80.1187 259.887 81.0679 cv
259.887 82.4976 li
259.887 82.7446 259.918 83.0562 260.03 83.2905 cv
259.393 83.2905 li
259.315 83.1538 259.303 82.9458 259.303 82.7378 cv
259.094 82.939 li
cp
f
263.366 81.5747 mo
263.366 80.9829 263.067 80.3784 262.463 80.3784 cv
261.801 80.3784 261.444 80.8921 261.444 81.73 cv
261.444 82.355 261.729 82.9526 262.456 82.9526 cv
263.157 82.9526 263.366 82.1655 263.366 81.5747 cv
cp
261.444 80.5474 mo
261.458 80.5474 li
261.698 80.1577 262.159 79.9624 262.522 79.9624 cv
263.788 79.9624 263.995 81.1001 263.995 81.5679 cv
263.995 82.5562 263.411 83.3687 262.456 83.3687 cv
262.047 83.3687 261.698 83.1733 261.458 82.8608 cv
261.444 82.8608 li
261.444 84.9155 li
260.86 84.9155 li
260.86 80.0405 li
261.444 80.0405 li
261.444 80.5474 li
cp
f
265.176 81.6265 mo
265.176 82.2378 265.383 82.9526 266.143 82.9526 cv
266.909 82.9526 267.116 82.2378 267.116 81.6265 cv
267.116 81.0415 266.875 80.3784 266.143 80.3784 cv
265.415 80.3784 265.176 81.0415 265.176 81.6265 cv
cp
264.545 81.6265 mo
264.545 80.5737 265.325 79.9624 266.143 79.9624 cv
266.959 79.9624 267.745 80.5737 267.745 81.6265 cv
267.745 82.6343 267.102 83.3687 266.143 83.3687 cv
265.188 83.3687 264.545 82.6343 264.545 81.6265 cv
cp
f
269.088 80.4429 mo
269.323 80.1968 li
269.458 80.0601 269.672 79.9624 269.809 79.9624 cv
269.952 79.9624 270.165 80.0659 270.346 80.2808 cv
270.081 80.6577 li
269.938 80.5864 269.795 80.521 269.647 80.521 cv
269.348 80.521 269.102 80.8198 269.102 81.5425 cv
269.102 83.2905 li
268.518 83.2905 li
268.518 80.0405 li
269.088 80.0405 li
269.088 80.4429 li
cp
f
272.846 81.314 mo
272.846 80.8081 272.631 80.3784 272.118 80.3784 cv
271.495 80.3784 271.249 80.8979 271.229 81.314 cv
272.846 81.314 li
cp
271.19 81.7046 mo
271.184 82.355 271.645 82.9526 272.288 82.9526 cv
272.586 82.9526 272.95 82.8413 273.176 82.6733 cv
273.344 82.9917 li
273.008 83.2319 272.606 83.3687 272.268 83.3687 cv
271.256 83.3687 270.586 82.7446 270.586 81.6011 cv
270.586 80.4761 271.391 79.9624 272.125 79.9624 cv
273.112 79.9624 273.442 80.853 273.377 81.7046 cv
271.19 81.7046 li
cp
f
276.793 82.4155 mo
276.309 82.4155 275.918 82.0308 275.918 81.5405 cv
275.915 81.0562 276.303 80.6655 276.793 80.6655 cv
277.276 80.6655 277.667 81.0562 277.667 81.5405 cv
277.667 82.0249 277.276 82.4155 276.793 82.4155 cv
cp
f
283.983 83.2905 mo
283.354 83.2905 li
283.354 81.0288 li
281.135 81.0288 li
281.135 83.2905 li
280.504 83.2905 li
280.504 78.7407 li
281.135 78.7407 li
281.135 80.5737 li
283.354 80.5737 li
283.354 78.7407 li
283.983 78.7407 li
283.983 83.2905 li
cp
f
285.45 81.6265 mo
285.45 82.2378 285.657 82.9526 286.417 82.9526 cv
287.182 82.9526 287.389 82.2378 287.389 81.6265 cv
287.389 81.0415 287.149 80.3784 286.417 80.3784 cv
285.69 80.3784 285.45 81.0415 285.45 81.6265 cv
cp
284.821 81.6265 mo
284.821 80.5737 285.598 79.9624 286.417 79.9624 cv
287.235 79.9624 288.02 80.5737 288.02 81.6265 cv
288.02 82.6343 287.377 83.3687 286.417 83.3687 cv
285.463 83.3687 284.821 82.6343 284.821 81.6265 cv
cp
f
289.37 80.4429 mo
289.674 80.1187 290.141 79.9624 290.479 79.9624 cv
291.225 79.9624 291.627 80.3784 291.627 81.1978 cv
291.627 83.2905 li
291.043 83.2905 li
291.043 81.3208 li
291.043 80.7104 290.784 80.3921 290.258 80.3921 cv
289.797 80.3921 289.375 80.7104 289.375 81.3335 cv
289.375 83.2905 li
288.792 83.2905 li
288.792 80.0405 li
289.37 80.0405 li
289.37 80.4429 li
cp
f
294.95 81.562 mo
294.95 80.9507 294.62 80.3784 293.983 80.3784 cv
293.307 80.3784 293.03 80.9116 293.03 81.6011 cv
293.03 82.2964 293.327 82.9526 293.944 82.9526 cv
294.651 82.9526 294.95 82.2827 294.95 81.562 cv
cp
295.534 83.1733 mo
295.534 84.4155 294.762 84.9155 293.885 84.9155 cv
293.405 84.9155 292.924 84.8237 292.549 84.5913 cv
292.711 84.2065 li
293.106 84.4351 293.469 84.4995 293.872 84.4995 cv
294.542 84.4995 294.95 84.0698 294.95 83.2192 cv
294.95 82.7769 li
294.936 82.7769 li
294.709 83.0952 294.366 83.3687 293.854 83.3687 cv
292.958 83.3687 292.399 82.6665 292.399 81.6265 cv
292.399 80.7817 293.022 79.9624 293.95 79.9624 cv
294.34 79.9624 294.754 80.1577 294.936 80.4897 cv
294.95 80.4897 li
294.95 80.0405 li
295.534 80.0405 li
295.534 83.1733 li
cp
f
299.102 80.7749 mo
301.069 78.6753 li
301.497 78.9546 li
299.739 80.8081 li
301.731 83.1147 li
301.114 83.355 li
299.116 80.9312 li
299.102 80.9312 li
299.102 83.2905 li
298.473 83.2905 li
298.473 78.7407 li
299.102 78.7407 li
299.102 80.7749 li
cp
f
302.698 81.6265 mo
302.698 82.2378 302.905 82.9526 303.665 82.9526 cv
304.43 82.9526 304.637 82.2378 304.637 81.6265 cv
304.637 81.0415 304.397 80.3784 303.665 80.3784 cv
302.938 80.3784 302.698 81.0415 302.698 81.6265 cv
cp
302.069 81.6265 mo
302.069 80.5737 302.846 79.9624 303.665 79.9624 cv
304.481 79.9624 305.266 80.5737 305.266 81.6265 cv
305.266 82.6343 304.625 83.3687 303.665 83.3687 cv
302.709 83.3687 302.069 82.6343 302.069 81.6265 cv
cp
f
306.618 80.4429 mo
306.922 80.1187 307.389 79.9624 307.727 79.9624 cv
308.473 79.9624 308.875 80.3784 308.875 81.1978 cv
308.875 83.2905 li
308.292 83.2905 li
308.292 81.3208 li
308.292 80.7104 308.032 80.3921 307.506 80.3921 cv
307.045 80.3921 306.624 80.7104 306.624 81.3335 cv
306.624 83.2905 li
306.04 83.2905 li
306.04 80.0405 li
306.618 80.0405 li
306.618 80.4429 li
cp
f
312.198 81.562 mo
312.198 80.9507 311.866 80.3784 311.231 80.3784 cv
310.555 80.3784 310.276 80.9116 310.276 81.6011 cv
310.276 82.2964 310.575 82.9526 311.192 82.9526 cv
311.899 82.9526 312.198 82.2827 312.198 81.562 cv
cp
312.782 83.1733 mo
312.782 84.4155 312.008 84.9155 311.133 84.9155 cv
310.653 84.9155 310.172 84.8237 309.795 84.5913 cv
309.959 84.2065 li
310.354 84.4351 310.717 84.4995 311.12 84.4995 cv
311.788 84.4995 312.198 84.0698 312.198 83.2192 cv
312.198 82.7769 li
312.184 82.7769 li
311.958 83.0952 311.614 83.3687 311.1 83.3687 cv
310.206 83.3687 309.647 82.6665 309.647 81.6265 cv
309.647 80.7817 310.27 79.9624 311.198 79.9624 cv
311.586 79.9624 312.002 80.1577 312.184 80.4897 cv
312.198 80.4897 li
312.198 80.0405 li
312.782 80.0405 li
312.782 83.1733 li
cp
f
1.45361 92.2905 mo
1.45361 88.1948 li
0 88.1948 li
0 87.7397 li
3.54346 87.7397 li
3.54346 88.1948 li
2.08301 88.1948 li
2.08301 92.2905 li
1.45361 92.2905 li
cp
f
3.99902 90.6265 mo
3.99902 91.2378 4.20654 91.9526 4.96582 91.9526 cv
5.73145 91.9526 5.93896 91.2378 5.93896 90.6265 cv
5.93896 90.0425 5.69922 89.3784 4.96582 89.3784 cv
4.23877 89.3784 3.99902 90.0425 3.99902 90.6265 cv
cp
3.36963 90.6265 mo
3.36963 89.5737 4.14795 88.9624 4.96582 88.9624 cv
5.7832 88.9624 6.56836 89.5737 6.56836 90.6265 cv
6.56836 91.6343 5.92627 92.3687 4.96582 92.3687 cv
4.01172 92.3687 3.36963 91.6343 3.36963 90.6265 cv
cp
f
7.30811 87.5132 mo
7.89258 87.5132 li
7.89258 90.353 li
7.98975 90.353 li
9.26172 88.9761 li
9.69629 89.2222 li
8.5415 90.4312 li
9.91064 92.0894 li
9.33301 92.355 li
7.90527 90.5151 li
7.89258 90.5151 li
7.89258 92.2905 li
7.30811 92.2905 li
7.30811 87.5132 li
cp
f
10.5659 88.9761 mo
10.8965 89.8003 11.2344 90.6323 11.5586 91.6147 cv
11.5718 91.6147 li
11.9092 90.6323 12.2466 89.8003 12.5903 88.9761 cv
13.103 89.0991 li
11.4351 92.8628 li
11.1304 93.5522 10.728 93.9155 10.1699 93.9155 cv
9.87793 93.9155 li
9.87793 93.4995 li
10.105 93.4995 li
10.5073 93.4995 10.793 93.396 11.2534 92.1089 cv
9.98193 89.1382 li
10.5659 88.9761 li
cp
f
14.0244 90.6265 mo
14.0244 91.2378 14.2319 91.9526 14.9912 91.9526 cv
15.7568 91.9526 15.9648 91.2378 15.9648 90.6265 cv
15.9648 90.0425 15.7246 89.3784 14.9912 89.3784 cv
14.2646 89.3784 14.0244 90.0425 14.0244 90.6265 cv
cp
13.395 90.6265 mo
13.395 89.5737 14.1738 88.9624 14.9912 88.9624 cv
15.8091 88.9624 16.5942 89.5737 16.5942 90.6265 cv
16.5942 91.6343 15.9517 92.3687 14.9912 92.3687 cv
14.0376 92.3687 13.395 91.6343 13.395 90.6265 cv
cp
f
19.9639 91.4155 mo
19.4795 91.4155 19.0903 91.0308 19.0903 90.5405 cv
19.0854 90.0562 19.4746 89.6655 19.9639 89.6655 cv
20.4482 89.6655 20.8374 90.0562 20.8374 90.5405 cv
20.8374 91.0249 20.4482 91.4155 19.9639 91.4155 cv
cp
f
25.7476 88.4429 mo
25.5269 88.2808 25.2349 88.1167 24.9624 88.1167 cv
24.5083 88.1167 24.2549 88.3843 24.2549 88.7358 cv
24.2549 89.0601 24.5342 89.3003 25.1182 89.7222 cv
25.7412 90.1772 26.1045 90.5933 26.1045 91.1792 cv
26.1045 91.8999 25.4229 92.3687 24.6963 92.3687 cv
24.2617 92.3687 23.7422 92.2124 23.418 91.894 cv
23.6968 91.5171 li
23.9629 91.7046 24.2549 91.9136 24.6831 91.9136 cv
25.1309 91.9136 25.4751 91.6733 25.4751 91.1655 cv
25.4751 90.5933 24.7935 90.2241 24.4238 89.9507 cv
24.0474 89.6577 23.6255 89.3784 23.6255 88.7358 cv
23.6255 88.1245 24.2163 87.6616 24.9233 87.6616 cv
25.397 87.6616 25.793 87.8315 26.0459 88.1167 cv
25.7476 88.4429 li
cp
f
28.9658 90.314 mo
28.9658 89.8081 28.752 89.3784 28.2393 89.3784 cv
27.6162 89.3784 27.3696 89.8979 27.3501 90.314 cv
28.9658 90.314 li
cp
27.3115 90.7046 mo
27.3047 91.355 27.7656 91.9526 28.4082 91.9526 cv
28.7065 91.9526 29.0698 91.8413 29.2969 91.6733 cv
29.4658 91.9917 li
29.1284 92.2319 28.7261 92.3687 28.3887 92.3687 cv
27.376 92.3687 26.708 91.7437 26.708 90.6011 cv
26.708 89.4761 27.5127 88.9624 28.2456 88.9624 cv
29.2319 88.9624 29.563 89.853 29.498 90.7046 cv
27.3115 90.7046 li
cp
f
30.627 90.6265 mo
30.627 91.2378 30.835 91.9526 31.5942 91.9526 cv
32.3599 91.9526 32.5674 91.2378 32.5674 90.6265 cv
32.5674 90.0425 32.3271 89.3784 31.5942 89.3784 cv
30.8672 89.3784 30.627 90.0425 30.627 90.6265 cv
cp
29.9976 90.6265 mo
29.9976 89.5737 30.7764 88.9624 31.5942 88.9624 cv
32.4116 88.9624 33.1968 89.5737 33.1968 90.6265 cv
33.1968 91.6343 32.5542 92.3687 31.5942 92.3687 cv
30.6401 92.3687 29.9976 91.6343 29.9976 90.6265 cv
cp
f
36.104 91.9136 mo
35.7729 92.1987 35.481 92.3687 35.0591 92.3687 cv
34.313 92.3687 33.9106 91.9526 33.9106 91.1343 cv
33.9106 89.0405 li
34.4946 89.0405 li
34.4946 91.0034 li
34.4946 91.6147 34.7544 91.939 35.2798 91.939 cv
35.7275 91.939 36.0977 91.5698 36.0977 90.939 cv
36.0977 89.0405 li
36.6816 89.0405 li
36.6816 92.2905 li
36.104 92.2905 li
36.104 91.9136 li
cp
f
37.6416 92.2905 mo
37.6416 87.5132 li
38.2261 87.5132 li
38.2261 92.2905 li
37.6416 92.2905 li
cp
f
41.8164 91.4155 mo
41.332 91.4155 40.9429 91.0308 40.9429 90.5405 cv
40.9375 90.0562 41.3271 89.6655 41.8164 89.6655 cv
42.3003 89.6655 42.6899 90.0562 42.6899 90.5405 cv
42.6899 91.0249 42.3003 91.4155 41.8164 91.4155 cv
cp
f
46.4121 92.2905 mo
46.4121 88.1948 li
44.959 88.1948 li
44.959 87.7397 li
48.502 87.7397 li
48.502 88.1948 li
47.042 88.1948 li
47.042 92.2905 li
46.4121 92.2905 li
cp
f
49.7104 90.5483 mo
49.1978 90.7046 48.9316 90.9507 48.9316 91.3608 cv
48.9316 91.6987 49.165 91.9136 49.3989 91.9136 cv
49.814 91.9136 50.3462 91.3999 50.2681 90.3862 cv
49.7104 90.5483 li
cp
50.0605 91.939 mo
49.8335 92.1675 49.5479 92.3687 49.2495 92.3687 cv
48.7046 92.3687 48.3281 91.978 48.3281 91.3667 cv
48.3281 90.8022 48.8081 90.4448 49.4829 90.2437 cv
50.2681 89.9956 li
50.2422 89.5991 49.9375 89.3452 49.6196 89.3452 cv
49.2432 89.3452 49.0029 89.5015 48.7695 89.6968 cv
48.542 89.4038 li
48.8667 89.0933 49.1978 88.9624 49.6519 88.9624 cv
50.1387 88.9624 50.8525 89.1187 50.8525 90.0679 cv
50.8525 91.4976 li
50.8525 91.7437 50.8848 92.0562 50.9951 92.2905 cv
50.3594 92.2905 li
50.2813 92.1538 50.2681 91.9468 50.2681 91.7378 cv
50.0605 91.939 li
cp
f
52.3774 89.0405 mo
52.3774 92.2905 li
51.7935 92.2905 li
51.7935 89.0405 li
52.3774 89.0405 li
cp
51.7153 87.9683 mo
51.7153 87.8062 51.8516 87.6226 52.0854 87.6226 cv
52.3188 87.6226 52.4551 87.8062 52.4551 87.9683 cv
52.4551 88.144 52.3706 88.3647 52.0854 88.3647 cv
51.7998 88.3647 51.7153 88.144 51.7153 87.9683 cv
cp
f
55.8423 90.5737 mo
55.8423 89.9839 55.5439 89.3784 54.9404 89.3784 cv
54.2783 89.3784 53.9214 89.8921 53.9214 90.73 cv
53.9214 91.355 54.207 91.9526 54.9341 91.9526 cv
55.6348 91.9526 55.8423 91.1655 55.8423 90.5737 cv
cp
53.9214 89.5483 mo
53.9346 89.5483 li
54.1748 89.1577 54.6353 88.9624 54.9985 88.9624 cv
56.2642 88.9624 56.4717 90.0991 56.4717 90.5679 cv
56.4717 91.5562 55.8877 92.3687 54.9341 92.3687 cv
54.5249 92.3687 54.1748 92.1733 53.9346 91.8608 cv
53.9214 91.8608 li
53.9214 93.9155 li
53.3374 93.9155 li
53.3374 89.0405 li
53.9214 89.0405 li
53.9214 89.5483 li
cp
f
59.249 90.314 mo
59.249 89.8081 59.0347 89.3784 58.5225 89.3784 cv
57.8994 89.3784 57.6528 89.8979 57.6333 90.314 cv
59.249 90.314 li
cp
57.5942 90.7046 mo
57.5879 91.355 58.0483 91.9526 58.6909 91.9526 cv
58.9893 91.9526 59.353 91.8413 59.5801 91.6733 cv
59.7485 91.9917 li
59.4111 92.2319 59.0088 92.3687 58.6714 92.3687 cv
57.6592 92.3687 56.9907 91.7437 56.9907 90.6011 cv
56.9907 89.4761 57.7954 88.9624 58.5288 88.9624 cv
59.5151 88.9624 59.8462 89.853 59.7813 90.7046 cv
57.5942 90.7046 li
cp
f
61.0854 89.0405 mo
61.0854 92.2905 li
60.5015 92.2905 li
60.5015 89.0405 li
61.0854 89.0405 li
cp
60.4233 87.9683 mo
60.4233 87.8062 60.5596 87.6226 60.7935 87.6226 cv
61.0269 87.6226 61.1631 87.8062 61.1631 87.9683 cv
61.1631 88.144 61.0791 88.3647 60.7935 88.3647 cv
60.5078 88.3647 60.4233 88.144 60.4233 87.9683 cv
cp
f
64.6758 91.4155 mo
64.1914 91.4155 63.8022 91.0308 63.8022 90.5405 cv
63.7974 90.0562 64.1865 89.6655 64.6758 89.6655 cv
65.1597 89.6655 65.5493 90.0562 65.5493 90.5405 cv
65.5493 91.0249 65.1597 91.4155 64.6758 91.4155 cv
cp
f
72.3086 92.2905 mo
71.8154 92.2905 li
70.8291 91.1069 69.1357 89.0659 68.8633 88.6694 cv
68.8501 88.6694 li
68.8501 92.2905 li
68.3311 92.2905 li
68.3311 87.7397 li
68.7983 87.7397 li
69.7974 88.9233 71.4717 90.9116 71.7769 91.3667 cv
71.7896 91.3667 li
71.7896 87.7397 li
72.3086 87.7397 li
72.3086 92.2905 li
cp
f
75.3716 90.314 mo
75.3716 89.8081 75.1572 89.3784 74.6445 89.3784 cv
74.022 89.3784 73.7754 89.8979 73.7559 90.314 cv
75.3716 90.314 li
cp
73.7168 90.7046 mo
73.7104 91.355 74.1709 91.9526 74.8135 91.9526 cv
75.1118 91.9526 75.4756 91.8413 75.7026 91.6733 cv
75.8711 91.9917 li
75.5337 92.2319 75.1313 92.3687 74.7939 92.3687 cv
73.7817 92.3687 73.1133 91.7437 73.1133 90.6011 cv
73.1133 89.4761 73.918 88.9624 74.6514 88.9624 cv
75.6377 88.9624 75.9688 89.853 75.9038 90.7046 cv
73.7168 90.7046 li
cp
f
78.8887 89.0405 mo
79.2065 89.814 79.5244 90.5933 79.8359 91.5229 cv
79.8491 91.5229 li
80.1021 90.5679 80.3682 89.7749 80.6274 88.9761 cv
81.166 89.0659 li
80.0239 92.2905 li
79.6152 92.2905 li
79.291 91.4839 78.96 90.6792 78.6421 89.7554 cv
78.6289 89.7554 li
78.3174 90.6792 77.9995 91.4839 77.6816 92.2905 cv
77.2988 92.2905 li
76.1763 89.1187 li
76.7471 88.9761 li
77.0132 89.7749 77.2856 90.5679 77.5454 91.5229 cv
77.5581 91.5229 li
77.8696 90.5933 78.1875 89.814 78.5059 89.0405 cv
78.8887 89.0405 li
cp
f
84.2354 91.8354 mo
84.936 91.8354 li
86.2144 91.8354 86.8311 91.1987 86.8311 89.8667 cv
86.8311 88.8511 86.2666 88.1948 85.0723 88.1948 cv
84.2354 88.1948 li
84.2354 91.8354 li
cp
85.0596 87.7397 mo
86.8896 87.7397 87.5254 88.7866 87.5254 89.8784 cv
87.5254 91.3862 86.5649 92.2905 84.9556 92.2905 cv
83.606 92.2905 li
83.606 87.7397 li
85.0596 87.7397 li
cp
f
90.3545 90.314 mo
90.3545 89.8081 90.1406 89.3784 89.6279 89.3784 cv
89.0049 89.3784 88.7583 89.8979 88.7388 90.314 cv
90.3545 90.314 li
cp
88.6997 90.7046 mo
88.6934 91.355 89.1543 91.9526 89.7964 91.9526 cv
90.0952 91.9526 90.4585 91.8413 90.6855 91.6733 cv
90.854 91.9917 li
90.5166 92.2319 90.1143 92.3687 89.7769 92.3687 cv
88.7646 92.3687 88.0962 91.7437 88.0962 90.6011 cv
88.0962 89.4761 88.9009 88.9624 89.6343 88.9624 cv
90.6206 88.9624 90.9517 89.853 90.8867 90.7046 cv
88.6997 90.7046 li
cp
f
91.6069 92.2905 mo
91.6069 87.5132 li
92.1909 87.5132 li
92.1909 92.2905 li
91.6069 92.2905 li
cp
f
93.7285 89.4429 mo
94.0337 89.1187 94.501 88.9624 94.8384 88.9624 cv
95.5845 88.9624 95.9868 89.3784 95.9868 90.1968 cv
95.9868 92.2905 li
95.4028 92.2905 li
95.4028 90.3218 li
95.4028 89.7104 95.1436 89.3921 94.6177 89.3921 cv
94.1572 89.3921 93.7354 89.7104 93.7354 90.3335 cv
93.7354 92.2905 li
93.1514 92.2905 li
93.1514 87.5132 li
93.7285 87.5132 li
93.7285 89.4429 li
cp
f
97.5313 89.0405 mo
97.5313 92.2905 li
96.9473 92.2905 li
96.9473 89.0405 li
97.5313 89.0405 li
cp
96.8696 87.9683 mo
96.8696 87.8062 97.0059 87.6226 97.2393 87.6226 cv
97.4731 87.6226 97.6094 87.8062 97.6094 87.9683 cv
97.6094 88.144 97.5249 88.3647 97.2393 88.3647 cv
96.9536 88.3647 96.8696 88.144 96.8696 87.9683 cv
cp
f
101.122 91.4155 mo
100.637 91.4155 100.248 91.0308 100.248 90.5405 cv
100.243 90.0562 100.632 89.6655 101.122 89.6655 cv
101.606 89.6655 101.995 90.0562 101.995 90.5405 cv
101.995 91.0249 101.606 91.4155 101.122 91.4155 cv
cp
f
108.209 88.5132 mo
107.996 88.3394 107.509 88.1167 107.022 88.1167 cv
105.899 88.1167 105.238 88.9233 105.238 89.9897 cv
105.238 91.1401 106.029 91.9136 107.022 91.9136 cv
107.515 91.9136 107.905 91.7573 108.17 91.5757 cv
108.417 91.9526 li
108.112 92.1597 107.574 92.3687 106.99 92.3687 cv
105.367 92.3687 104.543 91.2573 104.543 90.0034 cv
104.543 88.8589 105.439 87.6616 107.067 87.6616 cv
107.716 87.6616 108.17 87.8901 108.469 88.1245 cv
108.209 88.5132 li
cp
f
110.312 90.5483 mo
109.799 90.7046 109.533 90.9507 109.533 91.3608 cv
109.533 91.6987 109.767 91.9136 110 91.9136 cv
110.416 91.9136 110.948 91.3999 110.87 90.3862 cv
110.312 90.5483 li
cp
110.663 91.939 mo
110.435 92.1675 110.15 92.3687 109.851 92.3687 cv
109.306 92.3687 108.93 91.978 108.93 91.3667 cv
108.93 90.8022 109.41 90.4448 110.085 90.2437 cv
110.87 89.9956 li
110.844 89.5991 110.539 89.3452 110.221 89.3452 cv
109.845 89.3452 109.604 89.5015 109.371 89.6968 cv
109.144 89.4038 li
109.468 89.0933 109.799 88.9624 110.253 88.9624 cv
110.74 88.9624 111.454 89.1187 111.454 90.0679 cv
111.454 91.4976 li
111.454 91.7437 111.486 92.0562 111.597 92.2905 cv
110.961 92.2905 li
110.883 92.1538 110.87 91.9468 110.87 91.7378 cv
110.663 91.939 li
cp
f
114.9 90.5737 mo
114.9 89.9839 114.601 89.3784 113.998 89.3784 cv
113.336 89.3784 112.979 89.8921 112.979 90.73 cv
112.979 91.355 113.265 91.9526 113.991 91.9526 cv
114.692 91.9526 114.9 91.1655 114.9 90.5737 cv
cp
112.979 89.5483 mo
112.992 89.5483 li
113.232 89.1577 113.693 88.9624 114.056 88.9624 cv
115.322 88.9624 115.529 90.0991 115.529 90.5679 cv
115.529 91.5562 114.945 92.3687 113.991 92.3687 cv
113.583 92.3687 113.232 92.1733 112.992 91.8608 cv
112.979 91.8608 li
112.979 93.9155 li
112.395 93.9155 li
112.395 89.0405 li
112.979 89.0405 li
112.979 89.5483 li
cp
f
118.307 90.314 mo
118.307 89.8081 118.092 89.3784 117.58 89.3784 cv
116.957 89.3784 116.71 89.8979 116.69 90.314 cv
118.307 90.314 li
cp
116.652 90.7046 mo
116.645 91.355 117.106 91.9526 117.749 91.9526 cv
118.047 91.9526 118.41 91.8413 118.637 91.6733 cv
118.806 91.9917 li
118.469 92.2319 118.066 92.3687 117.729 92.3687 cv
116.717 92.3687 116.048 91.7437 116.048 90.6011 cv
116.048 89.4761 116.853 88.9624 117.586 88.9624 cv
118.572 88.9624 118.903 89.853 118.838 90.7046 cv
116.652 90.7046 li
cp
f
122.427 92.2905 mo
122.427 88.1948 li
120.973 88.1948 li
120.973 87.7397 li
124.516 87.7397 li
124.516 88.1948 li
123.056 88.1948 li
123.056 92.2905 li
122.427 92.2905 li
cp
f
124.972 90.6265 mo
124.972 91.2378 125.18 91.9526 125.939 91.9526 cv
126.705 91.9526 126.912 91.2378 126.912 90.6265 cv
126.912 90.0425 126.672 89.3784 125.939 89.3784 cv
125.212 89.3784 124.972 90.0425 124.972 90.6265 cv
cp
124.343 90.6265 mo
124.343 89.5737 125.121 88.9624 125.939 88.9624 cv
126.756 88.9624 127.542 89.5737 127.542 90.6265 cv
127.542 91.6343 126.899 92.3687 125.939 92.3687 cv
124.985 92.3687 124.343 91.6343 124.343 90.6265 cv
cp
f
130.546 89.0405 mo
130.864 89.814 131.182 90.5933 131.494 91.5229 cv
131.506 91.5229 li
131.76 90.5679 132.025 89.7749 132.285 88.9761 cv
132.824 89.0659 li
131.682 92.2905 li
131.273 92.2905 li
130.948 91.4839 130.618 90.6792 130.299 89.7554 cv
130.287 89.7554 li
129.975 90.6792 129.657 91.4839 129.339 92.2905 cv
128.956 92.2905 li
127.833 89.1187 li
128.405 88.9761 li
128.671 89.7749 128.943 90.5679 129.203 91.5229 cv
129.216 91.5229 li
129.527 90.5933 129.845 89.814 130.163 89.0405 cv
130.546 89.0405 li
cp
f
133.914 89.4429 mo
134.219 89.1187 134.686 88.9624 135.023 88.9624 cv
135.77 88.9624 136.172 89.3784 136.172 90.1968 cv
136.172 92.2905 li
135.588 92.2905 li
135.588 90.3218 li
135.588 89.7104 135.329 89.3921 134.803 89.3921 cv
134.342 89.3921 133.92 89.7104 133.92 90.3335 cv
133.92 92.2905 li
133.336 92.2905 li
133.336 89.0405 li
133.914 89.0405 li
133.914 89.4429 li
cp
f
139.762 91.4155 mo
139.278 91.4155 138.889 91.0308 138.889 90.5405 cv
138.884 90.0562 139.273 89.6655 139.762 89.6655 cv
140.247 89.6655 140.636 90.0562 140.636 90.5405 cv
140.636 91.0249 140.247 91.4155 139.762 91.4155 cv
cp
f
148.349 92.2905 mo
147.72 92.2905 li
147.72 88.5854 li
147.707 88.5854 li
147.525 89.1187 146.494 91.1265 145.883 92.2905 cv
145.63 92.2905 li
145.066 91.1265 144.125 89.1831 143.95 88.5854 cv
143.937 88.5854 li
143.937 92.2905 li
143.417 92.2905 li
143.417 87.7397 li
144.093 87.7397 li
144.677 88.9487 145.261 90.1655 145.838 91.4448 cv
146.48 90.1655 147.123 88.9487 147.759 87.7397 cv
148.349 87.7397 li
148.349 92.2905 li
cp
f
150.536 90.5483 mo
150.024 90.7046 149.757 90.9507 149.757 91.3608 cv
149.757 91.6987 149.991 91.9136 150.226 91.9136 cv
150.64 91.9136 151.173 91.3999 151.095 90.3862 cv
150.536 90.5483 li
cp
150.886 91.939 mo
150.659 92.1675 150.374 92.3687 150.075 92.3687 cv
149.53 92.3687 149.153 91.978 149.153 91.3667 cv
149.153 90.8022 149.634 90.4448 150.31 90.2437 cv
151.095 89.9956 li
151.067 89.5991 150.763 89.3452 150.446 89.3452 cv
150.069 89.3452 149.829 89.5015 149.595 89.6968 cv
149.368 89.4038 li
149.692 89.0933 150.024 88.9624 150.478 88.9624 cv
150.964 88.9624 151.679 89.1187 151.679 90.0679 cv
151.679 91.4976 li
151.679 91.7437 151.71 92.0562 151.821 92.2905 cv
151.185 92.2905 li
151.106 92.1538 151.095 91.9468 151.095 91.7378 cv
150.886 91.939 li
cp
f
154.948 90.562 mo
154.948 89.9507 154.618 89.3784 153.981 89.3784 cv
153.308 89.3784 153.028 89.9116 153.028 90.6011 cv
153.028 91.2964 153.327 91.9526 153.942 91.9526 cv
154.649 91.9526 154.948 91.2827 154.948 90.562 cv
cp
154.948 91.7769 mo
154.937 91.7769 li
154.708 92.0952 154.364 92.3687 153.833 92.3687 cv
152.956 92.3687 152.399 91.6675 152.399 90.6265 cv
152.399 89.7808 153.009 88.9624 153.897 88.9624 cv
154.339 88.9624 154.735 89.1323 154.937 89.4429 cv
154.948 89.4429 li
154.948 87.5132 li
155.532 87.5132 li
155.532 92.2905 li
154.948 92.2905 li
154.948 91.7769 li
cp
f
157.052 89.4429 mo
157.284 89.1968 li
157.421 89.0601 157.636 88.9624 157.771 88.9624 cv
157.915 88.9624 158.128 89.0659 158.31 89.2808 cv
158.044 89.6577 li
157.901 89.5874 157.759 89.521 157.608 89.521 cv
157.312 89.521 157.063 89.8198 157.063 90.5425 cv
157.063 92.2905 li
156.479 92.2905 li
156.479 89.0405 li
157.052 89.0405 li
157.052 89.4429 li
cp
f
159.321 89.0405 mo
159.321 92.2905 li
158.737 92.2905 li
158.737 89.0405 li
159.321 89.0405 li
cp
158.661 87.9683 mo
158.661 87.8062 158.796 87.6226 159.03 87.6226 cv
159.265 87.6226 159.399 87.8062 159.399 87.9683 cv
159.399 88.144 159.315 88.3647 159.03 88.3647 cv
158.745 88.3647 158.661 88.144 158.661 87.9683 cv
cp
f
162.612 90.562 mo
162.612 89.9507 162.28 89.3784 161.646 89.3784 cv
160.97 89.3784 160.69 89.9116 160.69 90.6011 cv
160.69 91.2964 160.989 91.9526 161.606 91.9526 cv
162.313 91.9526 162.612 91.2827 162.612 90.562 cv
cp
162.612 91.7769 mo
162.599 91.7769 li
162.372 92.0952 162.028 92.3687 161.495 92.3687 cv
160.62 92.3687 160.062 91.6675 160.062 90.6265 cv
160.062 89.7808 160.673 88.9624 161.562 88.9624 cv
162.003 88.9624 162.397 89.1323 162.599 89.4429 cv
162.612 89.4429 li
162.612 87.5132 li
163.196 87.5132 li
163.196 92.2905 li
162.612 92.2905 li
162.612 91.7769 li
cp
f
166.774 91.4155 mo
166.29 91.4155 165.899 91.0308 165.899 90.5405 cv
165.895 90.0562 166.284 89.6655 166.774 89.6655 cv
167.256 89.6655 167.647 90.0562 167.647 90.5405 cv
167.647 91.0249 167.256 91.4155 166.774 91.4155 cv
cp
f
175.36 92.2905 mo
174.731 92.2905 li
174.731 88.5854 li
174.717 88.5854 li
174.536 89.1187 173.504 91.1265 172.895 92.2905 cv
172.641 92.2905 li
172.077 91.1265 171.135 89.1831 170.959 88.5854 cv
170.948 88.5854 li
170.948 92.2905 li
170.428 92.2905 li
170.428 87.7397 li
171.104 87.7397 li
171.688 88.9487 172.272 90.1655 172.848 91.4448 cv
173.491 90.1655 174.133 88.9487 174.77 87.7397 cv
175.36 87.7397 li
175.36 92.2905 li
cp
f
178.422 90.314 mo
178.422 89.8081 178.209 89.3784 177.696 89.3784 cv
177.073 89.3784 176.827 89.8979 176.807 90.314 cv
178.422 90.314 li
cp
176.768 90.7046 mo
176.762 91.355 177.223 91.9526 177.864 91.9526 cv
178.163 91.9526 178.526 91.8413 178.754 91.6733 cv
178.922 91.9917 li
178.584 92.2319 178.182 92.3687 177.846 92.3687 cv
176.833 92.3687 176.165 91.7437 176.165 90.6011 cv
176.165 89.4761 176.969 88.9624 177.702 88.9624 cv
178.688 88.9624 179.02 89.853 178.956 90.7046 cv
176.768 90.7046 li
cp
f
181.842 92.355 mo
180.823 90.9253 li
179.817 92.355 li
179.358 92.0815 li
180.551 90.5542 li
179.54 89.2358 li
180.096 88.9761 li
180.928 90.1655 li
181.784 88.9761 li
182.239 89.1772 li
181.2 90.5288 li
182.401 92.0952 li
181.842 92.355 li
cp
f
183.043 89.0405 mo
183.043 92.2905 li
183.627 92.2905 li
183.627 89.0405 li
183.043 89.0405 li
cp
183.334 88.3647 mo
183.62 88.3647 183.706 88.144 183.706 87.9683 cv
183.706 87.8062 183.569 87.6226 183.334 87.6226 cv
183.102 87.6226 182.965 87.8062 182.965 87.9683 cv
182.965 88.144 183.049 88.3647 183.334 88.3647 cv
cp
f
187.079 92.0308 mo
186.76 92.2573 186.377 92.3687 186.1 92.3687 cv
184.561 92.3687 184.366 91.1069 184.366 90.6597 cv
184.366 89.8472 184.905 88.9624 186.125 88.9624 cv
186.456 88.9624 186.754 89.0464 186.995 89.23 cv
186.799 89.5601 li
186.612 89.4702 186.372 89.3921 186.131 89.3921 cv
185.6 89.3921 184.997 89.7417 184.997 90.6265 cv
184.997 91.3022 185.34 91.939 186.125 91.939 cv
186.405 91.939 186.665 91.8687 186.917 91.7046 cv
187.079 92.0308 li
cp
f
188.118 90.6265 mo
188.118 91.2378 188.325 91.9526 189.084 91.9526 cv
189.85 91.9526 190.057 91.2378 190.057 90.6265 cv
190.057 90.0425 189.817 89.3784 189.084 89.3784 cv
188.358 89.3784 188.118 90.0425 188.118 90.6265 cv
cp
187.487 90.6265 mo
187.487 89.5737 188.266 88.9624 189.084 88.9624 cv
189.901 88.9624 190.686 89.5737 190.686 90.6265 cv
190.686 91.6343 190.045 92.3687 189.084 92.3687 cv
188.129 92.3687 187.487 91.6343 187.487 90.6265 cv
cp
f
196.786 88.5132 mo
196.573 88.3394 196.086 88.1167 195.598 88.1167 cv
194.477 88.1167 193.815 88.9233 193.815 89.9897 cv
193.815 91.1401 194.606 91.9136 195.598 91.9136 cv
196.092 91.9136 196.481 91.7573 196.749 91.5757 cv
196.995 91.9526 li
196.69 92.1597 196.151 92.3687 195.567 92.3687 cv
193.944 92.3687 193.12 91.2573 193.12 90.0034 cv
193.12 88.8589 194.016 87.6616 195.645 87.6616 cv
196.293 87.6616 196.749 87.8901 197.045 88.1245 cv
196.786 88.5132 li
cp
f
197.727 89.0405 mo
197.727 92.2905 li
198.311 92.2905 li
198.311 89.0405 li
197.727 89.0405 li
cp
198.02 88.3647 mo
198.305 88.3647 198.389 88.144 198.389 87.9683 cv
198.389 87.8062 198.252 87.6226 198.02 87.6226 cv
197.786 87.6226 197.649 87.8062 197.649 87.9683 cv
197.649 88.144 197.733 88.3647 198.02 88.3647 cv
cp
f
199.993 89.0405 mo
200.842 89.0405 li
200.842 89.3784 li
199.993 89.3784 li
199.993 91.2183 li
199.993 91.6733 200.083 91.9468 200.44 91.9468 cv
200.655 91.9468 200.778 91.894 200.887 91.8354 cv
201.03 92.1597 li
200.829 92.2905 200.588 92.3687 200.368 92.3687 cv
199.719 92.3687 199.409 91.9917 199.409 91.3276 cv
199.409 89.3784 li
198.954 89.3784 li
198.954 89.0405 li
199.409 89.0405 li
199.409 88.2612 li
199.993 88.0659 li
199.993 89.0405 li
cp
f
201.672 88.9761 mo
202.004 89.8003 202.34 90.6323 202.665 91.6147 cv
202.678 91.6147 li
203.016 90.6323 203.354 89.8003 203.698 88.9761 cv
204.209 89.0991 li
202.542 92.8628 li
202.237 93.5522 201.834 93.9155 201.276 93.9155 cv
200.985 93.9155 li
200.985 93.4995 li
201.211 93.4995 li
201.614 93.4995 201.899 93.396 202.36 92.1089 cv
201.088 89.1382 li
201.672 88.9761 li
cp
f
207.352 91.4155 mo
206.868 91.4155 206.479 91.0308 206.479 90.5405 cv
206.473 90.0562 206.864 89.6655 207.352 89.6655 cv
207.836 89.6655 208.225 90.0562 208.225 90.5405 cv
208.225 91.0249 207.836 91.4155 207.352 91.4155 cv
cp
f
213.116 90.4956 mo
212.889 89.8667 212.668 89.2358 212.442 88.4175 cv
212.428 88.4175 li
212.196 89.2358 211.956 89.8667 211.709 90.4956 cv
213.116 90.4956 li
cp
212.766 87.7397 mo
214.459 92.2905 li
213.733 92.2905 li
213.266 90.9507 li
211.534 90.9507 li
211.047 92.2905 li
210.436 92.2905 li
212.286 87.7397 li
212.766 87.7397 li
cp
f
215.491 89.0405 mo
214.915 89.0405 li
214.915 92.2905 li
215.499 92.2905 li
215.499 90.3608 li
215.499 89.7358 215.817 89.4175 216.309 89.4175 cv
216.784 89.4175 217.043 89.7417 217.043 90.353 cv
217.043 92.2905 li
217.627 92.2905 li
217.627 90.3335 li
217.627 89.6772 217.963 89.4175 218.458 89.4175 cv
219.053 89.4175 219.17 89.8862 219.17 90.353 cv
219.17 92.2905 li
219.754 92.2905 li
219.754 90.1187 li
219.735 89.4312 219.372 88.9624 218.651 88.9624 cv
218.288 88.9624 217.848 89.1577 217.536 89.4429 cv
217.334 89.1772 217.016 88.9624 216.504 88.9624 cv
216.147 88.9624 215.758 89.1323 215.491 89.4429 cv
215.491 89.0405 li
cp
f
222.467 89.2612 mo
222.299 89.0933 221.987 88.9624 221.668 88.9624 cv
221.098 88.9624 220.592 89.2866 220.592 89.8003 cv
220.592 90.2437 220.917 90.4644 221.286 90.73 cv
221.592 90.9507 221.928 91.1147 221.928 91.4917 cv
221.928 91.8101 221.649 91.9526 221.377 91.9526 cv
221.118 91.9526 220.864 91.8022 220.676 91.6284 cv
220.391 91.9585 li
220.606 92.2065 221.02 92.3687 221.391 92.3687 cv
221.987 92.3687 222.526 91.9976 222.526 91.4526 cv
222.526 90.9976 222.252 90.73 221.838 90.4116 cv
221.467 90.1323 221.17 89.9956 221.17 89.7222 cv
221.17 89.4507 221.436 89.353 221.643 89.353 cv
221.819 89.353 222.006 89.4038 222.241 89.5601 cv
222.467 89.2612 li
cp
f
223.959 89.0405 mo
224.809 89.0405 li
224.809 89.3784 li
223.959 89.3784 li
223.959 91.2183 li
223.959 91.6733 224.051 91.9468 224.407 91.9468 cv
224.622 91.9468 224.745 91.894 224.856 91.8354 cv
224.999 92.1597 li
224.797 92.2905 224.557 92.3687 224.336 92.3687 cv
223.688 92.3687 223.375 91.9917 223.375 91.3276 cv
223.375 89.3784 li
222.922 89.3784 li
222.922 89.0405 li
223.375 89.0405 li
223.375 88.2612 li
223.959 88.0659 li
223.959 89.0405 li
cp
f
227.516 90.314 mo
227.516 89.8081 227.301 89.3784 226.79 89.3784 cv
226.167 89.3784 225.92 89.8979 225.901 90.314 cv
227.516 90.314 li
cp
225.862 90.7046 mo
225.854 91.355 226.315 91.9526 226.958 91.9526 cv
227.256 91.9526 227.62 91.8413 227.846 91.6733 cv
228.016 91.9917 li
227.678 92.2319 227.276 92.3687 226.938 92.3687 cv
225.926 92.3687 225.258 91.7437 225.258 90.6011 cv
225.258 89.4761 226.063 88.9624 226.795 88.9624 cv
227.782 88.9624 228.112 89.853 228.047 90.7046 cv
225.862 90.7046 li
cp
f
229.338 89.4429 mo
229.573 89.1968 li
229.709 89.0601 229.922 88.9624 230.059 88.9624 cv
230.202 88.9624 230.417 89.0659 230.598 89.2808 cv
230.333 89.6577 li
230.19 89.5874 230.047 89.521 229.897 89.521 cv
229.598 89.521 229.352 89.8198 229.352 90.5425 cv
229.352 92.2905 li
228.768 92.2905 li
228.768 89.0405 li
229.338 89.0405 li
229.338 89.4429 li
cp
f
233.356 90.562 mo
233.356 89.9507 233.024 89.3784 232.389 89.3784 cv
231.713 89.3784 231.436 89.9116 231.436 90.6011 cv
231.436 91.2964 231.733 91.9526 232.35 91.9526 cv
233.057 91.9526 233.356 91.2827 233.356 90.562 cv
cp
233.356 91.7769 mo
233.342 91.7769 li
233.116 92.0952 232.772 92.3687 232.239 92.3687 cv
231.364 92.3687 230.805 91.6675 230.805 90.6265 cv
230.805 89.7808 231.417 88.9624 232.305 88.9624 cv
232.747 88.9624 233.141 89.1323 233.342 89.4429 cv
233.356 89.4429 li
233.356 87.5132 li
233.94 87.5132 li
233.94 92.2905 li
233.356 92.2905 li
233.356 91.7769 li
cp
f
236.606 90.3862 mo
236.684 91.3999 236.153 91.9136 235.737 91.9136 cv
235.504 91.9136 235.27 91.6987 235.27 91.3608 cv
235.27 90.9507 235.536 90.7046 236.049 90.5483 cv
236.606 90.3862 li
cp
236.606 91.7378 mo
236.606 91.9468 236.62 92.1538 236.698 92.2905 cv
237.334 92.2905 li
237.223 92.0562 237.19 91.7437 237.19 91.4976 cv
237.19 90.0679 li
237.19 89.1187 236.477 88.9624 235.991 88.9624 cv
235.536 88.9624 235.206 89.0933 234.881 89.4038 cv
235.108 89.6968 li
235.342 89.5015 235.581 89.3452 235.958 89.3452 cv
236.276 89.3452 236.581 89.5991 236.606 89.9956 cv
235.821 90.2437 li
235.147 90.4448 234.667 90.8022 234.667 91.3667 cv
234.667 91.978 235.043 92.3687 235.588 92.3687 cv
235.887 92.3687 236.172 92.1675 236.399 91.939 cv
236.606 91.7378 li
cp
f
238.709 89.4429 mo
238.975 89.1323 239.364 88.9624 239.721 88.9624 cv
240.235 88.9624 240.551 89.1772 240.752 89.4429 cv
241.065 89.1577 241.506 88.9624 241.87 88.9624 cv
242.59 88.9624 242.954 89.4312 242.973 90.1187 cv
242.973 92.2905 li
242.389 92.2905 li
242.389 90.353 li
242.389 89.8862 242.272 89.4175 241.674 89.4175 cv
241.182 89.4175 240.844 89.6772 240.844 90.3335 cv
240.844 92.2905 li
240.26 92.2905 li
240.26 90.353 li
240.26 89.7417 240 89.4175 239.526 89.4175 cv
239.034 89.4175 238.715 89.7358 238.715 90.3608 cv
238.715 92.2905 li
238.131 92.2905 li
238.131 89.0405 li
238.709 89.0405 li
238.709 89.4429 li
cp
f
247.436 90.5405 mo
247.436 90.0562 247.047 89.6655 246.563 89.6655 cv
246.075 89.6655 245.684 90.0562 245.69 90.5405 cv
245.69 91.0308 246.079 91.4155 246.563 91.4155 cv
247.047 91.4155 247.436 91.0249 247.436 90.5405 cv
cp
f
255.149 92.2905 mo
254.52 92.2905 li
254.52 88.5854 li
254.508 88.5854 li
254.327 89.1187 253.293 91.1265 252.684 92.2905 cv
252.43 92.2905 li
251.866 91.1265 250.926 89.1831 250.75 88.5854 cv
250.737 88.5854 li
250.737 92.2905 li
250.217 92.2905 li
250.217 87.7397 li
250.893 87.7397 li
251.477 88.9487 252.061 90.1655 252.639 91.4448 cv
253.282 90.1655 253.924 88.9487 254.559 87.7397 cv
255.149 87.7397 li
255.149 92.2905 li
cp
f
258.342 92.2905 mo
258.92 92.2905 li
258.92 89.0405 li
258.336 89.0405 li
258.336 90.939 li
258.336 91.5698 257.965 91.939 257.518 91.939 cv
256.993 91.939 256.733 91.6147 256.733 91.0034 cv
256.733 89.0405 li
256.149 89.0405 li
256.149 91.1343 li
256.149 91.9526 256.551 92.3687 257.297 92.3687 cv
257.719 92.3687 258.012 92.1987 258.342 91.9136 cv
258.342 92.2905 li
cp
f
260.458 89.4429 mo
260.762 89.1187 261.231 88.9624 261.567 88.9624 cv
262.313 88.9624 262.715 89.3784 262.715 90.1968 cv
262.715 92.2905 li
262.131 92.2905 li
262.131 90.3218 li
262.131 89.7104 261.872 89.3921 261.346 89.3921 cv
260.885 89.3921 260.465 89.7104 260.465 90.3335 cv
260.465 92.2905 li
259.881 92.2905 li
259.881 89.0405 li
260.458 89.0405 li
260.458 89.4429 li
cp
f
264.26 89.0405 mo
264.26 92.2905 li
263.676 92.2905 li
263.676 89.0405 li
264.26 89.0405 li
cp
263.598 87.9683 mo
263.598 87.8062 263.735 87.6226 263.969 87.6226 cv
264.202 87.6226 264.338 87.8062 264.338 87.9683 cv
264.338 88.144 264.254 88.3647 263.969 88.3647 cv
263.682 88.3647 263.598 88.144 263.598 87.9683 cv
cp
f
267.713 92.0308 mo
267.395 92.2573 267.012 92.3687 266.733 92.3687 cv
265.196 92.3687 265 91.1069 265 90.6597 cv
265 89.8472 265.54 88.9624 266.758 88.9624 cv
267.09 88.9624 267.387 89.0464 267.627 89.23 cv
267.434 89.5601 li
267.245 89.4702 267.004 89.3921 266.766 89.3921 cv
266.233 89.3921 265.629 89.7417 265.629 90.6265 cv
265.629 91.3022 265.973 91.939 266.758 91.939 cv
267.038 91.939 267.297 91.8687 267.551 91.7046 cv
267.713 92.0308 li
cp
f
268.92 89.4429 mo
269.225 89.1187 269.692 88.9624 270.03 88.9624 cv
270.776 88.9624 271.178 89.3784 271.178 90.1968 cv
271.178 92.2905 li
270.594 92.2905 li
270.594 90.3218 li
270.594 89.7104 270.334 89.3921 269.809 89.3921 cv
269.348 89.3921 268.926 89.7104 268.926 90.3335 cv
268.926 92.2905 li
268.342 92.2905 li
268.342 87.5132 li
268.92 87.5132 li
268.92 89.4429 li
cp
f
274.768 91.4155 mo
274.284 91.4155 273.895 91.0308 273.895 90.5405 cv
273.889 90.0562 274.28 89.6655 274.768 89.6655 cv
275.252 89.6655 275.641 90.0562 275.641 90.5405 cv
275.641 91.0249 275.252 91.4155 274.768 91.4155 cv
cp
f
279.053 88.1948 mo
279.487 88.1948 li
280.163 88.1948 280.442 88.5601 280.442 89.0601 cv
280.442 89.7358 280.059 90.0601 279.448 90.0933 cv
279.241 90.0991 li
279.241 90.5151 li
279.442 90.5151 li
280.461 90.5151 281.116 89.8198 281.116 89.0542 cv
281.116 88.1694 280.526 87.7397 279.565 87.7397 cv
278.422 87.7397 li
278.422 92.2905 li
279.053 92.2905 li
279.053 88.1948 li
cp
f
283.004 90.5483 mo
282.493 90.7046 282.225 90.9507 282.225 91.3608 cv
282.225 91.6987 282.459 91.9136 282.694 91.9136 cv
283.108 91.9136 283.641 91.3999 283.563 90.3862 cv
283.004 90.5483 li
cp
283.354 91.939 mo
283.127 92.1675 282.842 92.3687 282.543 92.3687 cv
281.999 92.3687 281.622 91.978 281.622 91.3667 cv
281.622 90.8022 282.102 90.4448 282.778 90.2437 cv
283.563 89.9956 li
283.536 89.5991 283.231 89.3452 282.915 89.3452 cv
282.538 89.3452 282.297 89.5015 282.063 89.6968 cv
281.836 89.4038 li
282.161 89.0933 282.493 88.9624 282.946 88.9624 cv
283.432 88.9624 284.147 89.1187 284.147 90.0679 cv
284.147 91.4976 li
284.147 91.7437 284.178 92.0562 284.29 92.2905 cv
283.653 92.2905 li
283.575 92.1538 283.563 91.9468 283.563 91.7378 cv
283.354 91.939 li
cp
f
285.659 89.4429 mo
285.891 89.1968 li
286.028 89.0601 286.243 88.9624 286.379 88.9624 cv
286.522 88.9624 286.735 89.0659 286.917 89.2808 cv
286.651 89.6577 li
286.508 89.5874 286.366 89.521 286.217 89.521 cv
285.918 89.521 285.672 89.8198 285.672 90.5425 cv
285.672 92.2905 li
285.088 92.2905 li
285.088 89.0405 li
285.659 89.0405 li
285.659 89.4429 li
cp
f
287.93 89.0405 mo
287.93 92.2905 li
287.346 92.2905 li
287.346 89.0405 li
287.93 89.0405 li
cp
287.268 87.9683 mo
287.268 87.8062 287.405 87.6226 287.637 87.6226 cv
287.872 87.6226 288.008 87.8062 288.008 87.9683 cv
288.008 88.144 287.922 88.3647 287.637 88.3647 cv
287.352 88.3647 287.268 88.144 287.268 87.9683 cv
cp
f
290.415 89.5601 mo
290.182 89.4038 289.993 89.353 289.817 89.353 cv
289.61 89.353 289.344 89.4507 289.344 89.7222 cv
289.344 89.9956 289.643 90.1323 290.012 90.4116 cv
290.428 90.73 290.7 90.9976 290.7 91.4526 cv
290.7 91.9976 290.163 92.3687 289.565 92.3687 cv
289.196 92.3687 288.78 92.2065 288.565 91.9585 cv
288.85 91.6284 li
289.04 91.8022 289.292 91.9526 289.551 91.9526 cv
289.825 91.9526 290.104 91.8101 290.104 91.4917 cv
290.104 91.1147 289.766 90.9507 289.461 90.73 cv
289.09 90.4644 288.766 90.2437 288.766 89.8003 cv
288.766 89.2866 289.272 88.9624 289.844 88.9624 cv
290.163 88.9624 290.473 89.0933 290.641 89.2612 cv
290.415 89.5601 li
cp
f
294.043 91.4155 mo
293.559 91.4155 293.17 91.0308 293.17 90.5405 cv
293.167 90.0562 293.555 89.6655 294.043 89.6655 cv
294.528 89.6655 294.918 90.0562 294.918 90.5405 cv
294.918 91.0249 294.528 91.4155 294.043 91.4155 cv
cp
f
302.631 92.2905 mo
302.002 92.2905 li
302.002 88.5854 li
301.989 88.5854 li
301.807 89.1187 300.776 91.1265 300.165 92.2905 cv
299.913 92.2905 li
299.348 91.1265 298.407 89.1831 298.231 88.5854 cv
298.219 88.5854 li
298.219 92.2905 li
297.7 92.2905 li
297.7 87.7397 li
298.374 87.7397 li
298.958 88.9487 299.542 90.1655 300.12 91.4448 cv
300.762 90.1655 301.405 88.9487 302.042 87.7397 cv
302.631 87.7397 li
302.631 92.2905 li
cp
f
304.241 89.0405 mo
304.241 92.2905 li
303.657 92.2905 li
303.657 89.0405 li
304.241 89.0405 li
cp
303.579 87.9683 mo
303.579 87.8062 303.715 87.6226 303.948 87.6226 cv
304.182 87.6226 304.319 87.8062 304.319 87.9683 cv
304.319 88.144 304.233 88.3647 303.948 88.3647 cv
303.663 88.3647 303.579 88.144 303.579 87.9683 cv
cp
f
305.2 92.2905 mo
305.2 87.5132 li
305.784 87.5132 li
305.784 92.2905 li
305.2 92.2905 li
cp
f
307.907 90.5483 mo
307.393 90.7046 307.127 90.9507 307.127 91.3608 cv
307.127 91.6987 307.362 91.9136 307.594 91.9136 cv
308.01 91.9136 308.542 91.3999 308.465 90.3862 cv
307.907 90.5483 li
cp
308.256 91.939 mo
308.03 92.1675 307.745 92.3687 307.446 92.3687 cv
306.901 92.3687 306.524 91.978 306.524 91.3667 cv
306.524 90.8022 307.004 90.4448 307.68 90.2437 cv
308.465 89.9956 li
308.438 89.5991 308.133 89.3452 307.815 89.3452 cv
307.44 89.3452 307.2 89.5015 306.965 89.6968 cv
306.739 89.4038 li
307.063 89.0933 307.393 88.9624 307.848 88.9624 cv
308.334 88.9624 309.049 89.1187 309.049 90.0679 cv
309.049 91.4976 li
309.049 91.7437 309.081 92.0562 309.192 92.2905 cv
308.555 92.2905 li
308.477 92.1538 308.465 91.9468 308.465 91.7378 cv
308.256 91.939 li
cp
f
310.567 89.4429 mo
310.872 89.1187 311.338 88.9624 311.676 88.9624 cv
312.422 88.9624 312.825 89.3784 312.825 90.1968 cv
312.825 92.2905 li
312.241 92.2905 li
312.241 90.3218 li
312.241 89.7104 311.981 89.3921 311.456 89.3921 cv
310.995 89.3921 310.573 89.7104 310.573 90.3335 cv
310.573 92.2905 li
309.989 92.2905 li
309.989 89.0405 li
310.567 89.0405 li
310.567 89.4429 li
cp
f
false sop
0 0 0 1 cmyk
%ADOBeginSubsetFont: Myriad-Roman Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Myriad-Roman def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def/Weight (Regular) def/ItalicAngle -0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdef/UniqueID 41987 def/FontBBox {-46 -250 1126 831} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 0 674 685 484 496 650 661 710 721] def/OtherBlues [261 266 -200 -194 -221 -212] def/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def/FamilyOtherBlues [261 266 -200 -194 -221 -212] def/BlueScale 0.0604583 def/BlueShift 7.1 def/StdHW [67] def/StdVW [88] def/StemSnapH [67 73] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/space <1C60D8A8C9B896187A> |-/.notdef <1C60D8A8C9B896187A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZRBFRM+Myriad-Roman /Myriad-Roman findfont ct_VMDictPut/ZRBFRM+Myriad-Roman*1 [32{/.notdef}rp /space 223{/.notdef}rp]ZRBFRM+Myriad-Roman nfZRBFRM+Myriad-Roman*1 [12 0 0 -12 0 0 ]msf252.084 0 mo( )sh312.844 66.5674 mo
252.668 66.5674 li
252.668 44.7651 li
312.844 44.7651 li
312.844 66.5674 li
cp
true sop
0 0 0 1 nzopmsc
f
303.649 56.6211 mo
302.854 55.4712 301.26 53.2568 300.153 51.8843 cv
300.153 51.8843 300.108 55.4712 300.196 56.6211 cv
299.887 56.6211 299.579 56.5771 299.223 56.6211 cv
299.401 56.002 299.444 50.7783 299.266 50.1147 cv
299.532 50.1147 299.932 50.1577 300.196 50.1147 cv
301.04 51.2651 302.762 53.5664 303.649 54.7622 cv
303.649 53.876 303.694 51.0884 303.606 50.1147 cv
303.961 50.1577 304.225 50.2017 304.581 50.1147 cv
304.448 50.9106 304.358 55.8257 304.581 56.6211 cv
304.313 56.5771 303.915 56.5771 303.649 56.6211 cv
false sop
0 0 0 0 cmyk
f
289.661 54.8066 mo
289.661 56.3125 288.421 56.7095 287.624 56.7095 cv
287.048 56.7095 286.295 56.4448 285.808 56.1787 cv
285.808 55.6919 285.853 55.5151 285.808 55.0278 cv
286.074 55.3823 286.958 55.9131 287.58 55.9131 cv
288.199 55.9131 288.553 55.5591 288.597 54.9829 cv
288.643 54.1875 287.359 53.5684 286.785 53.1685 cv
286.295 52.7695 285.943 52.3726 285.943 51.7075 cv
285.943 50.8223 286.738 50.1143 287.845 50.1143 cv
288.553 50.1143 288.908 50.3354 289.529 50.645 cv
289.306 50.9546 289.172 51.2207 289.042 51.5303 cv
288.82 51.2207 288.421 50.8223 287.845 50.8223 cv
287.271 50.8223 286.958 51.2207 286.958 51.6636 cv
286.958 52.061 287.492 52.4155 288.375 52.9902 cv
289.129 53.4785 289.661 53.877 289.661 54.8066 cv
f
284.525 56.6211 mo
284.082 56.5771 283.595 56.5771 283.152 56.6211 cv
282.931 56.2236 281.426 54.0542 281.206 53.876 cv
281.116 53.2568 li
282 53.3003 282.622 52.9028 282.622 51.9727 cv
282.622 51.2202 281.958 50.8223 281.25 50.8223 cv
280.673 50.8223 li
280.629 52.2388 280.673 55.3379 280.761 56.6211 cv
280.364 56.6211 279.965 56.5771 279.567 56.6211 cv
279.7 55.5591 279.7 51.2202 279.567 50.1147 cv
280.673 50.2017 280.409 50.1147 281.381 50.1147 cv
282.311 50.1147 283.64 50.4238 283.64 51.8408 cv
283.64 52.9907 282.667 53.6548 282.178 53.6548 cv
282.267 53.6992 284.171 56.2686 284.525 56.6211 cv
f
270.668 55.8257 mo
270.624 56.0903 270.624 56.4009 270.624 56.6665 cv
269.827 56.5771 267.967 56.5771 267.214 56.6665 cv
267.303 55.8257 267.303 50.9985 267.214 50.1147 cv
267.746 50.2017 270.004 50.2017 270.579 50.1147 cv
270.579 50.9546 li
270.004 50.9106 268.941 50.8223 268.321 50.8662 cv
268.321 51.3091 268.278 52.106 268.321 52.8579 cv
268.941 52.9028 269.827 52.9028 270.446 52.7695 cv
270.446 53.0801 270.446 53.3452 270.491 53.6113 cv
269.739 53.5225 269.03 53.5225 268.321 53.5664 cv
268.278 54.0542 268.278 55.4712 268.278 55.9141 cv
268.897 55.9141 270.004 55.8696 270.668 55.8257 cv
f
297.584 53.3013 mo
297.584 55.1611 296.213 56.7549 294.398 56.7549 cv
292.449 56.7549 291.167 55.2051 291.167 53.3013 cv
291.167 51.6636 292.538 50.1133 294.353 50.1133 cv
296.213 50.1133 297.584 51.6636 297.584 53.3013 cv
296.477 53.3462 mo
296.477 52.2827 295.813 50.8223 294.353 50.8223 cv
292.892 50.8223 292.271 52.2827 292.271 53.3462 cv
292.271 54.5859 292.936 56.0464 294.398 56.0464 cv
295.77 56.0464 296.477 54.5859 296.477 53.3462 cv
f
277.883 56.6211 mo
277.575 56.5771 276.999 56.6211 276.645 56.6211 cv
276.556 56.2236 276.247 55.2949 276.069 54.7622 cv
275.227 54.7183 274.387 54.7183 273.634 54.7622 cv
273.5 55.2495 273.192 56.3125 273.103 56.6211 cv
272.084 56.6211 li
272.438 55.957 274.253 50.9546 274.43 50.1577 cv
274.83 50.2017 275.139 50.2017 275.494 50.1577 cv
275.715 51.0439 277.575 56.002 277.883 56.6211 cv
275.803 53.9653 mo
275.54 53.1685 275.05 51.8408 274.83 51.2202 cv
274.608 51.8408 274.21 53.124 273.9 53.9653 cv
274.387 54.0542 275.361 54.0093 275.803 53.9653 cv
f
265.184 51.8418 mo
265.184 53.3115 263.757 54.0479 262.502 54.0039 cv
262.459 53.7886 262.459 53.5713 262.415 53.3999 cv
263.499 53.356 264.19 52.8784 264.19 51.9272 cv
264.19 51.1919 263.541 50.6299 262.717 50.6299 cv
261.983 50.6299 li
261.983 51.8843 261.983 55.2588 262.07 56.5132 cv
261.68 56.4268 261.334 56.4268 260.946 56.5132 cv
260.901 56.5132 li
260.988 55.8643 261.074 50.7158 260.901 49.981 cv
262.026 50.0674 261.854 49.981 262.805 49.981 cv
263.799 49.981 265.184 50.3701 265.184 51.8418 cv
f
282.463 59.7075 mo
273.518 59.7075 266.012 61.0801 260.01 62.4609 cv
260.01 62.3516 li
260.757 62.042 269.776 58.6816 282.463 58.6777 cv
282.461 58.6777 li
295.15 58.6816 304.165 62.042 304.913 62.3516 cv
304.915 62.3516 304.913 62.4609 304.913 62.4609 cv
298.915 61.0801 291.404 59.7075 282.461 59.7075 cv
282.463 59.7075 li
cp
f
257.193 10.7314 mo
255.204 10.7314 li
255.204 12.1631 li
256.796 12.1631 li
256.796 13.1895 li
255.204 13.1895 li
255.204 15.9712 li
253.943 15.9712 li
253.943 9.71436 li
257.336 9.71436 li
257.193 10.7314 li
cp
true sop
0 0 0 1 nzopmsc
f
257.875 15.9712 mo
257.875 11.4429 li
259.083 11.2539 li
259.083 15.9712 li
257.875 15.9712 li
cp
258.479 10.8398 mo
258.074 10.8398 257.741 10.5063 257.741 10.0923 cv
257.741 9.67822 258.083 9.34521 258.497 9.34521 cv
258.903 9.34521 259.226 9.67822 259.226 10.0923 cv
259.226 10.5063 258.893 10.8398 258.479 10.8398 cv
cp
f
262.791 15.9712 mo
262.791 12.9731 li
262.791 12.4512 262.7 12.2983 262.385 12.2983 cv
262.142 12.2983 261.827 12.46 261.547 12.7124 cv
261.547 15.9712 li
260.342 15.9712 li
260.342 12.6313 li
260.342 12.2349 260.288 11.8569 260.18 11.5508 cv
261.25 11.2446 li
261.359 11.4341 261.422 11.6318 261.422 11.8208 cv
261.602 11.6948 261.754 11.5869 261.954 11.479 cv
262.196 11.353 262.511 11.2808 262.782 11.2808 cv
263.294 11.2808 263.745 11.5508 263.889 11.9468 cv
263.952 12.1182 263.979 12.3159 263.979 12.604 cv
263.979 15.9712 li
262.791 15.9712 li
cp
f
267.335 13.9546 mo
266.499 13.9546 266.209 14.1074 266.209 14.6567 cv
266.209 15.0171 266.435 15.2598 266.741 15.2598 cv
266.966 15.2598 267.192 15.1431 267.372 14.9448 cv
267.389 13.9546 li
267.335 13.9546 li
cp
268.362 16.2051 mo
268.083 16.0884 267.831 15.8813 267.713 15.647 cv
267.624 15.7373 267.524 15.8271 267.434 15.8901 cv
267.209 16.0522 266.885 16.1421 266.506 16.1421 cv
265.481 16.1421 264.922 15.6201 264.922 14.7017 cv
264.922 13.6216 265.67 13.1172 267.137 13.1172 cv
267.227 13.1172 267.308 13.1172 267.407 13.1265 cv
267.407 12.9375 li
267.407 12.4243 267.308 12.2529 266.868 12.2529 cv
266.48 12.2529 266.03 12.4419 265.535 12.7754 cv
265.022 11.9111 li
265.264 11.7578 265.445 11.668 265.768 11.5327 cv
266.219 11.3438 266.606 11.2627 267.03 11.2627 cv
267.803 11.2627 268.334 11.5508 268.514 12.064 cv
268.578 12.2529 268.604 12.397 268.596 12.8921 cv
268.569 14.4409 li
268.559 14.9448 268.596 15.1611 269 15.4673 cv
268.362 16.2051 li
cp
f
272.294 15.9712 mo
272.294 12.9731 li
272.294 12.4512 272.204 12.2983 271.889 12.2983 cv
271.646 12.2983 271.331 12.46 271.051 12.7124 cv
271.051 15.9712 li
269.846 15.9712 li
269.846 12.6313 li
269.846 12.2349 269.792 11.8569 269.684 11.5508 cv
270.754 11.2446 li
270.863 11.4341 270.926 11.6318 270.926 11.8208 cv
271.106 11.6948 271.258 11.5869 271.458 11.479 cv
271.7 11.353 272.015 11.2808 272.286 11.2808 cv
272.798 11.2808 273.249 11.5508 273.393 11.9468 cv
273.456 12.1182 273.483 12.3159 273.483 12.604 cv
273.483 15.9712 li
272.294 15.9712 li
cp
f
277.604 15.791 mo
277.28 15.98 276.92 16.0791 276.479 16.0791 cv
275.209 16.0791 274.471 15.1968 274.471 13.7026 cv
274.471 12.6401 274.876 11.938 275.417 11.5688 cv
275.723 11.3618 276.172 11.2266 276.56 11.2266 cv
276.866 11.2266 277.2 11.2988 277.452 11.4341 cv
277.623 11.5239 277.704 11.5869 277.901 11.7578 cv
277.317 12.5503 li
277.073 12.3252 276.812 12.1899 276.586 12.1899 cv
276.047 12.1899 275.803 12.6582 275.803 13.7388 cv
275.803 14.3418 275.885 14.7017 276.038 14.8999 cv
276.165 15.062 276.372 15.1611 276.579 15.1611 cv
276.857 15.1611 277.11 15.0439 277.407 14.7827 cv
277.479 14.7197 li
278.028 15.4492 li
277.848 15.6289 277.766 15.6919 277.604 15.791 cv
cp
f
278.836 15.9712 mo
278.836 11.4429 li
280.042 11.2539 li
280.042 15.9712 li
278.836 15.9712 li
cp
279.44 10.8398 mo
279.034 10.8398 278.702 10.5063 278.702 10.0923 cv
278.702 9.67822 279.043 9.34521 279.458 9.34521 cv
279.862 9.34521 280.186 9.67822 280.186 10.0923 cv
280.186 10.5063 279.854 10.8398 279.44 10.8398 cv
cp
f
283.4 13.9546 mo
282.563 13.9546 282.274 14.1074 282.274 14.6567 cv
282.274 15.0171 282.5 15.2598 282.805 15.2598 cv
283.031 15.2598 283.256 15.1431 283.436 14.9448 cv
283.454 13.9546 li
283.4 13.9546 li
cp
284.426 16.2051 mo
284.147 16.0884 283.895 15.8813 283.778 15.647 cv
283.688 15.7373 283.588 15.8271 283.499 15.8901 cv
283.274 16.0522 282.95 16.1421 282.571 16.1421 cv
281.545 16.1421 280.987 15.6201 280.987 14.7017 cv
280.987 13.6216 281.735 13.1172 283.202 13.1172 cv
283.292 13.1172 283.373 13.1172 283.471 13.1265 cv
283.471 12.9375 li
283.471 12.4243 283.373 12.2529 282.932 12.2529 cv
282.544 12.2529 282.094 12.4419 281.599 12.7754 cv
281.086 11.9111 li
281.329 11.7578 281.509 11.668 281.833 11.5327 cv
282.284 11.3438 282.67 11.2627 283.094 11.2627 cv
283.868 11.2627 284.399 11.5508 284.579 12.064 cv
284.642 12.2529 284.668 12.397 284.661 12.8921 cv
284.633 14.4409 li
284.624 14.9448 284.661 15.1611 285.065 15.4673 cv
284.426 16.2051 li
cp
f
287.089 16.0791 mo
286.577 16.0791 286.163 15.8359 286.018 15.4492 cv
285.928 15.2148 285.911 15.0708 285.911 14.4136 cv
285.911 10.9746 li
285.911 10.3716 285.892 10.0024 285.847 9.58838 cv
287.081 9.30908 li
287.125 9.56104 287.143 9.8584 287.143 10.5063 cv
287.143 14.0986 li
287.143 14.8911 287.153 14.999 287.225 15.125 cv
287.27 15.2061 287.368 15.251 287.467 15.251 cv
287.512 15.251 287.54 15.251 287.602 15.2329 cv
287.809 15.9531 li
287.602 16.0342 287.35 16.0791 287.089 16.0791 cv
cp
f
294.227 10.7588 mo
292.733 10.7588 li
292.733 15.9712 li
291.454 15.9712 li
291.454 10.7588 li
289.923 10.7588 li
289.923 9.71436 li
294.434 9.71436 li
294.227 10.7588 li
cp
f
294.883 15.9712 mo
294.883 11.4429 li
296.088 11.2539 li
296.088 15.9712 li
294.883 15.9712 li
cp
295.486 10.8398 mo
295.081 10.8398 294.748 10.5063 294.748 10.0923 cv
294.748 9.67822 295.09 9.34521 295.504 9.34521 cv
295.909 9.34521 296.233 9.67822 296.233 10.0923 cv
296.233 10.5063 295.9 10.8398 295.486 10.8398 cv
cp
f
302.057 15.9712 mo
302.057 12.9282 li
302.057 12.3789 301.994 12.271 301.678 12.271 cv
301.454 12.271 301.139 12.4243 300.877 12.6582 cv
300.877 15.9712 li
299.735 15.9712 li
299.735 12.9731 li
299.735 12.397 299.653 12.2622 299.32 12.2622 cv
299.094 12.2622 298.79 12.3789 298.528 12.6133 cv
298.528 15.9712 li
297.348 15.9712 li
297.348 12.7573 li
297.348 12.0908 297.303 11.8027 297.177 11.5776 cv
298.266 11.2808 li
298.348 11.4067 298.383 11.5146 298.428 11.749 cv
298.744 11.4429 299.131 11.2808 299.554 11.2808 cv
299.932 11.2808 300.247 11.4067 300.491 11.6587 cv
300.553 11.7222 300.616 11.8027 300.67 11.8838 cv
301.094 11.4517 301.471 11.2808 301.975 11.2808 cv
302.336 11.2808 302.678 11.3887 302.885 11.5688 cv
303.146 11.7939 303.227 12.064 303.227 12.6943 cv
303.227 15.9712 li
302.057 15.9712 li
cp
f
306.934 13.1084 mo
306.934 12.7661 306.899 12.5864 306.791 12.415 cv
306.673 12.2349 306.502 12.145 306.259 12.145 cv
305.799 12.145 305.54 12.5054 305.54 13.1445 cv
305.54 13.1626 li
306.934 13.1626 li
306.934 13.1084 li
cp
305.521 14.0444 mo
305.521 14.0806 li
305.521 14.792 305.872 15.1968 306.493 15.1968 cv
306.907 15.1968 307.294 15.0439 307.664 14.7378 cv
308.131 15.458 li
307.6 15.8901 307.042 16.0972 306.394 16.0972 cv
305.071 16.0972 304.215 15.1611 304.215 13.7114 cv
304.215 12.8833 304.387 12.334 304.792 11.8838 cv
305.17 11.4609 305.629 11.2627 306.241 11.2627 cv
306.772 11.2627 307.276 11.4429 307.574 11.749 cv
307.997 12.1812 308.186 12.8022 308.186 13.7656 cv
308.186 13.8647 308.186 13.9634 308.186 14.0444 cv
305.521 14.0444 li
cp
f
310.499 16.1152 mo
309.931 16.1152 309.31 15.9351 308.635 15.584 cv
309.067 14.7017 li
309.436 14.9268 310.075 15.2241 310.597 15.2241 cv
310.94 15.2241 311.209 14.999 311.209 14.7017 cv
311.209 14.3867 310.985 14.2246 310.499 14.1348 cv
309.958 14.0356 li
309.652 13.9814 309.274 13.7656 309.112 13.5674 cv
308.95 13.3696 308.85 13.0361 308.85 12.7393 cv
308.85 11.8389 309.562 11.2358 310.633 11.2358 cv
311.372 11.2358 311.858 11.4609 312.281 11.668 cv
311.885 12.478 li
311.426 12.2441 311.092 12.145 310.75 12.145 cv
310.399 12.145 310.165 12.3252 310.165 12.5952 cv
310.165 12.8291 310.319 12.9551 310.741 13.0635 cv
311.299 13.2075 li
311.867 13.3516 312.055 13.5225 312.217 13.7295 cv
312.389 13.9458 312.469 14.2065 312.469 14.5127 cv
312.469 15.4673 311.678 16.1152 310.499 16.1152 cv
cp
f
266.3 20.7314 mo
265.499 20.7314 li
265.499 22.6401 li
266.157 22.6401 li
266.669 22.6401 266.823 22.5771 266.993 22.3159 cv
267.102 22.145 267.147 21.9648 267.147 21.668 cv
267.147 21.0825 266.832 20.7314 266.3 20.7314 cv
cp
267.444 23.4595 mo
267.155 23.5942 266.885 23.6665 266.192 23.6665 cv
265.499 23.6665 li
265.499 25.9712 li
264.239 25.9712 li
264.239 19.7144 li
265.886 19.7144 li
266.948 19.7144 267.272 19.8223 267.624 20.0205 cv
268.209 20.3447 268.524 20.9209 268.524 21.6411 cv
268.524 22.4692 268.127 23.1353 267.444 23.4595 cv
cp
f
271.627 22.415 mo
271.51 22.3521 271.413 22.3252 271.277 22.3252 cv
271.006 22.3252 270.764 22.4512 270.539 22.7124 cv
270.539 25.9712 li
269.333 25.9712 li
269.333 22.8921 li
269.333 22.271 269.26 21.8027 269.161 21.542 cv
270.242 21.2539 li
270.35 21.4429 270.413 21.6499 270.43 21.9111 cv
270.692 21.5601 271.061 21.2539 271.51 21.2539 cv
271.691 21.2539 271.772 21.272 271.961 21.353 cv
271.627 22.415 li
cp
f
274.905 23.1084 mo
274.905 22.7661 274.868 22.5864 274.76 22.415 cv
274.643 22.2349 274.472 22.145 274.229 22.145 cv
273.77 22.145 273.508 22.5054 273.508 23.1445 cv
273.508 23.1626 li
274.905 23.1626 li
274.905 23.1084 li
cp
273.491 24.0444 mo
273.491 24.0806 li
273.491 24.792 273.842 25.1968 274.463 25.1968 cv
274.877 25.1968 275.264 25.0439 275.633 24.7378 cv
276.102 25.458 li
275.571 25.8901 275.012 26.0972 274.364 26.0972 cv
273.041 26.0972 272.186 25.1611 272.186 23.7114 cv
272.186 22.8833 272.356 22.334 272.762 21.8838 cv
273.139 21.4609 273.598 21.2627 274.211 21.2627 cv
274.743 21.2627 275.247 21.4429 275.543 21.749 cv
275.966 22.1812 276.155 22.8022 276.155 23.7656 cv
276.155 23.8647 276.155 23.9634 276.155 24.0444 cv
273.491 24.0444 li
cp
f
279.458 25.9712 mo
279.458 22.9731 li
279.458 22.4512 279.368 22.2983 279.053 22.2983 cv
278.81 22.2983 278.495 22.46 278.215 22.7124 cv
278.215 25.9712 li
277.01 25.9712 li
277.01 22.6313 li
277.01 22.2349 276.956 21.8569 276.848 21.5508 cv
277.918 21.2446 li
278.027 21.4341 278.09 21.6318 278.09 21.8208 cv
278.27 21.6948 278.422 21.5869 278.622 21.479 cv
278.864 21.353 279.179 21.2808 279.45 21.2808 cv
279.962 21.2808 280.413 21.5508 280.557 21.9468 cv
280.62 22.1182 280.647 22.3159 280.647 22.604 cv
280.647 25.9712 li
279.458 25.9712 li
cp
f
283.229 26.0791 mo
282.617 26.0791 282.131 25.8091 281.987 25.4038 cv
281.915 25.2061 281.906 25.1157 281.906 24.6929 cv
281.906 22.1899 li
281.446 22.1899 li
281.446 21.3618 li
281.906 21.3618 li
281.906 20.9116 281.906 20.6147 281.951 20.2725 cv
283.174 19.9663 li
283.129 20.3896 283.103 20.8936 283.103 21.3618 cv
284.183 21.3618 li
283.877 22.1899 li
283.103 22.1899 li
283.103 24.5039 li
283.103 25.0889 283.211 25.2422 283.625 25.2422 cv
283.733 25.2422 283.841 25.2148 284.057 25.1519 cv
284.21 25.8721 li
283.86 26.0161 283.543 26.0791 283.229 26.0791 cv
cp
f
284.975 25.9712 mo
284.975 21.4429 li
286.18 21.2539 li
286.18 25.9712 li
284.975 25.9712 li
cp
285.578 20.8398 mo
285.172 20.8398 284.839 20.5063 284.839 20.0923 cv
284.839 19.6782 285.182 19.3452 285.596 19.3452 cv
286 19.3452 286.325 19.6782 286.325 20.0923 cv
286.325 20.5063 285.992 20.8398 285.578 20.8398 cv
cp
f
290.303 25.791 mo
289.979 25.98 289.62 26.0791 289.178 26.0791 cv
287.909 26.0791 287.17 25.1968 287.17 23.7026 cv
287.17 22.6401 287.575 21.938 288.116 21.5688 cv
288.421 21.3618 288.872 21.2266 289.258 21.2266 cv
289.565 21.2266 289.898 21.2988 290.15 21.4341 cv
290.321 21.5239 290.403 21.5869 290.6 21.7578 cv
290.015 22.5503 li
289.772 22.3252 289.51 22.1899 289.286 22.1899 cv
288.746 22.1899 288.502 22.6582 288.502 23.7388 cv
288.502 24.3418 288.583 24.7017 288.737 24.8999 cv
288.863 25.062 289.07 25.1611 289.277 25.1611 cv
289.555 25.1611 289.808 25.0439 290.105 24.7827 cv
290.177 24.7197 li
290.726 25.4492 li
290.546 25.6289 290.465 25.6919 290.303 25.791 cv
cp
f
293.984 23.1084 mo
293.984 22.7661 293.948 22.5864 293.84 22.415 cv
293.723 22.2349 293.551 22.145 293.309 22.145 cv
292.85 22.145 292.588 22.5054 292.588 23.1445 cv
292.588 23.1626 li
293.984 23.1626 li
293.984 23.1084 li
cp
292.571 24.0444 mo
292.571 24.0806 li
292.571 24.792 292.921 25.1968 293.542 25.1968 cv
293.957 25.1968 294.344 25.0439 294.713 24.7378 cv
295.181 25.458 li
294.65 25.8901 294.092 26.0972 293.444 26.0972 cv
292.12 26.0972 291.264 25.1611 291.264 23.7114 cv
291.264 22.8833 291.436 22.334 291.84 21.8838 cv
292.219 21.4609 292.678 21.2627 293.291 21.2627 cv
293.822 21.2627 294.326 21.4429 294.624 21.749 cv
295.045 22.1812 295.235 22.8022 295.235 23.7656 cv
295.235 23.8647 295.235 23.9634 295.235 24.0444 cv
292.571 24.0444 li
cp
f
301.167 25.9712 mo
301.167 23.1802 li
299.366 23.1802 li
299.366 25.9712 li
298.114 25.9712 li
298.114 19.7144 li
299.366 19.7144 li
299.366 22.145 li
301.167 22.145 li
301.167 19.7144 li
302.444 19.7144 li
302.444 25.9712 li
301.167 25.9712 li
cp
f
305.801 23.9546 mo
304.963 23.9546 304.675 24.1074 304.675 24.6567 cv
304.675 25.0171 304.901 25.2598 305.207 25.2598 cv
305.432 25.2598 305.657 25.1431 305.836 24.9448 cv
305.854 23.9546 li
305.801 23.9546 li
cp
306.827 26.2051 mo
306.547 26.0884 306.295 25.8813 306.178 25.647 cv
306.088 25.7373 305.99 25.8271 305.899 25.8901 cv
305.674 26.0522 305.35 26.1421 304.972 26.1421 cv
303.946 26.1421 303.387 25.6201 303.387 24.7017 cv
303.387 23.6216 304.135 23.1172 305.602 23.1172 cv
305.692 23.1172 305.774 23.1172 305.873 23.1265 cv
305.873 22.9375 li
305.873 22.4243 305.774 22.2529 305.333 22.2529 cv
304.946 22.2529 304.495 22.4419 304 22.7754 cv
303.487 21.9111 li
303.73 21.7578 303.911 21.668 304.234 21.5327 cv
304.684 21.3438 305.071 21.2627 305.495 21.2627 cv
306.268 21.2627 306.799 21.5508 306.98 22.064 cv
307.043 22.2529 307.07 22.397 307.061 22.8921 cv
307.034 24.4409 li
307.025 24.9448 307.061 25.1611 307.465 25.4673 cv
306.827 26.2051 li
cp
f
309.491 26.0791 mo
308.977 26.0791 308.563 25.8359 308.418 25.4492 cv
308.329 25.2148 308.311 25.0708 308.311 24.4136 cv
308.311 20.9746 li
308.311 20.3716 308.293 20.0024 308.249 19.5884 cv
309.481 19.3091 li
309.526 19.561 309.544 19.8584 309.544 20.5063 cv
309.544 24.0986 li
309.544 24.8911 309.553 24.999 309.625 25.125 cv
309.67 25.2061 309.77 25.251 309.868 25.251 cv
309.913 25.251 309.94 25.251 310.003 25.2329 cv
310.21 25.9531 li
310.003 26.0342 309.751 26.0791 309.491 26.0791 cv
cp
f
312.019 26.0791 mo
311.506 26.0791 311.092 25.8359 310.948 25.4492 cv
310.858 25.2148 310.84 25.0708 310.84 24.4136 cv
310.84 20.9746 li
310.84 20.3716 310.822 20.0024 310.777 19.5884 cv
312.01 19.3091 li
312.055 19.561 312.073 19.8584 312.073 20.5063 cv
312.073 24.0986 li
312.073 24.8911 312.083 24.999 312.155 25.125 cv
312.2 25.2061 312.297 25.251 312.397 25.251 cv
312.442 25.251 312.469 25.251 312.532 25.2329 cv
312.739 25.9531 li
312.532 26.0342 312.28 26.0791 312.019 26.0791 cv
cp
f
255.526 35.9712 mo
255.526 31.4878 li
256.526 31.3076 li
256.526 35.9712 li
255.526 35.9712 li
cp
256.022 30.7407 mo
255.662 30.7407 255.382 30.4434 255.382 30.0835 cv
255.382 29.7144 255.67 29.4175 256.04 29.4175 cv
256.391 29.4175 256.688 29.7056 256.688 30.0835 cv
256.688 30.4434 256.391 30.7407 256.022 30.7407 cv
cp
f
259.307 36.0972 mo
258.749 36.0972 258.145 35.917 257.56 35.5933 cv
257.911 34.8818 li
258.317 35.1157 258.875 35.3589 259.387 35.3589 cv
259.82 35.3589 260.125 35.0981 260.125 34.7197 cv
260.125 34.3687 259.901 34.1885 259.387 34.0806 cv
258.838 33.9634 li
258.155 33.8193 257.749 33.3516 257.749 32.7124 cv
257.749 31.8569 258.434 31.2627 259.442 31.2627 cv
260.063 31.2627 260.558 31.4517 260.946 31.6587 cv
260.622 32.3433 li
260.198 32.1182 259.865 32.0103 259.504 32.0103 cv
259.082 32.0103 258.811 32.2441 258.811 32.5952 cv
258.811 32.8745 258.965 33.0181 259.424 33.1353 cv
259.991 33.2793 li
260.909 33.5137 261.153 34.0176 261.153 34.5488 cv
261.153 35.4673 260.405 36.0972 259.307 36.0972 cv
cp
f
266.299 33.8193 mo
265.309 33.8193 265.012 34.1074 265.012 34.6836 cv
265.012 35.1157 265.247 35.3862 265.643 35.3862 cv
265.958 35.3862 266.264 35.1968 266.461 34.9087 cv
266.48 33.8286 li
266.48 33.8286 266.372 33.8193 266.299 33.8193 cv
cp
267.327 36.1602 mo
267.047 36.0522 266.813 35.8359 266.706 35.5479 cv
266.336 35.9624 265.94 36.1064 265.454 36.1064 cv
264.409 36.1064 263.942 35.5303 263.942 34.7378 cv
263.942 33.6846 264.733 33.1533 266.192 33.1533 cv
266.499 33.1533 li
266.499 32.9102 li
266.499 32.3882 266.409 32.1089 265.868 32.1089 cv
265.21 32.1089 264.508 32.6313 264.508 32.6313 cv
264.067 31.9199 li
264.751 31.4878 265.319 31.2988 266.002 31.2988 cv
266.713 31.2988 267.192 31.5601 267.389 32.0552 cv
267.47 32.2529 267.47 32.4961 267.461 33.1714 cv
267.444 34.4766 li
267.434 35.0889 267.489 35.2871 267.839 35.5303 cv
267.327 36.1602 li
cp
f
271.385 35.9712 mo
271.385 32.9463 li
271.385 32.3252 271.241 32.1538 270.863 32.1538 cv
270.575 32.1538 270.161 32.3701 269.864 32.667 cv
269.864 35.9712 li
268.891 35.9712 li
268.891 32.6221 li
268.891 32.145 268.846 31.8657 268.72 31.542 cv
269.62 31.2896 li
269.729 31.4971 269.782 31.6948 269.782 31.938 cv
270.268 31.5239 270.692 31.3076 271.178 31.3076 cv
271.879 31.3076 272.366 31.731 272.366 32.5684 cv
272.366 35.9712 li
271.385 35.9712 li
cp
f
275.831 35.9712 mo
275.831 31.4878 li
276.83 31.3076 li
276.83 35.9712 li
275.831 35.9712 li
cp
276.325 30.7407 mo
275.965 30.7407 275.686 30.4434 275.686 30.0835 cv
275.686 29.7144 275.974 29.4175 276.343 29.4175 cv
276.694 29.4175 276.991 29.7056 276.991 30.0835 cv
276.991 30.4434 276.694 30.7407 276.325 30.7407 cv
cp
f
283.041 35.9712 mo
283.041 32.8203 li
283.041 32.2891 282.923 32.1362 282.573 32.1362 cv
282.239 32.1362 281.924 32.3613 281.609 32.6582 cv
281.609 35.9712 li
280.664 35.9712 li
280.664 32.8472 li
280.664 32.3159 280.547 32.145 280.168 32.145 cv
279.889 32.145 279.565 32.2891 279.233 32.5952 cv
279.233 35.9712 li
278.269 35.9712 li
278.269 32.7031 li
278.269 32.1362 278.215 31.7939 278.107 31.5508 cv
279.007 31.2988 li
279.097 31.4429 279.151 31.6318 279.169 31.8838 cv
279.53 31.5146 279.953 31.3076 280.375 31.3076 cv
280.781 31.3076 281.131 31.4429 281.465 31.9741 cv
281.907 31.5239 282.338 31.3076 282.825 31.3076 cv
283.572 31.3076 284.012 31.6948 284.012 32.6401 cv
284.012 35.9712 li
283.041 35.9712 li
cp
f
287.369 32.1362 mo
287.008 32.1362 286.676 32.2983 286.405 32.604 cv
286.405 34.873 li
286.639 35.1069 286.955 35.2778 287.252 35.2778 cv
287.918 35.2778 288.215 34.7827 288.215 33.7026 cv
288.215 32.6851 288.017 32.1362 287.369 32.1362 cv
cp
287.467 36.061 mo
287.081 36.061 286.703 35.9351 286.387 35.6919 cv
286.387 35.6919 286.405 35.8901 286.405 36.1421 cv
286.405 37.6636 li
285.452 37.9067 li
285.452 32.5952 li
285.452 32.0278 285.424 31.7939 285.362 31.4609 cv
286.27 31.2988 li
286.315 31.4517 286.333 31.5776 286.342 31.8569 cv
286.63 31.5059 287.081 31.3169 287.557 31.3169 cv
288.476 31.3169 289.278 32.0103 289.278 33.5942 cv
289.278 35.1069 288.629 36.061 287.467 36.061 cv
cp
f
292.571 32.2803 mo
292.471 32.2441 292.4 32.2173 292.292 32.2173 cv
291.877 32.2173 291.526 32.5229 291.436 32.8921 cv
291.436 35.9712 li
290.446 35.9712 li
290.446 32.7573 li
290.446 32.1812 290.383 31.812 290.284 31.5327 cv
291.194 31.2988 li
291.301 31.5059 291.365 31.7671 291.365 32.019 cv
291.725 31.5239 292.084 31.2896 292.526 31.2896 cv
292.67 31.2896 292.76 31.3076 292.877 31.3618 cv
292.571 32.2803 li
cp
f
293.506 35.9712 mo
293.506 31.4878 li
294.506 31.3076 li
294.506 35.9712 li
293.506 35.9712 li
cp
294.001 30.7407 mo
293.641 30.7407 293.362 30.4434 293.362 30.0835 cv
293.362 29.7144 293.651 29.4175 294.02 29.4175 cv
294.371 29.4175 294.667 29.7056 294.667 30.0835 cv
294.667 30.4434 294.371 30.7407 294.001 30.7407 cv
cp
f
298.439 35.9712 mo
298.439 32.9463 li
298.439 32.3252 298.295 32.1538 297.917 32.1538 cv
297.629 32.1538 297.215 32.3701 296.917 32.667 cv
296.917 35.9712 li
295.946 35.9712 li
295.946 32.6221 li
295.946 32.145 295.901 31.8657 295.774 31.542 cv
296.674 31.2896 li
296.783 31.4971 296.836 31.6948 296.836 31.938 cv
297.323 31.5239 297.747 31.3076 298.232 31.3076 cv
298.934 31.3076 299.42 31.731 299.42 32.5684 cv
299.42 35.9712 li
298.439 35.9712 li
cp
f
302.047 36.0884 mo
301.166 36.0884 300.86 35.5659 300.86 34.918 cv
300.86 32.1001 li
300.356 32.1001 li
300.356 31.416 li
300.86 31.416 li
300.86 31.0288 300.86 30.6328 300.905 30.2905 cv
301.922 30.0474 li
301.876 30.4165 301.84 30.9658 301.84 31.416 cv
302.93 31.416 li
302.668 32.1001 li
301.832 32.1001 li
301.832 34.6567 li
301.832 35.2241 301.958 35.3862 302.389 35.3862 cv
302.525 35.3862 302.642 35.3589 302.813 35.2959 cv
302.939 35.8901 li
302.642 36.0254 302.354 36.0884 302.047 36.0884 cv
cp
f
307.547 32.0552 mo
306.917 32.0552 306.647 32.5322 306.647 33.6396 cv
306.647 34.9629 306.979 35.3501 307.574 35.3501 cv
308.159 35.3501 308.483 34.873 308.483 33.7295 cv
308.483 32.4419 308.124 32.0552 307.547 32.0552 cv
cp
307.555 36.0884 mo
306.323 36.0884 305.548 35.1611 305.548 33.7026 cv
305.548 32.2441 306.332 31.3076 307.538 31.3076 cv
308.834 31.3076 309.573 32.271 309.573 33.7114 cv
309.573 35.1792 308.79 36.0884 307.555 36.0884 cv
cp
f
312.776 30.2456 mo
312.551 30.1372 312.417 30.0835 312.227 30.0835 cv
311.885 30.0835 311.668 30.3174 311.668 30.7227 cv
311.668 31.416 li
312.857 31.416 li
312.605 32.1001 li
311.678 32.1001 li
311.678 35.9712 li
310.696 35.9712 li
310.696 32.1001 li
310.273 32.1001 li
310.273 31.416 li
310.714 31.416 li
310.714 31.416 310.688 31.1636 310.688 30.7407 cv
310.688 29.7954 311.264 29.354 312.074 29.354 cv
312.461 29.354 312.786 29.4351 313.1 29.6152 cv
312.776 30.2456 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ZRBFRM+Myriad-Roman*1 uf/ZRBFRM+Myriad-Roman uf/Myriad-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Brigden, Chantal) ()%%Title: (T065_FTPH_RR2_blck.eps)%%CreationDate: 4/6/09 4:49 PM%AI9_DataStream%Gb"-6$ZfQCE\=kO!<8`;DJ2DC9q^>RH+a[p'Z]c0%uV?3CF:+UAtqq,e3Ln\J/\:9De4BcFjB58!&tU6B=r45O[*R2WDf(IQ'Lh7%kbHJ4G?<rD=0FjCrqY#s=Zg\8iGD\mI.YfVs)RYsqI\I>fN(pfC$kJrpEd2drn(5_8Ei+rCthn7[]@$`p!rFg]Bs?]F*"qKCj.h1%/jA#@=$M\YI_NM,D;[))m4O^f:VPXk0!@b%^::ehhH[/.B3ROt,6%B8@^CNth-DXO(\QDlbdnl\]=Z^cIs#u2EkV?l&UY_*s,fh@%LR[Dkoqr2s*T/TR<h$_mof$_mlglb^gXeCV7K/F!J$H`$D6n-KVE(2rq8;[Ao-%)l^Q21jaXk/BIt)-]J,`=,PLfU!jZC*SXYo[_%Q2a&Ij1"@+(H8h8jmC%\l9@JKaM(kc?>l.=CIYj/mPlhjfO@=b9"Tf[DY(emHgG3YlOoCG%_fqOL^>2:_Jr8higF4teo*4m5<%(E%<u4rIgRC.;dl/'n+Sb3hp;P"#23c)2=U>SbDsoUMh&idPDLn1Q?W9/]jn=)8q/kTlZd1R'6CoAfd:L_`]B/JRqR08QG&p/0s)_+s%_,kLLcBdqM]AWp#?a$ZIgO@JDI:Def8hhr7Cp`Dr?+<@Q@:>-QMcB8Ad3^$f(Z3T)jR&7'+Rc2qW&&i0;>N4g`P:88]Y:oP[%VO!%X>u:`L>VANc:>6<(.J4rY)gciDq2T>F[Nt3mJ9Fed>7DdbFp"fNk]sm(OYtSdHf?RU1)BVbnnTuZiPU+aPuL<nojinU+N6Fr6+r_%MpL89&rE(Na*[YA-2P)OqY0V]U#+6on*+'Fl!*WHmITN51nI<r>,=WZ;PI2@;6,qQ5M&)7V)G_ZS(dkge$W)S>,`887fQAedo1"(%H:gu)T$fQqVpsl)F8GV+o9AJ'kKiDikKiZ,7Z?kH4Er*bV'kq_muKZ,J#O1-M>j>P1aehC^7uRn^XS!M7/t]J'bbhXk!]6t-^kYG%90E;Oka?$Ns3eRE-UDHAoM/d-n#'2C0D_$h4F^*[>ostFE""9!9Csm/`69r^N#cEGgM,`[7bRonW"mR<rhZ3jJs\F0_hui;C.7aC%'a@_./Bs7TV,&p0X?ZZAOV<EIV,fE;qA61<.KNlGIX7d;!0(7J8(S10"4jFdn>:HHbV=D^3Q?dIU1[ab[*V%eL1[?J8[G1i0l)/0%o:pf7($M.L#Fs^TqNop_m#F8-b1=6.bi'#(DP^d<'r<f,3@G'<T_h(-'R7[^J9AL@Gb^DeMWihLG&!jl8+1[Dhr>5:Nh$Jk`gQug%ki"Q%!W<M?*R>^RUq:d%=c0,.p-IM,pB1BAdfU'D:*3M>Yro)iNCYcq:Cl+)Z0HT,^$$8.>&3mDr<-3/o#Eb<1]51`&Fau?M*FKP%`<aQS'7Y&BkM[ffP_.5XkducNH2864$pX:FZd8,dpk_4*+$FrTaRBjm55uUpLS+?OqB,3J>!)Qsl\a$b#s[2B>W<2_q6T7;cY&lZ%J"N%)jnU]2kVrGJ=SeP:O"NY4hl!C>1j]!\5Jsr>p7/k5kPjhSPk>o\UN;k&V4[Q$]ph47POoiC_I*.8T>]K`fBM2dmP=Mg^[i0.%[T:D`@uG5LiohU-.3SO[Ic>Vk(IlPs$[ol3k\9nh][6E,IctE*cA&;@rUZpdLn8<[D0iuTru(jl_u"Ml&H*lU1sX8U`fZ2m31qu,%MtiT%&`stKcP#tBo1"eP:)FdZVbg\m*e,,?^hB>r%r%XLO6;o_\jh>ZQQQ6#=R2U?8c"*;lc>^iBTrkf2uIO]/jq;OG7k*68&>;h%l`sEXik3%<^CqI4QF^hupWn]!d0i+6:[#DFg4;jX9j$g@Bq*KugZm8"WFbu*1Kh0k*VYWO[HB!qo\Jmp48O,R^Yu;M58E>`7/'[f%\mOn*$#3=nnqcis.)JFN1sb:HB<pj-Dqg0&c`ec$9%I:beGd[&V/iD[D9K<;>>FpE[dLiI!M[79ggU%sqSRZcN';fJaK/&8SJ-LB%5/0;u*=Mju)R/(k$g!-H_m_Z/V0Dc*0ru@L\Dj:n^JAPQn:>?eARU"AVha(:hF"Uiee,MeH[>\(K]-c?WRHuhhi'S[4(nfpGnF`/%kaan5kX)ct6fNXVJJ&f?Wp<BH(X,'!<S@t%O]+\p;NBF"N]r6TLZ`9AkYDh]W+@fskG+s?jJPhuR)=t6[Ia=ZSPfWPrJW2CHJr4[%pYI@-hcdc"N7K)cdCY/ILN^%r_o%\N6c*BPI8';$iV?nOe+lNVEB8F*MG.N.D9$-dH<4A0qr+njIa1"koS/[L\)VO4V2F5KJi2N;%QoT?/e)sX\NI)LCAW4$jf?l$1=qAiPEAaGMcWQ\_gjShjeN)mQq!E0M8]Hr5e^2(aD)^5$poaYBh_\X=meZ..8%tSmkM<QqmS36/%X;<ab]\Y6tY"@50H$XqEhR.9>:7gn-f-dJsp%cR=ZTS&2\[oCYT6td.YrQ0`I'(YR:B&V4=JEp#HTPB5/p=;-b?(2+T21b?)a(mr%c<&`qR\)]'=l[p&kg=O&oE*iUTZtHSbscPl`SDW,CsdEa[bF[6D/[&*;!u^&%ScDHVFN"X^$YXdp$;;=jLbq@]foRVI%T3LY'1hR%`Q`]tp7db;GFQkRp>gP1,7Ihl3GD8o0!EQ-DAngaCf>,_SY*!lfC*l!YM\-,h!UKklc\DXV\>#_^[Cl3H[EJUFn51rPHSm_bF:F\%*H]!*]=GSa\f2RPcZe]UPKURdnBjN`rOLaT^KS+L0!<dtqrRB\Fgn%Tg0iUlo(N*r>MmdQcaQ,GSZMk(g+4oQf1'$^X6$3Ad%>Wl%fs\j_*6.<V[aaWdmHnNal?;q*9WU1BMeedWc1Q+b5'`%)GUgWY5<_<b&rg.e[iq<D0DPhdE^MR*WZTS8Ii@5FSmT.D+9LdulT"p<%s7U3:`/9"m\(gIEH)L:So-`tokiC8_S$7uEHh5@%HdDDU#_^fUfOlk(2sWXmrm7+j^=hB!1_Mf0Grd.scUY`7"_E)<#PU5To*+&Z%N61aNhWP>(qAP@-*qcH&rYdBfJ/3VOGOl&eF\XH0F)u=VH5[02\QnNXhKN`l>HW3<?qY!"+.^'T]6_0Gh-FoaGIME2DQhVUSZJ.E%\YJUWB;9,;f,qc>\[u*r](i:R#tltYWR%bK>I*[H](g8]A"O[ps*-<pnmp/](=qsR+*?63TQ[kjHG4g<rpJV8qWNtu=kV+/S,Gpr%bPFHlQCIRkSQoF5CA[#ah.X800"=2WQKoj!/q#^b`R:W!S,W+j\N.ELp$/>IlB6#I-eGutq;&'UKT"FA/MX`cIAnT$?`m`h(ItpR%PK!W:""e?6-d1iL^n50P[@B?`Df1mLB7j#tgMQtu^3[J!\6u9*VU=pp0A^!KghqR'_+ue"A*O[$r3>5TS$k:ek<8\,R_C48I^?S#%?i=lO]t=:'lIGUlA&caPS)s%,`Fk[Ka)4(D#RhdkGbRLM0&E`34'l5uJ+?ushsJLLs*F5.b<Ij:fcCpEnCrl5Mqdpb*PGR;l$Bi6%Cj1*pB(=]#]BS@FIas3&@"qSV^Q!Gb_[g"#I0E:d^.B70^Zk"Np2B@NXnDX2BOC`jpO9\i-Oq6I(TY(_b^A=*K^\nlQTa4WGO+45%rhr'=K.M:\?eelre2W&-6_%es=hf45`/DgZH[E2M[G>,Kd)OGYYMQE@g[!604/<lmMuU?C>sHgr/Q:\skA?"DINHkG]t>\)mGc*S%jn5'tHi)qc[s[]eA@u&O/U%SWpF_=$2#;(eCs%n@l^^N)qd\4OjN1moOh]jdQ0iS`nQ5%Kqd-P"*1=dpp@mHo5.Wh]Ml5/sK,a@<%hmF!pg4&ir"9#k<M_>lrr"$+nVrlkX4ioRJiuAlS=F2#(QNJMbOrNKKkXdMs*f)q$G0nRgd8_-C_,.j`@sUjDW\cFFYA0'AED?(e%4-!#_=V.MQLYr7lF6&7=MpVN>4:]cM`TbcklED7MB]?:>\Pedn37d#tbAc7N.J/!I-KFg0b>OCZ%2E/D^tPVO!]cL#=]kKia+KI[%lsVR8fOnh'f&gA7kH<T[CB)YuiAg#ep\M3B,jj%HFkN?]a"\,N22ii1[NWT-PSX0C]=,a#2N3;eVT9^#=9NpI*K\m%[E$8H4ls2,%L;ks)9T`ruf#,V:H)WOc#)r%E1XO-&>*$@2A!FrE]IUOkEt?=PjMIjsNEK=pg@fkZIE>W(?pb5.60Cqr7Q%_"'=;(5!D1SGF`#B<%Oti=DqD@?g$CL#>9d=t#UP=UD$S^OskLV_7e#+ZTX4GB0I%)9?#U\_hTI7BlSE8Qn>=mPW\M\[=UUIsj=)`*$3#h_ec?!40Y6e@d%;AWGn]eOK\6MRZ<hEkKRL%G[%*X4<nVZmgM4;s>NVaOQk_<\sXMH56nJHts54aPYGbd[!.mi%tsf>ctPZnRL=INE[WK]V^+@6TBN%_[%pHF0i<:-&)^hp0I:L6h@Mu+.e8$p`M]c`J<Vb00V3')m.,U6XC3A<P06CUB8rS05V[bYh@"j:d"9eLZaLINrEus(E\.4q"OgA%IUhW8M%^QUi4VM_1Q`R3>?mgE@>HB`jPs-\/h./5/Ct`!6]P29L)EO3%e@Kg7r@f0K(P6ZVdUX.;rb.1aXXp_Cbp4$)Hpq;>t9;!%"_%qo2'Q^YrB[A?e#G@25;qAC]Y&+5;JS];.@DHn/DD;NZbEOC\@4In3V)<JoOh(\[Z,C/A&</sRgtGH4,l=1P/Sf=2N7i6N$BJ!%g>b)@%rc$VB<igUntcG>"mbZ&qlSL=1Ln:>/@8kg+h4bD`Rk]\5n\3HI/mI2ELU2O/VrgaCD1,1`jSeaFo\VhoA[18E_LL?,beQF%a5k'<ic2?QU4ZEV6jG@iQMlL"B2XQ61\'9o!LIW!PNiVPT>Bq_-Oi@D>hVKsab[9;</1rmERJdLXt40l7\^fD'8<B]7X+7tn&3hf%A#&/in*S+p/d6CJ0KO5a`&6*LN`KI%7XEhD:.VR>,NG!'WQ;&7KD$ag$Qg?EJ9E!q^^"(],;kIj^R+!'GYd8Oc:D_j^,->J(^jHA%:JTW4go-lVYXq?g"6ld=+@%6d`Y4'&np,7&%(2>V"WoN3#/"teD]=:WOM0lf01d*dHUhAci!dO/V<#-,%Q&=^hQ?C(A=VBsbhpV@%P@Id14LPQ5<KNel64[H(D.Eui5\l;4!u_GKX.ot\=#g>/Q^N*..uVO8'o8dBH1%)qosVLJ9e!Jo3JNLL4TUV`ft/6Mk[=+bUR-QJ%T=ckN:fHXm0u]q#(`Up,k'(o(gM6J5NJuScXcB:*[P#[V`M?En"\[:+aT*$RLhV2cNna,P;dgQTpGr?K!DK/]Z1^r5ZT>mPU8G&f%%nt'LM9osEAPV;^!FtR:k::).7'WspTPk'koeNp0f^QnMo\-`]%%WPl"9MQXplaFB/LDHZgDS\i';1@n!Zm>Ek]J_c!ur_0I)DuC%_k=-39;*H"K`Zc00Rtce$YJM&:uhV8?s9V+.Ced>=OUa5CR[eTUMC]t!*@$@IIqN_D*-&f;o?,s!B:t5!$7,Ck]J_c!ur_0>iW/^%^1bG"M]Zn:^g#!eo?qVgjIlcs^`mDsUKHQg&/f:SNJan?kO7J.DEU!%MZ=]M#r'ea`#Z4UA39TgmudsqU;PDnl7mnAZ5ju-UWTA:%C'V-eKp[E'OgXR;(*OMs]dSC-(a.&Xa\a7gBUgK53-m%3P*-c8+n7tS.1C%2*qk,K#_B7?_3kQH8)MZDaj;Zn`FK)Y6jIQ6L(a77%2R0#\^Xm6+:.I!g8#,IbNotP8""##e_D`&I/&W@2.Ts%8Gm&lSdFa`eLPs1@"5CrNhCM#5_!V%*+YP1UdW26`(6]=Y:m'4me*XP[%4/K5V2XY\f:.?pf8#,IbNotP8K)mtY6t*_dS(`QW?ZR3<+UFpcjq#VHYef]-I1tkXS>%5^8a\boVS+mJ7#;?$&I>U>:A+L$)jg<H%mI`L?a!2FPLXD-.*ThL#"$oZqge;0oZ>m!])RI(U?,T&u&MQmU_)gPq[MH=WCj_lt'dIZ?dmI83HYq7$4tNQU&0O$<XZ((4;;3G&%\ZjuW!1]!U!09T2oK&Gm!=ff(^2$k^^hOLd,,`hp#M@b!Um%Zd'kMeqbgq?er&SGQ3HX><<(.3Qk,=_Tc6?'V?6a+l63`EWV'_tO%!K)TPhgi[jH'u"l$dcj<_eKEYQ4B@$Jg74beEn+$&]>N?9s_fH('fM_Z-GSt.r8JZ8fb8JcR2d@Bf?=s'F_s\*A*2od<"=<CaAP9%7D0tHnYK>R9OYe09lfd/aoPsfNG.WKe+u?V!N0<lGs;@EAuSLpFpFHG4V5Mt1Z'Zs)DK_"LMeWGYC^a$QPcQO-<GLRo5em]5h8:u%7=;FDo[N(ZPpkWrZ>>:e!NN6RO;ocW%Hp^?%N8VAQl(d`)3.:X'7`e$;gF^4J,j#F251*OW/>9kH7(:Q[0A>%&7J,]F7T<"m%u0j%<u(??=XBLLS(mFi@]Lr,-5;!B0&DC,n_uH7QP9spq,::SJsEc&AF6$a0h;P`^T<8\OnYW&+dS"5&t=,CK2.aZo`hLWO62IjC9'6%%%QJ:i-mZ8+%+\T:kg\P.#cNNC8PC)`[`"](%&hc_UAtCQ3Z(,=:.ET0pr]L_"'[.93RLtB*4fhFlt+o:YZ!RFS'E49_#"#2GsSPu%V.g@d"&Xmpklm9qK70IC3'gcSXl-QZ>[GL5<EPAl?nQ)T$"BbUE!T&k-!+rQZF%"_-t4BB4JbfDR8=-rD6"q<WBL\K.&?eDk[`EP%10<bpOu:P-"tM]&3<bl$/R-U?X%.dJJr(ndHS_+<iWVmM?Wj+eQ6jCre!R$b`f5N4JDQ/h?bk%8JQQ\,4!JU$H?u%(.D.>1C)>@^%)`K"0'Q)SdA2BEO"I[ZG<A[`9+3U!a>Cee(!R$O"fRTn?d=HNPgIBa/pgjs/9'tP`R9HUA*9tmiYUBTloO"(?n@b>NI'>@E@]4_d%A[Up[.UF8ZNcDR?e(%Fk7QCLh;O!WNp7#b0#IV"FnYZC>&OdFLDO?FaL7EpcC"7ci9ND/G$S4:pTZX\8G:(DT=F#MP(Sc0#%?+gp%$f9")CEa8&!hc]b29]o/.r[e&H/A&7RT:!Ab_C7rY_//eCc#Q$05IWN/+;^hKEFT;CPl*6U+3[m4iBbT+GoY+=B?bUUTk*TPK:#r%DJ^>cTOhS*fnpG8m#$L9S()FkocPNPM\XX5.1-i-S&X39I@2dgH\E3#-H+T+"Z]9hOR]WNXN1u#g88+*aKtu#L]+3CO8?0%(c*ta%dR9\(`l^n1hHNTLE7Vf)+sL-M@ctW3KH*O/8Z[>T[``6A0mRUS<R\CqftLB_aJ-C(:4Y1dZA;M3%)qG>aX78O=r)T5!uk8jJ?H.(%Bq(R*=@A%IemZ$'1eVpIBJV0BcWp]pOj'ru*laM[^+Hf&eKc*qoqhBP2h@ee(>=&MqGnh<P&13+76?;cjhA==rqnh.p4\-D8=#6X%,uZk9fHn_!dhZ7-QFBue[QDV"V#@Sr;LG[r[UCeTJ/'k@d7%ms1TVpr_)<Il;6A6b7HI51A"T1>rCcJF`=,k]=%V&p/1ui-<+iK'%P8B#1)qf@Gh@:T0o1\ioX#=iMR:J(V"??o^:rl[2oe<&T`9-`(mBgtM^RpD/VrBaHmlE6J>NP?sYi,#oq"4!gS?*WnF%.`b%c6Kj%n">"pist"A!R@?:&U?fIBf#?]KXfUMFbXUg8qF,g6C=f*[7dS-S>h'b3b#?Nd*#,#Xc+CN3XHl=`7RhsdiSpl)'m3f5d*#^/AA"h%]&FsS(\%ZuIO#,BDH-,W@np!Y-fRm4]12A<][:Y-lNX7d&E/XPM4WXBd>PI=D5E.nSVCA\E8%b<9=AVL@_=*N6q5<eg9fdjDYu;9%BcH;AeJC87LTnoJ<k*;uH$2K9GD+7bFjB)J`JhhA88/G\OeW^lM'B0o5=oBBSk+CVY`L$.C>70R49U](2(ZZ-DPV$PpuK^Y5n8Pp%0NPFs2SDH4-E5+r=StKZKuL.E<dfHS@;*as3KR4(UCUg$,=)r+n[;XpQ>Ti46.<j-*SccWc;8EE`7J!Y\g4\c?GLD.7.K,H8-a6c%O[uH"$^ES(6CEOq[Jef]NKllU-!`ElZI.5[+\J&pkk^D<`lP`LL(*O9F1S\[85<P'?,(,YVgo:73c(]bpPK8SAi]p_DL(d3OjPG=%oFN+K3+9=6@tND845PW('t*9e:au'@XXJ6"2'V%ARlhHN*A)Q.C/Q^&L?o'I7NFHh!u)IE]c%,S&oY0p.)Um;+0>=>)%?3lqHSAQ%UdOX,/suK!MPsRB9!KH<l2c"Qq%4RGZZMiQ.!ag#(AE(C<Cah+,SX":>#iOMMhV?UaPg!2<64g.UU%@3I'pe6f0#]#!uNkY9pN1(%ipiT'>!!;uLi3WAo'3Gh97lNCSA^e19oOKfVAQud_;\"Y?:AZTKsQHXR$qhC9L8>q@ZM*Z1@\r?^d85=j$UNfA'1H`15Cs3cm&sH%PZ?)jLDXam>`cUl5:D#h?GOk&\C*9?#jPi+[j&:-\Mr^h@Y!chL`7K<LW!Y=b:4='^E`<"RK"u2k'rI@)>A]6A4Sp9\Pq/6(mZ*f%)kV>''I:!q3=M(5GhR>F<1'V?>?09"'UmYgVB#]d%YqBt<gmo1dKA8?aJm[NplJ'6%[2>V3-aGM7`K:t\d-6g*fO/&6"2ndN7`ti%:;6)9+HO,n&huf:FK8#3c9??S.o@.r&[enFI0np(n"uEP=J/6cBj\\N#Y;+B!8C3MZB&O>W&f^B7'LQ@"0qGqe93?S##!nf=[q0L%6d(sgr1@L[3tki#O"/tsW`Cg=@`]/f:$qFeViYq43tr-mZq\O*1_Fe#',%,&a@Z")6cSCIFj37C04c+);IPt:@'rpZ&=CHOYg,CH%f+=4\_W\@p*N)S]e4*"-[$E'7koPF+S\7iQ0g:uQaR)6DHACFUNsboa^0Qt72AAZ[_IX:V0oH05i'8Y'E+?X.*sf(a)R%<M1mCa%%-XdOfGb>_9dtu7*EYX0[>l`&-)pU9dLYSD]d(H;2c2s[?p4M%b.@-/=Y=*kNj?P\36<"LpX1f'!9nG%LoFO&'=!/W[b^f2F_?NXd%,b-$+*551iPla4N8A:?50o'bIDnWYsqm+ceAND%[TMV40;CZl<K<oAZ,%=sIEUIrO4uhteHYt61:ImgZ"UgPQGq5(56%b<$1J*E'%R%s=$,#ElbN@)$k7*9=2nR3(GV7HoeUGrDjFX">aafm68HP$^u<L[[Y>O<P!Etq&G(Cd*I9/15%6%RQ%NQLC(/0ph:W'!Y[04VJk%>+%8=:gAOMi^d1.4Nk;pK3:rr_NLnnj@H>95[@hi@\G?7UjB+u$"D0'K4\DY!WZUPS&G:4`PBc^+R5$BdVNFKlSZQo]KZITbCYM)%Ub3<<9F9R%R[:N!M(^5(/_QE'&jnuaaM$pSCXhRpKI9Xl&JThLTgu-r$WECIU`*c@/*/H!Ws;Li7%2,XbI-krdLWj<g!X$#g`^G%%,b97dm_ST,8-MrkK$gpO,>aS;?GbK3<&it'Lp!KjLqS=*gPc=[U]=Vm)uLgE)*P7+CifZ:]k-%k`839/ll-nF?FOttPu1P<==./^%HOM"'/JbG,H._6b#WiuE/:g[GYuETVL5mslGh04'H4sT6-ubf"3&hTifS-,/pY4,"$cn-!86uTI`jjFS*KG%H2'Gef!pNUGM8g6P%'5BpA#&hnV+H9rHgoKC0'p!#S0-CMY/I.eb[3o,W@X6]-MF=iqOBrUN7MuP_6)*(>5EMl=;q59R1`D%a**1t<7LgS)GR8_M5K+,q%&I;R(KE*ER4Ldth6sO3sP%0BgVG1A\[^J-[#UW3;UpJm+9`>aEWOUS43>-m(ao"+=c_&Ys'I1HEX=umjH.1`q&SnWbX"Jpu@::9p%-5YEebOC$DFtI8Nd'/'/f(l3'ED)Jf>j*t`KI%,!;1B8Ta%0@qm9a[,g\0JBX<(",R3][\M'[)XA_rHrWJsD;<Y1A<2HQ7-&\jZ,%UT#HkYJtmNs"S6&0mFiFNJ9TdL%]kD+7r540N%=<@Gl;8@YFNe__aH.EajFbp0c]EQbn<5QmiNZ!%E.=%p))(9I[uI'H\FbbgPql%aZTd'))?\'HYp(LAXp*u9/k*?f_ZDQ6$ke_`8rXb(b\([$,q[,DF8-Y=-O-3fL)"I'bo1Ra5F9Y3&dNB)rthjaZ\R%-[H8!$BiMJ%-)<kI_`X4T/dL&:!s<#qo?X.tBs;3('Bi?0lI;Ug_^/tea/NJj2T`BYD^A(3:hK%35[!,TTR<dU&$dt.+Vp$J_41as84[H@/!:Ft%o9hpCX?G\cdOU^la_LEjIKCGplb$kB>qE#dUF!OQf-o9FDQ:1OaV=ur0`Y0*g;G=n!HVoYX&WW\KX>Md!AcK=QaGX>daE%Gk>O;Z%;-9F8MnJA\WdESn[T@rARHc4=orS?GL`/U#[1QP!WN8^(b1'tt[j'H@Uh-h^hg1-NBSVWCV$7XtJjU2E7bs2Y^`]Y2p+,R$81?l2%Z5'Pq,s)j#!Bri#WLeAj.Yin=Qj2'W7>61^C!j@i%E1nDQY7nL$"kMG&cQ5bE0HVb]8R>(<#!+].)7rkI0gpqW.fL,-tmIG_(m,E%'r)rdTS7bgq]&Z0d?:c5.^S59@I`jZj^hRua%I%%im2;p1u=5gi*]EW#o1kQ`C-iLk'\?W#taM&C4<BIhEJ/ZQjX0WG*D1#D6dYD%n3'lj+RhCkGp2l*fd2Lt9p\qc'm@DT<_!`64##7mmi`/!QCUa4QGLT<B`5otlq1R+Wp4%()faes]!pRV=Wpbdi&!Pg\/@:5K.3?%%6nFZ;d30UYHs@,d(Ik3g%:[[tKV20]Zf?XDM;830G<dMtrYSAEp_]i(oI>T&p:+hnmK@bm!')Ma\>]B3l/3WP\;MMcQbomRPF&R2%,LS#d3Gjh3$KME@Zj@3R_of79QTIoAZWK(UPgUVZVY:3#<7L\\%KE0,i2hM#U'K/KJu%bA'mH,<2sPq!F,cua<9#f?Y.?(uO&2Tt%)PmPY.ESU=:]Qq5@[D2iC/bQgpO`?S%#Z=n,\;a/W7#'[&\BeQkigQ_,U8uC2faJd5Z+&7>=_=A'QXf/aYEqVbXM(\X6'YbSho$-%(M-0R]%`=k`,[ee/k=/IW_mhb%C0auo\0!N":^>;YB/n6G8fI0NgZOb84?5eY*:(u;mLSgk%Q\0];gF6D%TR^,S!HY)%lgT@0:K]%YD?N6Y&2_I"##dELLdn]Ji)RU&_U(/"kg615e4g"MO[LZ#OC&>nE)VQNNP'*%0T?f#Nq1hiQ[sho%Esq2eWUNM&EaX;%"j_l/\qZ%#3_pDDCKd*,Fk2h+T9=D?2$^#-rE9&34]Z./t&FK`<W>M-2j2@.RG=jqN_/E#Hta%RN7oY_UKj9Raq^,CK&S"=m!j#dfcX>?=Fnd%IF]NCVasf)'p'SB[PsYRJJ_C8F;0!e=k;l$n_&`)d5eBXQnAMUdZ=PAB0/gJB:AFn?GsdMk<n&-Y;IhnKM5VX\7Q2HVX&ruQf*Xo%H^AMk@;!Rdq'jsh_8TQj4qu2'1ru^h/1O;KGYE\G;)lP2,_S&c:PZKi>s:ZL9irn1LuW.bT`Q[aA&L:EX2oTJY9KJ#eJrDP!J*nl%/-Z328HihLpanb/JP@,bd%bE/OURKfF6G5G<[a**igmXt<Ce>"HdJED%Zt6DLW-=+7?.g\@](MLS2Z&@T[e8s&2lm](>CP45.%.r%Rt@oXVV8=19Z;T3ED!BB"n!jL6P=f;M$qBlc4kM,,fcg>='i*t9;&Q`M8Dlm31-[O4oZ7Q,t1G==Hqg!jZ4C6rVQeA?At4+*iKR)%]'Zj)`#uB?`Z2kS@aca"ebDUBij&3b+j,KCg19aIb@$(6R86u.-](u9`Zu7P3q0#ektD>*.\pF>p+>*P`0GlpRE8^sZbs:kaK[*u%3Rf/P:fpg,h5NrC\L_#U&;>k8QBW[<;ibml4eo((m^qq7b`h1c=DqsKcgK'FX<HWma9D'lE"WLbQKH9Dd^I!0,YD<K6>BFp59a/@%'!!daG^4G<7c[Vq2P;FP[0&m0H3ka'Y_3+Ac%,qs*WYVNT^n.S0f7s9)jCG>.^g#"gRJ7dqS<:_"+O8`-TPHG*\M!a:oXNkYl;KA%%ic;&9aG!VH9WA?;?#g-H%0.i9BW^^o3-gaJ_,50[A,Jj@htU"$t#S05/s[N?32';aoMDmR+U<pTkR"jn.*[D&3"CB)OS;@hn$I=%s'S`&4<m_f)H<EiaQ4gd+?SXI;Xab)5U^iT30F#N2%0^rdamQ.1%Esu:#QF5k8[sloP!q03"rMa/uC<j$lGf$_T5\&G1uY[,R<cF%#3L$b[@*:.+c8Qa@iKHq@*9_5Pg:8@R$`c/O:OeM_+ZJBm[a#%IdY&6/Db#@B]`uQJ9N&R=q14lBHNBCS:o`E%DaC=+a=GiR2%OG%&P6SgQbC(RqA8RjIAnKrFksCJgSB6t%VAEM/DbEq2PZ'CW\^n,8.l&\]N2/p&<Sh>5ZJX+O*4!,29eQ'g1*2eW[1L\QOVqSiu"(0%n@gbc*L;#_cq7QDjE1u:kpmqg<Pp[]7>Sh>Ud1Ts!U-b',VV[fb.(+Vi5D"DZomA+h_eCe!<o`b'dE:2_7dEK%mm#;LYQrApX"54%T3Xt'4Wmo0[i&l&aAm4>"%[>e:Rbn71>)c*p>U<%$S]1lpFNAen;Q:E<,>EnY`nhg:Z8*6M!7Ki*_#<6?JHNrqLb(eRNm@o*cLE:%0=LEtjAmr`B(&&&kLj<+JBu6nG$NE9NTq7B:@8.D3uJ*^[Jmtk2eL,O`\3KS.IBufe`]!nbgC8-etR#&nLWpfM79_"N.A:&.liGh%AOF4sgqOH*UdYqV<\6]XZdH4lBYOkQT`hIIomS4G]Rfn6hWSs4e<n%VE1.[i`ed5%+,G(DnO1dBjOhZG,\41/,Ee@(eW:Us*iNbW%-/#2QfqV0*SkP-,f$1/u$=n7@\=]<]eVP0K!L#IMX"=?P>nRnM&`]P7BKl]5*EEm1hP)'fL@>ABD:%6RJJHHo6&`=m!<=6D_IXkM%?%<L)do\/s5`MB,c\i1(7>*!r9<qo\6[;EYBUEAs]q/Z4#FV8D-RhPjJ1`Z.WArNicE^&YIAFAY?#L80VLaMA=!B<I/Kcb#STNVB%<'oMdkR,jO2,Y&h'"pgeKO6DY*:a/Q*48GT'I;(9ZlN$T.OLu2"Vh*8&Hrn--((3QhM^;fq\cAg";Y.1J@8#'if!Lkm//E2E<)#I%O%=dH]aVau!DQVQhMtpeDtHaW5fOu.OO%Yp2!Mhd)=3.N!/^-?Z4,E$8M@'e'W!X[Re@Xek@t<`e?N=T#ff??a:<a8LEjLC"'_Lc%)PBdT,5!/0?oJ+$81/PAPY@jR)Z8A&Pp`QtU9"5do(')LeQ:q=lA;s>AhoJV0C#E"807q&X!1q>A.ep&#%_je9^P(\NPJ$K3dEJc%9<Y:`Je#GWmE5ZN:.9bt=B1fWPWcHch93[;Z=[!+!=#Q46&VGU)KbjGkbIWc,Qt]u0[p,s5UNqu[?d?:]Fl0T'O-P2?"u4u2[Hn:%6Ua8DJYluIaJF!u.'^(R&Qj_X'4XH..CBmRK7M<>#Y6f[:6i.(/%-P^QNDhk\H/H.=!,kqQFh1+QqjXgAX9;agUX-Rct%RFK@T0p%>I?)_A5?-YDiRHJFD:pZ\%-;10ZgtB5cmdFPY5j3-khJ]OF>K[m?Ds/</LM'i-Y`$jUpd.a?t@`l7=_^%hU`n2(II00gN@Bj!&X6%\k?WBhXjo`-UgLFb"90`?F?E6rgIQgO\.l(kD!AZ/klPS&]/TWGg^B-=UjkIMmJjZ1Z_Y/UNBFf9qn!-$r5$MWH:Y#j;3pP]Qal-%FpYR0aGZqp6*:1pHWrrG"cPe5"JcBY:E4qK94B$+Y%4TU?I()&^aEZ>@ZW/C1D4A=@2.;#jD5&*C\;XE$Y%W&*OutSM[0n>TL`<M%fRQNY2V=o!p=f%;_W')u-%ZK/N1M/X83B_QBYah)J!NqP2!lj;Y)+PVU)gJf"n5?S=9@7`aEd])$b2X4f3uKAgq%4D_5`hJU"UAO%3DU+"VG^(ZK.f[ZJLV2ULf%-HX*S;]YDH#O4:hp(g&$H1m[ur"HV[b2Ji=U\'<Lu8=J(_aP5"!_&3'E(K6k9,nF'+Ya@;C9m9q+[%@k^M_:g;&QVAZ&('nte*>Xoc8rKo_X^=Te9P4:<^Ub&!mrfB+C1K0JE3O#Mm0d+DG>,t:I46l+r`.U6%lITUl0[ms,8q#s3^*ZLb%RU'kYKEtW)oAr;"]bm\mT,KfA[i$k#[OZ-"DO4q@'_pGsE>?+uE:+HZ3^YVO3YNHU4^SM<\VT3Gj17?*!@ZVfb^a;aH=`j.*HH$?%Iu+K:+.Nh,$_BZ1NUm#fWJGBk?Gn9hUamae4n(qV;AkD`F(8/_[O<GTg6e/he?\L=I]jD5-H>j^]g/ccPU<&f)`V*,ebhJN!gC/e%Ak+jjc?=+m`pTPc7q<H]_NmY=nSf`t8^^Yje?MDAID##\]A2`0`GF)Cf6G%577D,pM36Tf,ir@?K*knMqK7,+72)j]W(M)oW*r^L%"h4ue_i@+(el$fd3CGB<n8LBXBMfpF80G+I)I$cGdZK_iSV&cXW[3N^Hj[r0b)g-SL5:.h)>,'#:!^k=kfg_`,ca8YRB97_<m##[%[*gJTV(uRh(5.&i0M.QNQQ.ZICJ:W>j>_cSB=*p,5d#@i2-i4e/]9184X>XTY$t=C>uf@f'm8;>P'lEb64AT2,@5n<[#-c7W22ec%)>)AXHS!,kWZ=4#1PB"5,bas4YaRf?1`(pFV/Y*ZJ22kF7bg,c3?h#@6mP/=NU>66KPFP74-q^U<PiM0QdU;T"I:PspuPL3.`@lW%H>G,I0WDn_%RtTV24qYU8.@<]9=F6(5*Tg+V;$)_or4Adb2ll[-n1p%98b'rVIa;B)+%`i1'+3KFk*o[Xgl`naTV9lGa/#;5Ygg5%%\d^!>khG`&<h.A'!R1U&h/YHBSHR:fSK/^'a.g!:IbXT6)q*>G!Rle/?$*('JH>)E:qc/*-<E%W=-YuA*>45ZBiTeZ"T[KXW-G"%bX9"m<(Vkd7f];Y;WggRSVITZRU7`0[#S7[E!^uKf%JGI=:.\oMT9P=3*<"T$&^N,?sMtiM-S8<jQ7#+#l0,b5fI<7qR2Ub-AY,?%.Rj*A=Gs3?+QLh,ek:s-O3+iO!ejfEddg!4'oBQ-OGs&H@%)!1%#/182j$q5/Lf,>i$DMt:.?^:!u]4r>T&JHG/S5hPq*Z>\?0m4%C=LCiPZNJgI#>&07GE]P^5A`Z6o$oEkYes0<Oj&Ne6$0.U*Vf3)S3>i=-k2E*$']In-B<4NO5t&D*T[oAR*SN4Br"W?B*SLT_QLS%@s2Zffq*^PC%2uO>I_O_dTe]2=ch]2[#!sg;2pKUVF2+>G"FW;cF=a'-!h!]ZIT6nRg[oY0e^h->c>[hM20r6/`Z.f)CW;10>'q1%_t_&[('jn22mAaB_+'`U-:&2S%Ls-k?kQk'<j&Z)L_1,S5p6d;VPPOb!RM(*Hm,jIUg>o0F0?8Z7pAg/7L("](Ula_#Xth\+sH5V%,?8tseid,32aG/$9<KkqpT*dXh64.Yi)GRrG>faJ2\Q_P>Idl*B<X*cM+`jn^*f`nQ4"=l)e$E_$#tg,+\-c+JR'uW;n>8u\nmpj%O)PDVQ%T,rBg<qQNo/UsE]+_?jIMV?CJFF+adOFBO/;:T"f@mM:"?%.puXlE">,e'6/h+.LUq70o4\+.#ZOGrL$9BHld/;u;n?>#%KPmPsK$mS&$He,0InNraKb%I#HVOVH[AKbaAW-mCL0!lM8bK4nHdPI`E=)GTH)U.!5T&@`AC9F+VW9FGWUGmNqrRT))64H6YJ!gb%(#'HlZm%V//RdX,aqaW!Z'rdG'r-$pTQ&HQ32B)MThSj1cg0"I-*lZ&h3!l_6_`FV`J<O#.o8s5@Vq[EosUc0X+?32+`LcsA^\3E%4-43$,SO1WAnZ/oTWRNFSO,`(3UK(`bj!bR4`FC0D^D-bR@)gk7L/1c)q-&L.>T*$l!OX1Y:;gfbd!@W236Kpi&fm>8aGhY-^VFC%Hi'Ba'"&EF)b$]OCR<P&R,F*)!4(33WuAD5eO<M:&!j'/nPK"<A<Q6WQc]nOY_Ln=p4PJ'01Abd,A!<?;:q.-Crj6W8I.nK9U]fi%>4-PE"^41KW2l++"K`"/JjQ__P<!#!j"DC&&eVKOXAjB]3nW1P\1g=geCbL"ZpdV8l.1gq>Y_tbeB<S54hrKo2]=_s3[&;>;I5Ug%e<L6\bO$V(07YM]9n7RM(q-Yb2(D.[l]@Pa-QUlDE_h]0h_&3i1'G'XEG@O)6P$CP)EC42;_\8kQ:C=N-lsHMY%sf<S_]Z#P,mI/%V4gDC?F_XkMI9)s*oA1QW>)8i5q>^"?Km2@Y1EIP*3B">'(VqC_N[AOPr$@tRYL[grD;P&CH5/!'m7n!gTXhf?N;B.C^P8M.rKAG%Q$+:Ak:/>M!/oQFmFtg)Ik!Wph68D`"&us#'U(te51Oe<MWfg4=ET0`I"KgA<RfDcKUROjU5O;]-rQ5TW(o>-CujKOo4oWmBZcB+%_']ME[U2:^^"(VNZ"`H#W\@Rq"S25$Y#cQ]HA,&I'&%nfEIpk&4qDAu'$*]-O"+4=$r[]e#7aA3Ab7Ge>!s''EggIhMOHDX`;OI'%IW<_.YTKf9?c\GrBWU$RSi/(B2u2)F,BJ5s+@]lM_kIt3!trlc/dk$"f+N9j`!M049*,Q1rPYOYc8FjtH.@qR;LhfC&#r3bQK4Q:%<mTDt:!7'+Hf(+8YT"GQ9fW5W:30SI#!eE>Fod!W<)6/?#-a\u(Y$U=]*R/_!qACLP1:`7Na4gXS=jY,>#P6XU<!sFSul#=NQZsY%9M,+48<ED=amW2_JVfMR58@]Y.R;)Mh;DQ"I1NRH&n+,#/?3FCZr=pn>rpqR^ZIdD!"FM+REu^M@k'b3U3<b2!\9LdF%.fOnDsH<%=qJQLLGtT,VhnplPZ@Dl8:E'!Gb93qI$*EYN5YdMq7W#=Z,LuDDECk)F(%-(NZ%(c<Q,N%i&,;-c2eWJobN/V>@iemm,a3@'`u!7%gkd7BcB;.&U^A>$JL.Ji!!dG=.NHRDMM6rR%\Lo\dYjHMG;[':-^#)A-tb5=WP5#^TO(tL[iuEo'TH^kR_.&M\L;q=iLkEhcm+MK%M3r"7TG!Nn@1bhnXq-?e4?ZRr';_%"9@$#&Bs3It,\r!d:,is@$RDtPf^E)'42;`X"hd<IK"F-I*5$TqKq-#rofYS;$L[jX);8Y8%/,.q9a:>YJAASN`17d`@B^B$aUiK.T#FPjJ+[B?2?<l%&ZK<5W7'13+8sBT-E?sk0jBVBd?ufrS$p17j#7BIW_H'+/^'P:cfKZ=X%$$oJ<''>9QW;uI>(6JiJWDM>&K&Nl8*K\b];Q,]t1G"FSL!=1Nb8]HJkuQ_Goo_5D08$:Ua9>@]IiNJ<WH>o@.N@h;DOY(FHc!33%n(H)ZEe3Veap)+F6+8$`XTcZE7G)$\EqutQ4.;AS4TK'NE]Fsm,^j9gjK.8V"9<"mS_AN=WZhbrG*SZsPO-ZZA#3iA7tf42%<bDp%[Vn0GNUF86Bg@7)D+#0jB]p"]$*]X\\bpK3]'4g!$cr$@UOk)aN$hq;]2aG9o\a.$blg;0>e+jid\DJZFPqqsrkpNn5]<u',"E_O%_+Js:f:Ys\[g]+)YU-!c`7%>^Sgo:USq\2kE(<q0bY',kkhI@/R<WT'*n%KqmF+^E-p#-LjJGQ:ePt+M&@AQJ<KauRpr7Gn.5eqU%abJk#iFIUF$K-Caqok^R#HbPn$$LiO[sPsj:Z-Ybq[rsDi)7?s$o!oS#(JRWhi(#f@9MMcP@t;U]n)P<ZI8%Z2-O':pBXkh;^'k=%W%1YMGV':pf/H[:U]jWDZJ;u>UD7]\:V3/sC<lo^A+4D_;^VTW=Aj9GJC">&gaBk"%YEK66[jWg0?ZMuU)'NqdTVbI0-!%\,W%4d%NmgtJPn/7?TVTS*Wd;Eq1_$9_8.[T2ejR2t#J$]7$9EXHaU>-q[J_=TV6\mdY)eZRU9<f'%EL/rRfK`+P9$,p/g[f)*9cH"EoPrM%39tI\V[UVT)S?E"Ope7E*p<r04dUg2;LaE&2PckG7u^LC.FkP;iN@F+dH%fWS/g=)$7VQTGDn]oD/guNKa&;)6e%j^[:*k1>Odu9%%u)QUC3%c(*^g^:LhR];[>Lr>6BjTc[AVKVqb&AYgp&7qEJtN'PIuc3CfSSTZ(1q#`)`WcIST,[@U]UbI1KN(?2*gn6q#\3ZX.E>%#4]c3/6gJa.=A,@l-TO!"9:%.`DJKH1l=YO8t:4X9>+Sr"iE=*'?R,Gl$#]PY2cm2(Stt;9K^*FC7V%FZjRX/;W<$4?U-Ro8&/*K%i%pdt(p8FPK(Rgh8;KudX#jYV3XBhOYa;e?9F!.+,@N+@bJ^+fhuZ;NXs@BY*$jJs-"q_j=K4(&;P6,T"aL^/_$UX*\0uS)iFPD>%EjJ)eH%k"mWeF(p9$;`V*n$8-RmNm3$ZfuioLa9.bPg\.7t%2,^p]LYSNp*[Q%1-^F<r0?\6P*4%oM5@SC,\M.5EC580l6"<Bj"c%B-tDK#T+_W85PCGeIbP1!Fjds]bnHRKYS3#RH3Kcks4iu]g3d\Unup9LiDWgUjt)#%H]*qElmR.8b\Jk!+I-Xl+SX\5`*FqVkdd:%Q5Zt-C<0MojTqn3"m`#@fid]-Y/Ji<9*3?&@4GE#%ql]oqf;&^&I`a_lqd'^JM?R129gZG:hY_[*RSX<#)0HV,QYH>1"[t1k-oq2%&[<a*3YfWD[o!tH(VeA+hK7A('Z-[d!c1-56&)hd>9S(4"f;9EKZ-cdHWI:E_;f4_n(-Ln'V(RGpEK0fF-J6K_d\9o!oK81?Gn!*%hVOG<`as)_X\X<;V*4.nSo&6"qXe4?B`"-%r+3imac%k6mNo@PZPl3V"9N'L'cfLX5C*ibr;;i6fU@7SA#"._T>]$u[MPn/,YVN>%_5$S9A@pj4ST?K5r+s+!1G1rI?gm+D_`d?(e>"@"\H8)6)PoD(q37R_N%ZFD(SrTXUV8$`Ggr$Y1;n<TaemQ4<cCP3O$N.ugP;@@%9fo:@"ZCW@/)P0N)%C?]G$fNTENa6DVd8]_dgctBXN=gEV=>?@HfZlCTGMYt+mKQ480==6@K"$KrLP?I6O2'n"D^+lmL0_V0?7Hg%!+e=W.Bc3EMamj;Nu`&1+7?N`s"MPLB@BpsKuuPtOd#uCk`qWc-sTmNk-^HgEk67J@W]n-OEENEC^c4rH&rO4K]D+cOYB6qmKdfB%KFBYt@taV@QSM$$DdD]H+oRZdN"Ih<c]&ML'd5EG!?kK:TM`cN8aDSkYQsQ>XA_6nkO.bFYlfI6#&"VOCJSA<5^e1!P=@i7",622%7dIhHf<fcTQfi(Mi1_i,.p<[.G2icFb$q*G3%l#*Rb=4l?1eY+'>uSkG#5L7g*,@D-(MG")QBi4DIU<mP(B.`_a%j;K-VS;[u.HJ%6OkYa#B7$Um&F;;XprSu\P2oY*$[[($"WX_^]b/e(GlDm.>o(,X>aYie1"#rCh&_Mhn`6g3%>bkWKK+kVkKeU"hUdX5tiNej_DM(%;l3t7&e4<7AS%l\C(O@Z!c'm%.ts)+g8%lAKoIHL4M)R^2EQa;:r"3HOAY!m)gO:']uaR*YJ/<X&BV9%ESo1^e3.>0SO98KTrU+W%m,tf+%j>d"_6ZdS34$MK>84nJ;@+-NCtb6j*MH"-YI3(E?Ab/COhbcks0COKOhs-.:(CqIku4hM$9V5JM1d*oE?jh*<!7_'gcUZ"%9FMrc+aOb]KFAtQX\9Q8O:_E)[P_(#=n6lPQNdq.1fEm]G(->m;R)m2=$`8@Nf_oZff&t+@QUF-3(ign4^HJW/B.51W(lsQ:C<U;%Y6HPj;EfmVS(VQDHmoqLLP#@'_d"323)tJd3.KA"goCiA+Q;]ek.m,6%+`6aK\-<kiJ=cOq/6Eqf8'@<bXk^P%rh**pR1222NBd+%m:jN^bo]q8/:7Pd!bTnA^_Z_s'JMiH:O!TM[B/F=,i_)n)b]E@;K+uI[ALn)Z[!J?ehcqP90!5V"uNhe>HM.&cDca.=LnHXG088C%8DK$#N@TjJOn%DtGMbgW6-B9A(!P64T`Wm$%OpOel'[1K)6>bM&mE?i_'5S:lgq2D<@N/(SQaG)fW3FuXMoQ""pmm\\CIH8$_nCP%.i"']XP)1s*iJYQ`r:=/1V':FOQ1DQ[Ylhe@S9RD-(Cs&iH*.bQ=]/e$,l>g-n`5J<qbL_Ek7LB74f_CC&r+6@Cuh!O86\mdUa<K%L9n`b8QOcbChAd6%P654VGjm1hufKOO3aie4bF!m^Kg9So/TB15O@8jY,(r=Q@mHO\c][Fo1o6J%L2ZERZ#ofgp$VhhLurOqj(`X%9P4\.*d2f>COLjB$cCg_BHd"+MX<`cPTh9ma%2Wk6@!spLg%b@<+kg)mfgJkYA1\BPPatd^3kH/-ilb'XK$#s%9g+m+][;B;`DK`%$_1(BGi^XR%elR:"g,PYJT(pi9@,^I)DT8dFY&?EIsR`O0uAMUKMu!2ek!r@D_=n#7@*\JE7(.7)0)`D:m>k$V^1D>C<2)5\Q:\V%Hp@M6ZTYaXHEr:9^5ZD2Q+@pIV`>@m6t&oL)&=PEP8C6+!k(@Fa/BtWZJ8lG%MD)@)9eG,!ZYs<[]CeWaEP'`bA>^*,+KM.U0nS>%q.83%#.A+E6K(ca3lm-%J8E8Mm`<%M*$)57"$mr5Ij@U*75'9mE7)*K#9BpH(_I7TjkT(qUsD\K+J)Z@&<`2hemLAM1`NkM(J[BB%Z83C<;shEp0[ctKL4E0:UfJp%_Ecs]gb[!j.E:!m^gN3K4Mi^,8-Ydk%''\^4*&.h#Z>Z"_9n7Y!d$m;7*[alXc.e:"*t1m/@>W.%CQoEePoM$qZ\X1r@#QmG7*?nNQdJ2C%f^I_$ATBXn6NZ,8GNM)p`<S8)Qk_$*.Y.I]!G_KS^glZ@$IRh;FErTbbRU6lp)"ZB!?rN%ekY8\[`Xc>@q1f7<qGAqFMlXlFAj!@L'sj;Qn"FL+VkB?1eu[0Y-'%(fG_GDa_R>l@K3or;GuP5JH>YD=&`b(#S7$^Lu&0_1R5;N%p9pbq!bb74Ag8m5m;(#/7)8V_;ac:'@oC<:@:3Ee9FF(GdQP4N!KQaM4Q7%m&iTo,/caHdJ_[H"Z8`>iD,oh*,"uU7?o>\S]%*b]%Ki8@_9W>@2hWffu)c;MY5nFP/UDI<if8tRMpW!XTP4nuH4rXTNY>Xk7%iCfU3Zpj!@$Fl*?ncX$QhVj]!`p+=["Es$W.Mqof'[ch%hWVVjTLCiE:/4)MU0DciW,XQ-[E?:L76O&K2h5%l;(d%C4365=M)se_!%V;NdURG8<qD5*X;ZHS=cR%A8j?9B'WG#9Z%XiUYrXiS%^1Z`mjHa3m/(pmJ)f:L[M&;%PPQ^Wa&eVb[5cTOp4,>q,"9Y>r0-[\l;0iGt0F$g:RHao:?B6qB=UR'Ze30Ql\:3T2+,VeU[P(H!%[&G#l\aNm#<:;EN<%n?R"Ml*<&_fr8\r_8SYaSpfiDAVYAgTZA>l'm(06E59?p5j;fS?KfU[fJg4.$lp]Hd:(Ncbjo=gDbheg2h3%EUaXfg<lWr<Sa$W2OtV0qC@05(as"!,5G6EkdnQ$lU`e_&,EQ?G%-%OeE]]!fAoD":_pi1>gO=A0l.Po[0qh/?sngWM)=LN3ItiD%C;7I2Un)*C?H[/)J7c>hR$U*2iR*7BWn`2S,qE+g[<@k@1g$NI(:DrulmtQ"1&&MuG/7Q'Q:Sps,S<B4D/,Cg`7@\Y<@NSn;-:Y-%>@jXk7ZKO\(^?;,B!]?u=e5qah8+Vf.=KD[`"cQK&i@oq0bpNS\tqYRiDb5rF6H7W0K:dkNR'j>DW!SGM`r]B@WftDm38F*..ajA%!U8.Iq4n"kWPo@1<6u;qe>b9":;Q2T(fHK0'EFn+p_6tf<s:2*au9=EDZ80K:Dap2qi#OEdKKf@10r!Ma+[lHJ-mqO>OMXq*)"V@%:f2t*]#q9_P,s9X9`u1?!"9kr,%6d03-'\m;86;m2Yc'3p;a:OIm68F2GSI,k]^lABtQLnoUL&&o;2U"@]uZ0q>poiWF(7\:fV,/%6=toa-pX[iO;jemFM`e.)T^cd<ADK<NX>+d'hu=LMh%eZ&[62rm.Di+j\$J22k\m_<6G\J6D0A6$HJj[0Nt_;"\14Rk#Z2I8A8.8%SIi^'qb6(kW`N"O0m,]%MZ&+qU^fj_1ninP7PBB]d1$)6%W)UgSm+50=.eXgJJ]1QK^8`7d?WL^r71_":n=@*_m83\)RT]^mX3tQ%r@7MpKFk'0.suqYE=+<Z#eor[9=_%NHr(#F-lIQ88497^0ehoV&.Fj\ge"pYJAR?Dm1L^<;.Tcof\%ud3EU7PCmVugT^/SeL7V>=%<t,q*M?l*XQu(]\AfttA>?r_P@:%gEh>o!q!ZXX9YGftTTIO7QX0A%"*9D+9CWlef79@`j4Y"<f$p82TEk*2"KW\ns$<$T.1D5^t%.<:cE2AIPM[B^iXJ&Gb,a-rILm/U0]D6Q8o]i9N5,*WG=X"@?+7auMABpgG(6_,F@J2<q"-JORqdiCG7nppcT-IRE>O#aTNdrhs-%&48qFg][nJ?@Zn#%NI%9C49`K,u^cfUE$Tm=f<h=ej5hd=?3[-UW+MDqkBQj<9EE<'^Ocb%%o55VC(a6^!"(k>qnorem>+"#GDXC%DSKiBTX&+m5V@iN=V[uPJ.O_6IR-G2>ZVe:Q\63WfTk3CN>-_?&J$4DN;Gq3P+R>'RN*=n)(c5(ZYQe6?Q*L98Zui?FfL>EObI6e%pk5=8jbbBEPdp8bgI%^e%QMg6%4]abPq#^/lOB3[R\"7-T^?cUm:o[a;QS;^5OK,HNtJ=.bs5QX,<h/D84%0"Tnq&?-+k*#7R^+t%>lqP1g\%`!/PXa')^mOVK(@+5TLH'c&\'^/CE,@VYZQjO?%pi,iomD]DJuBb+)3PYN`23#81?R96]e,lhiAnCQ!!]B#,f\iFmE`Y%N\o0c;,/VM8"(CiRPi<7&$4?%f<(q`PH6"M7=h`9<R[H*_dEHO?!n1XnR`J'F_TNHI?"3t$\NjlNh.>`e0AAhqSF)nN_Smu.+#ri%_/p8io4t+Zk&L8%+*Gt$h.ghL!ifEpZ$rPP;65?TSa5A<=Dd:aKgY20Ciilr[4CN"f+(I]oP)rm>4,'62J]JrL!mH6MYdJ)20]#/%QQ,dYek61nG>bfQ\+JK?iVSJm#5aTS<FZ$J[RNOJ_ncTa%/ZX^Ai/e\lH=FXZYQe6?^fB)QAt4+)nJTf$Cd'c"]3N\'f`c:>EZW9%ki*^C-*+H7E&T,n(/_60?C8aJ@RT'mHAO/)`<mWt?HF3Il%#%*I8tA6TH4AR%>dtb$I^2WVpN0,BiQm_"UMd>6kMLeJB07V'""e0%EX\kgMnl%+#YjI_\GC+=W(ujl5P*)CXQJ,H:lW$Z3C<0\`Z8Nf=8/S`_W7GDVFEaF@o[O_cSu(M\2<EBlu!]V!fT^%`Xb=Oab!O]%?i[5^,=&gCcrTP,5U'39G:;&1\BVaGgG1F7O?LD\"?Hl"cZr?M,drKE7C=[!K-5a+7a9SgpW@^BC'Pu&kc-M)!&!OMp%c9i=O"%o%##U8fDNV,k+q[Ot_j&E9`1b8kYkh6A99NQI.B?I)>p/WmLTG*(\PRr4\#Y-s="\9$E)uqK9#an#d?k$oi1p`a'Ya:0Za`>e@KMDp%rT/22*.0V4!sQ1=Q:sm)Fuu90=-f3)6.^;"V%IsZ$8Qo`/1j2ZlVN!I?mFTI!H\4Jo\+HF_Za/eY7$ZDo>Sq6_[)eN@Z#"UP?C_j%5rF;['G7@fE8m2']LknA@aJ$3Me^p<KbXebKp>j6`^9s-T\"2L-Lic4!uQ?CJF>?U9=OP4Y>o?PPn'ln'WMRc3F]?VY_5?qR$V+b%Nr#H$"/QQp@[.DfA/Qeg*nh3+>o;j6O[Z\gp;%>C2$:D&8+8P>Ve`N*?Q-!kmcC3)T8&8o%i\EUK2f9Za1kmP5kL.ql66FXrcP"i%'Wo,Nb=JTXE,XL-FjdP#KJ\b&<<4s;(uo=T?9htt@UE[':q18Ii,3!ui,EZqbiCB`H@,2I?'c2RbTiA&BdkhEh&cK=\dCKE]!?D@%e:T(:4e>[:RFE_&D08bA$n\V<WCb2&h?'e@f4@eJ,j13O[RsRKYpR#0KaVd$j`PUE-f5cg7F>#@@b6Eg3it_Ei*96`d!1-d(!ZfD%BS(h(qq_>\FOq_%7-.uG984l7-1>X7Fi;/<,TIQ6)A9mXd_-m7=#(8;DLT:N#%/-qAFNu"_G((OQXs,`Pl-#[PoX,^"!d7hq[%f[%_C1"NLjQ2,RU;S?fr4?TA:of`FRrK==WpANDa&*4]iqE2_rP1!7MKf*[VhZ\VX9LN;H*cR,Iq=n2#UBdYX\PZ'U9%A$!soi%A@lJ%M?%c$\fUTE<<T!G$ZoKjLid[3m21(OFTXYON?g,SnPqHp.GEX0`,lq./(*N?_?8.'2(E>t.[Ta9FqIdHCGQ<_l?6d".T[3/M8d_T%-$D8VWW^mU)`pWLmFK22WHr.iPd5nCR]9*L5i5T'&WjM=mm(>r*3M12TXUXh9&;0i@-\*NrQ=,eG$7!?Q=c[h-q6@+RYg6ShP?ek%O24H5-0ra3*aV44o+3N4"ZnYb&1*^bLiMs('ispa1U;oF/!ScKh81@u%S"U%_NZ2J:+LJD1?UM4Y@KNo-(=7u&?l/0mDN4TnrRAf%1na*,:1LM-d6OluHr,D5GQ^0)E!T'Xh/I)D=(P]$WmSkeSp7A==neH%7\e6ijX,YF*WUm]PJ13iG-TQO%e0f,:p0S^=bYE(ibTm"%L"L!'c>Qq1T6a,"8I.VEN)Emd_;Hg9LKoBN\Y/"[en\0#;XZ_`7]0-kI#)3f;?YanmS>=GYTFU>01AQbS=kNF#&o/q;3M`spk_nP%,>D[0I4cnjrhN;c;B:`cN=npSQ[A0Fb>cRRXoTM]f'=WVSAr\/&2gRD,GkmX12lMgp3kiiiAFd@059=m0fUa3hKmPQS(JB9(n?dN%6a@045&+7l]m+9^K?Lf4M`Y=)oAL2K>,9'X)C/S:1,m^hrE4]W\,r$QjuBAt6a\sa&b<f0&_sKG=l0ukHXm0nqTq<f(#N;=UcV<H%A1Ruia?;Os0>4#k_*kuRJ:geHk(e=<4$0O3%S[5iEXt9o'Ah?/DX9&?+3)p^LQ#HX)9aC7cfX,/VR^Dt_o=]PPE_"LTk,mA^IS(F%Vhf$!4^#_/U]o#@p>)3+APb-%XUPX/NtO/MkmCDQ>n>"G-:cA`Ek,h'\=tDkE[CNEkoFi53DDWVPoG*]C)#)>*_mR`pE\>FP7hgO%dSJ5BpjWI:U1G1qH)A+R->P.e.qAYJj[>WaY:-?5FO7\)UQh8\D3OMPnpgjGo%9k@^7c&qA5>7YDI-FBAmY8M4[ha+bAj1q<%sf8%cJ@Cs*J'DQcXIZ*2E<m"E7YX(^j5uH<ZbjREIA@*cU72k_6$-7o].5Y'k)^e)?t7,Z%e9Pg&XVGRi[3DN4NX,^NJQgl7o,COAh^:%#jE3mniGI&^fhM[GW?N7X(SU$a=`5KbK0JPV6bs>@;l>X?j6Boi83dA*!$iUn^;K4EE/Y,MColGeTKEi=.u2AF7.nI"<5@[>&o`5%:NqJZU@Hr46?X8D2;041,U!N-G9CnJ8Zto9TWNOeZ(`S\X@Ha&K+OnqSFf-*SsIutF/nBX:]aO\lnc=GK8F-k5cB^5a[J$3"%mG;%$)`Ec7IJ,iHNB%gHGKe$:Q8gK;<W>55`uNLB%CP$[j?NLjTb=-$<=E]RFTk?kDd9er"Q-(6db0^^nbf>heCJmL;.m3*g<RRN95sl%Cm.lMeWbSXPqB#\Z.I8S\-f'e?H@ZMUu(]>-tp(\JQ'7E1.a2IS4cab,P1s_0N;:[1+I7[i$Q1[SMJbA]l?%Cof7DaC9/E%3fIk)%X7!ij-*oS#T,^H$G4A7@/9=uGQp6`!V3Y&g<VR4LLT$c<S%Z\`3piT7`mebW0Ah#9L[ls9`K/Q<Q<\$)I!#S!U-]]>#:ko5jYGA[%m^8l0MV1dP<DqbAY<$[e-rk#k-LK'6C5#:P!6(,BPslRjB'.NJAlS(sQ>B6KP]r>hPVt=!L6#NLT"ABL$+T($YEO=uMsk(a3j=RD%-qg/+H41jg)HEVMR%P?DEbpVCoPmm:LsV"kW\^f`-tV+ub13:+VS.$,VI'.qp`>&X87tdc($T.E<'NrPFU'J%WE7Q$\DPb\RO*Rb%]0B]45<D1<+Xq`]Pq0f^0a<g`$9@*5FYtYm;5LRkf@&O`j=*qp8Zrrfp9kR,.4Fq(;:Lj`ie=O0^`[X=,;9pga[--0hf6Y;s.Prf%P(`]]d#Y>B@3GCmf9Y+Y^gI1>,h2'p=n7Yi=J?)RZ04&uA5`039QEB7eatC`BqCu`05j"Ea*?c&>e<f"LG!$N^RTmSL,WoU%'XD.%6(`0bFVs[3a'at,'ia!/m^)WIWghl)"S#kd:JaG\Y*3e>e13280i"o-9a2p5kiuHHM!d408FB8>n&7tLn.uc#olAr`oPVlV6oB7L%L>g!q\?VQ9Q6]&&7\`@CYD#o@l=I6`T'L*:7#d4XUnm:Pe,u'hXE$C9TSt'F70iKPq+,^^H9#D[>VKIS(f;<XF9SJ2U088;p,l9R%L"MDtWFs@^T]fblY"AFpZopG)j'G.m=J]3>gi$)ASuQ5hh+pkYK7pUQc#f6K5r-1JgZYY,J5EZF+^8>VR/oF]$H(fMA:a9OnNkSF%$(K-K#2i*QEZ[/STXQLfjjN"[_&[q*;=l3rf(E'aUTC\#e7ibjN"YMD8UqhjRC"6ak7mK[>Nk1cPg[ai-`MI/kiO!1ARt'b'JP&X%_rhlh3S(Qi!?C'D3u`fFO5pF?K@B#o!*nJU*4BO(ib7LsYSBg91<>-MM\0tB-hck7":ECc/7DX4,jj,A5&*[>BAFWCLYP@II:kB"%jcKdpV@5"jm(?(e);#&q"';88TDZs3o8N4t.&4rF0kjK^MGq)+K:s;.4+%I4n,f*]<'7j,VM)%9;$X>NFMm$ibMO[LEF)).!I]'L%96'ibVV?+GhNC\MNRS+<l&r+r-k`2Vk>;[r*UH73'Fk^?$5R$sY[ae'Y.t'DVahCS7G(&NlDSMQXF:<7f9(^s?b(bs6BXt<A1HN6%-3XGCj]K]MEfD=^N_FU@n7E2)$kXl68?k`;.o'N%M#=8h37R7[\PNLs?#nOkdMnHr'auQ).hGAA+c-WcNDP3dpIAM6YKFfIAY'SH%HSDZ93,)&F"/XBB0\[1YN%gl:&_=aD[A-5(V'gYc#]'$q[A!J'TRA9YFLlZCbBpaqcEQUuL`W'5C9[XE$dFhHT+Ba?<6dr.T2@W#%HQ_n/fg.j$/B\.k\rGqHjH6GqZBC;%0L1#:U0<<kGcG)[b]dK.;2+4;VS\KmU#Zto%n(Uji7^u@R1$K[\Y-p=ksd\6lDp\uFslCp%ERQH8-0.t\.`PE2c(K)?PmC/l7o8i4%_<)n"]5A_253UE"mVb,*;bq&.uPZ#QNe[BJX$Y>0_/n3i+\/rArVqL(U:tG@rr4Tg+gd.%Mp\j#kL5&@5TLam/,Hld7fV3+j%iX2GOb:PoNB2NV4a=dn/'T<'9n:?^*HQJ#'2Kfe"[_CIQ`oYm?b$%.>Vd/g2HAp;*jW23a<!U%pMc,>Z_NaG\Q',k266Ro%5(5*EbhqSVFK4"Fh@stVkiWUFh"@d'_InpJlR<Q#j(D&H=XZ^^L$/+Y'$2.oYZ5ocNbl0r/HLi4@ZE9%2?+d\rt4VrMB/f^+&(\bQg_F#^P]/^(D-U>8i$uHBr1YW?dp:n&?20S$QLtuEKSs*@HE_P`[(Z9aYWQij_Do\.@@7ZTj+1E9"9Wf%IIq?ia"t7LB_We3hT!612-m@G2^u=b#a%XO?e*!-Wh+D)s4nI8^qHt5a[2]/Y+$5U0]bLf6n[\PKfrQ/UR+]D4q%pV/(Ikm&OhmG%[)*OsI\frRK$VHpanR&tf04`TFUNoonD"%Yh@Gp=rAl\@^QsgFXa>^hrotA!3WSopch@6_07oqCmIb?URh-r+JBu6nl)RM/35f5G%b]*#(nUa,]hZFp+\'I&I@PBIc04LTd$2A<FSd^;CAG-:5@DY1e4B%XKpQth>,)O',n2FBd:a*_ml;E5d`;i">""/0!>1)FC2EZBU%r=VRLO#)gk^:DEALM"V`B9uI\_!'0m_#=(1-uHM=]*).!8(`9Q]T4,pA7<9tLc[t.>EZ32."C^mPq3]i*9FnS\nP+nr?j%(aDMt5%-[;k3/-U*WlPSm'3m'KF4dlO)bMnm_pd.U'$UejH!*o!'[o@Na_.M54K+?)h#\["9>XR_r61![`(VTG"&20r%3sWaq*9V=cOYi=s%,i"YBTWk*GMZiAQ$@0B#\O0:m#]F.WmJr$,1Z8"IQslfI7ohqCi`Yb7%P)9&N,T&6`:P!,S2fiBI*mJ^JeB*6GXQP-F=rP\4$_"U%:%Q9W:4edpSKQAkHI[O>\pLetr;]85($%"deNG%=mrXM.MG+.-a!ibm$n18FO%]bU[#[o7julU5O\,(<5pN*=R2dfGrB<8>P:02R%BmV2o#b?aL\X+SLl/&RD/5CAr@WA]S'oUOH4[S/4X%,]#G4bup_lfRRES/ed,S%FiOZ;%EMT!2VX[nuKCIR5n?QWb>oL"=?V#7t\%3>t&02W*j#^>rtGJu<JcQX"Qql7\F"-ficgUuCor`jJU1F(@9a)9l"^V<I=\7I#'tO,/B;f_Blh&E#`L$uI@[JL%D3jj.q$-@23.%Qm<5*3$ASigfcq(KE1a<@aoQp&j9]:+"P*h,0DQ>YB%sd05s(l3G*SO0*.])_2NLho5HVUj<!g#PH2U5Y[HT+#@$.H4#MIYm7''[%!O3Ofb?j#njZORh!Y'UgP);S)P9d5KWBpc0+]V&FUC;r.:armK"?sqZn?p2/^[G]rjQ\29dO!JO#Q.mj6[XXr-kc'KI*]0)*[C=\%hhm3?QQdb=#n/#E(2g+JI6n/e2l3m;QpeEFS8Gis=`1k4lL7hlP>,"L$SA2[-hYX8,sVL]Wo]P<mS;-123rUZ.R%<ehSYV;IOLn&%gTYZXZ]AX['k#OLTtTd&AI_a=oh>VbSdA*49,e0`co<@F\"X/\F+K]bL^^b)HT&!N?2,Vq3YKkXPb'1rLTYBM[V-\dNcZ`oBs["Z%]']gq8GOPRrHRmTGPg`9FaLC,>416!5&HsRS#Bd7rp;(kP8C^?MlYHfO$EO.l"Y?bq<dm!8PMEPr'P8pO6uE"c8-[.hb2>ic[DuF%rUlADU8sJ]nL;P3UWlukm.;&Jb/\`WnL@f(K\K*S(h#4404`24jqL1QZ,,A^EN]I&[hp"9,lIB"`J9lTpmO,sA0bUS<DoUQqWTD9%8Nl7=P`3mE(VZ0%"j#c1EZpQG%hSNRLDd`mFnBKh`Z#HAe"$fB=*W*JP1!1Ygk?8s6]_bo0p:!"b,c>)aZJjq-@^!#%<eRKkRL-e%q`nZf+;/nojTaig&.u/kKoD_Fe.MIl$>+_ue50La+iC'V1FJIEL#T]i6OL-MY;G60iO`[nDE3^HUf^?T7rLZ^BeLg9@8+rj&ohU[%Nb/lek.XC(6C/]f)tIiihJ,o^rphBCoe_W]9@/XeP"*PIUUEH@$l\e1#cdq8moM'CV?>oe:gAZ_1b!;=DE@YlgAt7,p?g61WI50g%oZLY:(?o8D.MD6kYI7Ni1h+4:o`!nX^eD/r093cX*msR<S%JC_f.[02?JQZNr:GC6EkUDF(LJeuQESoP`Rh`np$S$!^K]X>e)b1_%nTq[WIWMcWQJZPgS!-9E>i.0*DjIkjPF8;?/=s4$`pKn%#JPZ!gs!0u2KdN6]:el(0:4l[mcg4QQtmeCrO:OnX7O@mk:TLFdHG\[%rJMDoe>1u7gXhAPG0AE32rdro`I?;!m<+>np%$X#rLGOdhn?[LI0*[/hsMH[op^l?L\g!_)W+g!r,TL*]mH^BG<]G>rNp:rh(Eml%5E-gr7BRPc^6uA.Ek2']]c/i!C%L0OHG*OTK.bk3[Qgl9Ic0I.\,CTT$$S+mqm,U?Qh92\"*f%GhoK*E:7GtoCjYo^:&jS>C>B\H%^\-G3cB`[dp#a!.6b@9GfB^Dt-]@$!lR0=;"7Q*`B_prQ@5lU>])&ifRNP?)Hc(=RNk1"#qTIa^oZ[bmF^?mr]kI[m+m7joH``c4%\:)<qesJl[N@4>0m;MOW&[MMDq2P#UqYOJlHJi!)iqCrV(PY3TS)<G;_pO"d/dfk6rEoC#pR(?'g]V]bJBg@<0=3j$_bDfK5$@*!%S,ck'd]6(EnC[-&$\H,)FnZ:NHursoAJgSh_rA,ihe!i19:ZsD#X*@9?NHgZbY0_/D"7Z=:Q?&J7HVtY-Y&AarRP)G"(i$MAr8:b%<TLb?/!nQ>HprqC8&cbB<=;:nhR)u"pWIu?=.@t>@%<X"EdOGWhWLPFT_\1YLWG4bCr3r'r&CP97NV;k_#@$ualj$P3GdM<@"Vb\%J&O6HLmXTa"a\4^r=r_3"ssCKm&rihLN4ckQcdXAh.0+DF>KE#QPF6N:Fc?%-t`3HOZtq=0!ZQ/c3J0':-*8sS,O>LfuO=jRt<[L%Rb'mGBS/AN2gV2_RL$c[Ig+*@%U50R_a.K_F2E'Q*YZo/&'']cL]'he%V#J*#-?P&%%<BQREJ1kR?Q[fY_03F1JJs:`(qdVL15_u%kANEL6+NF%H/>IU!Ppmpd>'*d)^?H.Pkl%0<.f]hoFF+IM5kbZCj.)`[5&Nol(SYd8#Z=Rn^IIjAg%oHZnqHqmCUX>k31n#=50@N%pqu+?UQ>HMD#J*o\%2Hu:YNmVQg;UT*1aaP\@g\"[E2f(U[Yh1bY:"QpU054I/j0Ck_(7W`BPCq:>0L<:EEo5d4i4'kP3;BZYmkG%6%&:paGNgbnK5M_hqg1&,"#t39mc?Rd6@3dRoLR/a/ArJ(14Mb5IA2?s/2_eI"IdaF>WU>n>+`eo%rR!e2O#m8a4n-Oqg&o_]LP\%!RA3k0-Ld?nC<G@QS5felK8*XE9h0JGYdKXen<afh<"Lup=]"[8]GEAb]`054Zi<8B:fqehl`G0qsj@Mr#@'I`f`N$)f5'7jmqO]%J?4??Y.(leT]P=q"sDe[_NQY,Rm0*O^,Q<J$=pR#m)6cSq"X(iMl1d.gVpYFS$l6KrbK4Ai\n9b2$qE`Ru>J%c,`"bV)rFsgtf^"%/pHK:f(W3+5F?B<Pa;*P^%]Klo.S;AL7m,<HM>Cb)u`m0S8W\]>qJ"B2ofdU%DH%)WKQ*fh>I/:B4#N%f<a+Ici*Z[F4J!RdWj:0%ioT"`qW?`/^NC>7T`7lieXMKAq/.eMj(*T1>PdNKF:8*Aj8\`9k/XsSh9A0Eg`YXSDjQqTD+jAfHeMc5"mJZ'%KGD%4a(.<>b/@'%g@mj-6fO$sm8o7$a"]DgrIKdsQd5,9HZe5-a7J&%=$Mh`p$oS,b7CuX^N0&A_:cTT\m>q8GosnQF=$rKD=gW]^@t[+VLN/,VWk5N%DJlqMIpGhCgX4uX2bT<$8Z6=(j*f&>2r>Eg/:U#Sq>\>b]m9;Bhsb@X=5F-?Ru>gHG@#*LV`Hn:"o\>\qIY0GqT\p(Y28`QbChT'%$H%+!@R"4ihnFB.GtGogo!D@&\o0V_\$tb[3Es80rH`\8oY:-gg#4`:h+;W<1bN0_AF]Zs?9IDS59E\o\fR?b]D%`;TO[uO3T#b^%h/9Y"N4coTFU=_3;h+0X>cr"3k=m)q[H"4#EZG,>>YI9K6VaDr'D=c$VT#SFfh/I!]>\N+EP5Ik8`opA@^ggBG0\?`<G(g?p?m*F%EOB-.Y5`nHE6IS'qI[Ef]3]=2Y'8K._ih0Dm,jh["$<q!4aFYGh/7FpQcmYEC:2A/mhs@Zqc.R3S!L-Ecd@u=ol#&tc,K(^`S(+T%H?2&f]24_D/oJ,bZ1XiJH`WZ#f_DAFVM_g%/7.eRGLnV*BTssm+MM+<]]iHM2JXnY?+5%5%2Q,1kjHanXBZ.BfVu=&k-guPYO?A4%gWL],S]\=[qg5ehm-F?A[XHh#o$O=_d,QF_h(>gJY*X!4XPU?$?^rce\h3DK1^l$e[-;7!G-Z5I-t.SVBR'(Cq8MaljTUc9?Y?31%]BEkW-MQD'0@#kbYO@d\f8FRUf=KTVs7+;*q8M1O#j_LFg7iZE4RWEsA%>lm2;5ZZEECoNq>)(9Isdn@:;5H=:;3;4jlbO6+G/N'%nQk%FG!$pcZF;!tk])NY?h?NgN47?t,N6,%%-Q3`T=-D6gN(YQg?3MRc)rLYZXJ&@*V4`dS"D=9?T,pndjG[?FP$6]mUj/o^ej-L%ZM<Jjq:G#W0<SVu(P;nCgkUMb4JKe9)CL:+X6m^s()L&rA@FK6MMT<0L0sHNTc>W;.Ilt-iT8sWH23idE`6q8POH>%5FZWG1$_0l%hsH`m(IYpZX)m62Hi.HlPOK+e>Ys&Z5K"LXrul_S](aP/YjEuu^<]iULEAeI(ftDKhT/%T^D'mslFkQpH/0N'\R&V,M=q<8l1O`;%(fmd9[iVq;LHA13Ip6KP_g]4[5*bHIXiB)U4BJ1VK1oe;3a1pan,>f:f?GIi)tD&B(o*N.l*-f)meF'o@h4Q3GCI3\]fpmabgJss%T%;]Ol=RHZXL56%gV&#CjP8sFZ[-g[)5,7>lK06`[PkV^3$!iMLZJ+(nu(Lent\ItVFb1]o1.N9G2)?[L]$H&p@s"k=d%Gr2g6ot%<dsI22ohDEgc3pFjTY%`#Feu#?T/Sam6gKZBh.=9/NZWIBX=scU+C3n=NXs^RlAN6#-J1p3noN;lDsU&rcp59p#kZ$I?Ao[%;?ON%&%jdP?E^eu1q7g=lJ1=qm_/DohK'4rgthe/iSj3>oah5`7a%j5m=Upe><Tu(=-k.$naYdd4,T-sil0O:!,UZCq;V5%^\d`(bP+].%4ak#u^:MZ3jQ>@HKTGe[.Y3f!PM&^#W4(jK@j5M)FF8/AdF3X-)jR\jH_o<ACfl5nRU2U"?8bmR4bW.ma83_XoS-<K,M[Js?!K9Z%Zu,M<.eVKTqFKXNAO)B`'[ssZGJc_2F+(E6f^KqF"1PI?h5kN:C\DADfrXOf^:q.&I5Qnr\?@&/l:WiF4kajCX:MaDhRpM2]j*b:%7&VQgm.OtcqbH4l:n'"b949@^%$b">RCt$eWs=jt*7,to4b>(spo<l&2r!/<$'F#lMUd?!?h]?[D1nD?p#G%a[!U`PkMpW37;f44%[h+R&hF#1)51$Ygd-\eh?gWslih1#?_^*5tA[qPeP(n5/PdX)Nm7,K9O%Bgl.<rDYh)p515n%ISB>bSBUN'oSn'Q;;&PjKa4_>&m%m"Us9/pBP99Lo%&NVf[3U[;aEn'QHBQ/*[b?12*:Y9)Dp/0J6HhS4>\M4="@^7@kS6`f"5Cp;Z,-*5hF[=%p:9SW`on=858o>,f9%=>1g/:F:F2<gJ@P,O4[@6d1Pn#hZsoQgZ!TF@3t5m@/BBb#<.@18t-2U%UJLT2)-tW@((kP3/h&*M!ah$mCW(l&4"D^*rMSlh?nn%B0Z7is#^4pq="@Zqj/\mjR9k]]>+C/2n,B-F5d/q[nhGPinsTNr5CnsJ,\m0s.etn]:rJt]g'>\#K_8D3M6Ms_MA4i0d.\)3J\kf%h=pni5PnYb?/8f"_p"]\c?e(%@=H\S\LUbUqW@O"kAke5p%%A0GOKdqHlL9]^J96<b_3UO,7BE.Y?MYbF"<SQ7OBbcrK6oJruU1?%m<7.(iK**dM<Hi;ImkqZX"V2iGe7>W<j?#bge'=`[Wul!I_Rc7]^p#^s4PJerc[n=]m(Lb`kTg-rbd2;Nd"nUG2oEUc.0@s+4n7K%"Gc7@g?LeJ4C<WuHWT^SQQ+FH4L-\_bp-LXN`;@ss4eZo^NcQFgRF[Go,ho@rFK`%ZmP,FDa'_@N*mLUrS5Q@aCKB3gcj=QbBAL7%j0*+bET`\_D=VpM<r;[crQXMnc0*qmF>tiWIWD[o^RY0$Xc*HWZg^?^2tls!B_:mnZ<>pqr$o@lWGD.lc0)ic8%)9.75hbtQFoCe%#V$e,c//8=NUB:3`7)op7\>W7[O,mi`rB:FNV2H5CO:I*D#Et(W^c0C"J*,d-=^P(59.VM;:s!2h2X^EgZut>apB-Fr\ker*BnpT%eYotUrHu)_dFQ6H&05[hO#8utk3_Nj**9?/p>;WQj3?6[r%.\C>19IO-#WA:e.f!B];ji7gVof7W'C1OCs-,7O#N[ihnI#uB?FF-%qAe>!Nu"`6D,&f5^>@\Pbn_3l%_ThlFcE!MI*)<\eVtVdc&V`sm[mFQXbfBN[q"%UgNAMDXp2Z>&(QY/1WOQtIiTP/2%!j(s11<K%]Cp.9Ztc]!G.t@^dqCKpIe`X!ED<4KT=sX<]<A22gge=*FSg=BEq/O*AYV?YpBS*c:0md"HVr<AN903DaPtJ3ouh>kG.'6DYI8(F%e$TdXi:OV5BI@(Mk!kCJV@/A1LRlVte7`X7hthH*m>U_URb.AF'j!:S])24[]c;Ba<&XT#p?&!I7U$PUm+URC``"bG;PP=H]YgS(%gZh9&(I%59]9p@6D"R4-oeA=]>c^'=K29++lZJ2)G]0M:B@Vub`pO@eS:/QfNC#/Fm+[R#VfmZQFr#:NeMXr,]tFp-C)UBKH2H^Z%f;Ga-b-AZb4e&Qjo]5)th7K+F5=OGl(N3mmNC#.qfn1)*rdDQWA@AekcZebX[>eM+S==n5fBBYeo'5ZWBVfaN0@j`Q5!H[9W,-SA%hh@l'd;4$fh1=0TNLl0em80S1MW-K<X#KeA5"=2g>j9VJ(jeC:jo4NJ)I:'+2YqRiof+mVREmpR`]kiak6E_58ise>WKl^RLV\tW%Df1'kNFARiAb+2^O*hj=[\;*VgCd<\oI!_"Y"io[;kqhL:[lHSm2&^$dEd#0HS-a0RX;]Z]SDJ!Q?hbX^Q<Ucs+NqOmu*1^r3H`P%N14+!eTT!EHaGskq1KXq=-#B_B;B#ZDr\0b`+ck>dEa11hqu+n#)rgC-0aFOk3:RfUUc6NM>^b0]:M_;+*Bd7<IT:E3qC49p1`rt%l<C(^Vc,,Fl0Z[!Wpa@*[c^.-f#K`>gBt60p,bjTa*mloZtW!RIpOM;Vim-:A_$OiDpfGoGN5-1n*Vr\j[35MmBaos[28;??J06;%H#3-+h;eHHHXjP8^Y\]KGNS&IqjMGePCp9.ql-T65oq!$huE[r.=Jg)q<RD*K0M0*qXH@j4("jahRH_1nrE/aP=MMm[oV";<IFgW%qX):dGAB(nY0Xg$^\MNUk1e_fPE"YJ-i:#-A'^cbs1:B,c;ai?i:YEGDbmh(C;,,rmo=VE(fYpA1Nma1pWp_<799BQj3KBdls0)J%kLko.GF-'-q>6JV@GQm5^(6N"kL8h`D_KrhCu:5d\>]E#]D)-aeA'=!CM%DBh5bI4Vah4tX+#J<Z[D<n>^J=kNSh1fhZiDm?G'IV%_Jb?##\BC$-Wdc%T;OU7pFFiO:TfBUL1FmBh];``k`=0<2ATn3"&8'VFfHf>Qa?RMIF'M-2da<=R=G+qE+Jt/gRF>iO#-P*f1XUI%2b"SV:L^$4XXsL_K\d]O;1#b5`TPqC.8U3*h]k:V#3,FVM.mZ7rl'AQcXoF7)r8*M?7rgrmq+DD>(4#T6sJ/^"Mn@]$`?Pg,W:7#%cD;hrZI*@J'@C@DXCu]tqo_<CUSR)&1^]s/kW("g*cmc5rmIXjSWUFr;:KY\US6.M#+@Nos.=D>429PWr[]"J%`d]'^05k8)Z;QS%3G'3Vl/+CV][E3UPl@ke)i]l=lPgl#ro)Bc$E"Nus-g2>@jq;JeMV[,V9p<%acXX!AkAkuD%pQ=UUo]\YAG!<f_2Yn_Q*J(+>6R_%oG91!_>Ui4j^*mO'Ztu=;,qZ/`UZQP)K5%>/gge0^bIoO+[3Ce.D`4NVhOLBrn9UTmMS`X?;P_&G@%q:3IX0<s/^OmXKmkmr@5C<%k$L2*s2rMV+E:=%2n0[%YLfJC97L!FVn]noOsXjkIIZL>jokZ>Af@&%%Ht,(^%o2&c`[;[XlSQiYs&3A>?TXJ&H;`AZkDs\[[Ggc%0.6eb,!9,b@;dfjR"/6,5I_^RAV#4%_MhlDDWNG)'b`!-Icoo@I%3UtiI8589@aTJ3d'2j;iC[7/^;a/C-Ip-V-jd4;r5'o;bf)t%jeU?iYGGQ20tpY;^XHtGn.08*VscRVY@+m:p<E28lSnj6pP[I6SFKH,1r@;>h']9!qX#:%0'lAN\#c.%/sX+e]\0.$=#F.;pSkpr%#M`I*B%<mYj.D?-m65(Cc+G]1br`+%^GC@_gD=F/Ro1!kJM,:K/s;g.:E.ok!AjSTUdnSHgsu2*j_oR]h(_o_eJ#I!5KQ5p`S><Y%H?&,>b#3_F[a3tu+/RYt1j<0&"n1')m@$s6;mXlcCk^o1pH&m')VN.pNV/n.8TfdQ3oXG8SfH:@W\pKj2)@h!Wi#1(o@Lo/"rr`%%0O(/-gWiPQa3`N&hSm\3UarLhAQmd_oXAR=?mk\+1#J=p5La];=(]o`/j7ft-[X`0g)p3qXSUG;"b0>iF3i\,BW#n#rNc@MD,V]Z%1qC8bo3:hO+'pJZUaU/>ZZ*:fE\cNb.S,<XMN`EKqV89VD"6\\\`IkHQN#J*rNkF#Yl5g'X5:)PldHSH=LTTebcYYGN:mULJmTVU%FJZB>8^@lAbI/EISP%(mHHV7VID>0Z<40r9oIREtHEHXIG5kt7M9eA-rbSD-AE!;!HZgh[mD:AjIi=,bd,**R\h:,<1MbU'[%s-*%lljfJgeTe5^Xbe+OfmsE]Zb7%X"%0#RM_^'Dc<Q<IJ(c[bAq/H6[@$$O]OHqo*m1MQ0JRA0hZ;;0Ol_(lZ8/(f.qN:@/^&oJucEL%i_eBTY]N":Ejqe,#+_*PW^QM?pp&RQ]P^HnaU5XK9mkktq-t4Qm.:2PINOHQo#FeTcK[eL<FoLi@!8!>IHA":OqKDAbH%M_6JY8k%ee3\f7"_Z+N\ji-$6<!4\EZ[>.aXt9Y&((!;Nrb[bXo!J?dK5-_AOT9\1DCnrCPM2:9NB8:6:Upqb-#2IdKZuX4*P^rA@D]e9H]T%mS9km;ailb%LB"APrud\9C*D\d]$Xd!2)%AcG.\[6i^VBPPseD[GtIsHM+o]MQPoI.QXt_=">e#n(J[O559O&dr3d#\3;k%cLH$/%AS=e;-pDc7q7k7gn,DNj?^!pdZmMe"X3W$IA[:;ZG\)0+g`sO\7n6hXe__$,4J.tVm!=#4,@4k'R@.Rn8bGREpW'lrND8MYOH[_O%cqr(^.;iOVh(-Y:AnZ;[jl!][D0eJ=L9Q^+Q.YX-G+Yfun)F'3?"$"bZfkmaHh[KnkXo)2*7+XS"&=e2/LNJ?CjcIb0NUJ#?0jG3%'NdCCD%-YW)Inmm=-VPpMUHVVfX"p09EThfHg'8P',u&=I^)+s-/n0<QOO^S7&phf\FaMAk@MEL"7)m`Q[QU?C;a\4Tds>*1YIM`%7h]>2"*,SbH1)_3Yd&Bu!8%)ODC>6Q?PDHT\f(XC)',loQ=_XZ-Z(P!%:iV)/SCsDh"V<qebd7uc<V5$(.`DlW\Ar8+-#^sh8e;c%bjVdA`?s??_V/1fa]Ou*:qEq5o=9&%KI1p!X0cWd=e=ra.b<W0P(WJjppr=;N-_Ke't0E/_g5'qqQ]u8q4?^F<13%qm&RFD=a]E%%\!8l][03iQd:d8]_l?sbj4a>+1;%"5]/Y4RI!g''`;;J&Vc&DE/k'hWjk#pR$As$!@#ARJjmAZ`:pf!#8g5OgfB*e7p9NQ>;ao*T%o3SOk@:d9-.2jT?LSGAEqaV)D>*H:BoO*PGq?tjF@$uU])1q=Bl8bhdSZR/RG=RS(LE'G^:k!W1*db<W#01jgZFJ#\;!uC=H/;V7%$UJ&##!Q"Fr[k+s?)@&q/pURE#"5mWd>Z:9AR2//mR5X&a\^ZCUE;0bVl2@CheV94]_,u[XtQMGZcA`1*eIY7hR![ASjD[V+pk[r%e5Lj;HAgk4Rm<87&#d]0ABi=7GbLjAmtN1HJ,3Bg$iAHK:rhk;^oDWfX.41RPr2G]HUh"B<DgR:44$GY*PE;>3#?r9@$?m^rJ/Sj%mqR,VIpD>G"8T[2(7AI/lPY?peh#JFTSktDIr:&ciU[4ZBHpjmjWBj/^@,Z5k0POld4GDSC<$iJqf6&Q,gKBC"'Or<6Y2sH7+k\j%KrUkZPeY?)?CHn$=VVhdDEVLE)i2+kqI":j^MeAB]6R32-koA,"j9p7E4TMFl49lH&ZqphWEl3n*B.P&Xe&tnTMfr1dMbNV\bc;F%0p]Ok.[qE\p%OfJ6]/=kb5V*B/V:`ZpYK:hGCsemnr,H2-OUO(nI2oX=U;aDZb^Zn2'U%0Ha-65XkXMHQGRb0<5B#):op[]P>tG(%7=-dsDYj$NC@5EmN%AKI-^7!M4bKmp0q95pmMU,KM;dOBFjH^2gtj`(%UJf;3[\/$!BG8X1[*V1_813V\nBA)ZNUTYU$J:9f:!OO%%UJf;\jEj`^c?Mm1[$gmmD1f)h)"82%e%;UkiTHgd+);jqTPZ!Sj=`?(L7-+ldO^n)^rC;%"*IMcrt#Q=jnu@mIfT%9s;A"jg41U%l%)i30!:5ie<9iPZ:?HkF%\11e'!2La_R5\C:%'4;U]n@B%a\f74mZlc'#p*qO/d9<Cq\Vb3"I95*Ip<c@.4*Y3G`8%D%34\O!,u%B27>i&t+eDb[=`=WFs?nfopd8Ngjn<j8#0J[807%pI_*Y:J^Bn$<#7G^2,sND!VRI6,\.oM,NXo[!k>-l6>VVkHCq<62F;LA:*j!%/A57^h)8G0W]ho"T2mW:2fq$p["qZ66kS[XL-T=Xq,udbkZO;mJd"4$cC?CQCj4LQqk2'/U[Mu88j/Eq@VjA6dj3D6.Aj#tQMbHc%4Lf:Dh:7jobTmpc.U<I<F(I/L\"*^06k):[QW\`GItK;V66>%)]C+ZHo/o4WfMW:`ha\_iceP5WIq/t8QVQA=ma\P`k,F&FJVR"N%a1rWcYgN=/j&PD(8/+A3K%Y5D]&iJTb_^&H)/rm(pE0mWZYEBKK[6Bbb.:!kpHN0<3AUc_=M65\mm0u]L!Y(a>f1K+;[feK9V5XZ%>g3E<+1jZL)#:Dfg+@[7bLKR#/#XaR2Y6HuYQ!d+]'iZM:Nq"a8$uF*AD6FFlrApP_><]cUhdC+^P_b59sb]%egT^?FA8$9\jBuS%8A3;ITAnGflk_"D1+Os?CH<BpaAp1ORH`o^\a9%(nmnhkD;:C$K?q#>D-)aFegi8Z+@XlMjNk<Mq_;=I8rr;$1#u6'qM_?Wl,h32%1$DT#N3?FJVB_.M^71]6auiB5\l=P0C-#/Hbr^V2d)C#o\T.RM)X=p;X5DqiU[l.#lVc@W([IAqf9\q'2EKZk`=4RuY!lsQhn(Jr%h%>\1f0+5e-5N"LJ%p41aoG:RHi7/ZC1H2*p4d+?JY>e$4G%7MJOQHd,Rs.W()b=3bl9jd5^9KE77Lg`p<(^.J42q3i,N6&9$aJ4%c@NMt)XZTt;%d[=V**8(=!PE=`g[7WfDEJ,8R+FL]138d<AaEO8Z0]@e!EqpHG;c,Co_aug@EI?e&O.c[+ii6:"..oh](-]Eca$W%lp:HB9&nYJ0OCrI='(SPiarPl%M5>p])#("C/1ss/IS7ud.5gg_355YFSCTm8k)mU^[/VG)Kn;L[@Mg"q/D>]++%rj*(N:21?+%Z%&(b0AlCdrl`ONY"Tk'2uoALaR/_E0-::3t=+#p'D31Z,sB#G-?+-%q1_t(@gjMP!R&hl?<HoQOq9=Ia@Jb%bl\laqr#AknW8ElLi%\p`<X?`\6@ADr^1HJ,Sq9OoSE@^*1go^ML!,XMqb+WJp0^=K#s%klL4:n@pY%1;V9cK)igHJV*51%;k$Sr^H$`-S3mW#7**_[9Hd%-F*5`$k%j;d4AZK*dfF'7c>P!g?cctVjedGX\WjSS/dlUeK2W1:WK4@AY!a:IsLfD4MDlZD89+H+31T<8e()(_D/u4b.;]0GMT3D%)J"UbJpf5)_91O`ApW8ke\s"t[Q]1_Xq4Zf=:YVe9VKH7Ug[f0Iel.EN)Z`lGT!KQrXL(reK6@ih$fO1H91nM^+Xe6PE?4F%"W:_%/]'=7TR*'*:H^L3RpQ9R`MB>I8pEV4>ajAbO:dY2H$]fk.ne>S(8BbBXA">SFKFA9SUOJqZijTG*un$*S=$QNp7/rsiVKlb%[maV%6a%J-.NG%HH;6Q'<&eGhBTQs)TN!m\+);X8L\u4D)rYQmo%C,a+>H,fSK/uIb/'id$^K8^";^DHCg]NJb%`OalsGK-]6,bE*n7_c%.;\!5SXu+s0F*OuW+Rlm,?b`ifRq8GCUPIFbX#H''mj=-cn"d(>ig-P?49WEJ,GmUIb9*r\@-XkhV#L9Z@&tUB(OI.=C9j1[lJW:%GIY1EGPJ$mZ2EeN>QTED]S)GH)r'gGD1;qj<^o"_4!JaLYU@1;kFH/hX"kKln6Fc$gZ+VqKW:LC[^*:1n[L4)m<riWgWf]K-,7g*%bcp]I^"MR+N@&/ql0Fb`FieN,1[M9^DAdUZ@ip_G)kD:uf)AO5M`"GS`@AO@(C-[32[/Pk.\3qB]bZgfn;5=q2-FQJ>r1h:[nkbd%NI'@V:L;U/RZ's/#Ff)d1[IlJ-+f-aoo8CP)Z*@[.)*_\n`$2(Vf`l#YIij.*pgYDDffd\B\Tf-6aPh<_?0ZPkMk=D/haf:?W/T4%n@Ft8Y:tHs?$b4t`jqp1G?^AU_O-CZU*+1j30p+mI,p9)1&!guD@9nDZVTU!lQK/RJ$[H$Vu"o7jiYBEU<fReUL1/Lgq-500iu`$%N?7Vc%C>tMHcKA#oTEHJQR5m1NP%D]P&"fdUMJ211/EC)2W$U!YFe>GH<T83ImgH]q"21:9k/<mFfFP."-"\ABs*!R;PdBe_>A5s%]7f=9XtNFKKt@ie!+!^pqqu;%`cd^SA^aZ@dYSh\;Dqh2crrf_VQ2d3_p,'*B]e@5DJ[LYLQtS8`Rg)dHt_2Tc#*f4BJs-<*;KWg%FRF1L>e1,?lTVZ>WpD:r#-&hXdoGMXe]7@lRS?j0(fnTK4><7""R_^`\h<_,%%'ajPtOVnj\W;JWk'JNbE0$oWcI?/8SK$pFB-2W%Z1JMXS$$N)PRK@lCq;*9E)7'`I5YA2<P@uSqou#(5%DLQVQ7k9HcV0=&e'-2fRpKoWn]#11%59XdtnEj@8P9Phc9:o3&6h\3:]nP%l)J7OLRh.@<Ipmd_p#!Y8fsfEEeg)X=/A$g\soK#aJQ#*N1ftu1ptf[JA'LjE&_Mh?'Rr1hrF%q?s7IPE-6KuVP!nnT5T57[@2!m%mKm>Ih<2K%3:WtfmVRY88'p<?]iV[@nQOc,mj?Pt=')doQ1eBG:H`'nm4qI\Q7*6OQXJ3W$Z+\M^-c\BSf;gP+&X5m<;jD`6hZ_m%V3@BTdWj5dlM:9mJ\lNne4#Ga2QB<FeV=imWUN&XmC=dA,6"NtASuE'd81:E\`5bO\r5V[Iceq$?*9$6GbA^;9(,jT9V`Wg:@LSt%EqMeDr=5dubZu6sm$ag$pG7#Y(<,9#GC='KPb5MP]p"pS+a/@tXtKINRI_h34dm=*YSk%0F*5/\Zoj8sV,pSif!;d3%7=?gIW-pc%omWZ<N:QsiZCY-Y-5sS,e)N1!E`,b3YABLqf5L"o"g>iQ_tkL9k3r##jO\!^Ut,guqb?[=`*I+`?eB[M<R)t<H.A/,p$dlJ\m#!i%&#Kdl)X;:/d85VsF1^_]`rQ^CRpS-b*?j^\$sHI$S6B-TdOVrZ1Q6_,RF]</:E\3:ST[Y?]LQKK<RuA'XiqG3-Iu4&;%2)tG:q_L%<^<a&UR8dDQ\=O$'f:;J8FWe9WVlL"[ej$)^%^54L)QkqR:7?B?p,QF.VdtN1"8]fhl,t7RI^'tE$P`ieaQm!I/BgU,"'tgIsX2k%413%(rRn*0B3R`JA#OKBnNbrGWol\DSGF8,dM9`RNlk'kGAfHWR`]"K87.2^]f`qUHd.lIM5L:G=GWgiG^e]@@4lU!_HkcLLrRK>%f*ceN]Nb>b([d0KNt6[T^%-lh6!qe#n+bDIPW+hScHW'D,rL)/Y).#ni@it$hg6rhEOXBWKtF4kRU_FOUZ\@u-"L#2CCG1N-rtN>%+;\(73?VPW-J"cKSi&5?FB)W';2is81*7H?QIGGs.ojmtX]]0RLO+]:=GsT:"?I9>Z/50'h[A$^M90;*'VEPf35</nLn7c-eT[)5%qZe31PFpu[TjtKE9JoaoEmm0_`PfYN8n303T\<__0(4R=[5h7kCAZq496\CelgB2bQ'gbq?kS[-O("L9gNp`lT4!I\.`Nt1Gq4AA%0\g=pPQ\m`[ch\dX\FfIZf;894c9+hHG<#FZhC8N*mZuMaC?1V*bnR4X/Vbl\CZZscZ.cS([pK*=GA9DDtN@#E8MFYG`F:<P#l7@%eQL3-&i7/VnQ'01?1&i@kLWqn5$=h!:T'UdCu!gIq@b>In',Tn]_Q"5ps%rVXdc_r]?-PUf#5RSqg;m`I;p@H3"N2Ml^@P0G)rau%Km210Y((l$cA-a%o$M&E.GKQ?qtFjiV;+[<52=rRo+uO@Gk',5M'jNtWZ#_K@)>rmmbdEqp:&#p7_S1Jl`Y%A9u_"0(pCZC-2+`>%UH8joBXIOEgX=lZBiLn*[3fR=U\?u7O)&e97]1$#dr+TgqXmF)F&*iaad^,(Bm<oif8GYRG0BfqW_>A$=_ZW?hRog+.lBB@\bQ!&%Y0i/F8U.Gq44LR'L3N-,Vl%jXf6P$5f]]BaRZ^I:3rjc"S\A''ZD-.77cg@?*B1a=^?!L2<K>aC-`IY<otfIus&FCBWN2S7XX^?`%>M/"Aq0'<8PCJ>[MHOdE9Wa#E56'g7J6aZ"pRtN6Ku2>P><.l76XFC#\CiC8:#+7P_ijY4W^d=uK;Beum,M]-TiGC(d]*DM#0BL'%'qnde9m(Xl@+JW8c.U/4Nj&>;*pbYrmT[$J:T&NPH;`KDf:.;9GJ3%DRWV1kBbb""=B#/ICH=)YCB#`FX5j$A>$8;;2cIG,%HtNJ%nm3j7NGIguF(]<iT`3O!E7dDVrj"Ba0+SKYdmNM4?ae%YohbN&XEao7Fg$.oLLOEC@f+fq-`1mt=AQ%&.s(0:CO!s^TpCD*OgEtA%0l-K)[*sHI9e":hE'G<_\R5iK^C@](f6b,Fba_N,gj%!\WsW0"<e&e&"-]99Q0)3e\f&?k+P>q,lTu,-`9PG$G.KBJrY!>Y]7N.C%nRbDR<5:0CmlBS^a/W3G]OQr'kn7,h05Br9BHW;X/euU$VFr1qopH0NdebAjS9:"CA_p?'BY8e4(OBj4bq#j@q([93H"E8Tp$VdY%H'J[clhU<oo7$MQS?_o\[K`,(qF>u=R'ETuZ;S8Q]l_=UJ1c?92[ckP8<n2q]A5hP>=IF&l4p\X5-k6Yjo@0u+4-V71^C7CCtTp=%Y\=STUK>ZSk+qg2H<kP[)e8t-blMXDAQ,3)fK@3SFuoK3#,Z/G?sbs8SbK75%\Uo\.P5[,H@"eMI,/.?)qLd3rE8(`I?^p8.1OdL%C=#KH.UHZ_%j'i5VIRMmPcrVq*Y.:/5*Gd3"ham-;82nYZA/0'?g[`U%sX>Bd%sM0an:P6LleB$WPSF:5MLsn=8`?7)lhn'^B%g&%#'eb'B#aUG^L>n,L%"k$4PI6c]7)p'P_Sb3?h[Y#)W)"Sj'BEsG=+O[>sFg=f_'-\#JTNU4_,/23JR(,?[%(7.Y;>qGQ!E:F^OgB%ZmcIRY$^pJVH.VfDPMFS\dto#0q<IdL@G=9ms"`A%u@dKKAZ@N$$Y3C21PD5Ibc6oWcJdX9L"]6-RSWpYBa/YH2,"#<Olu?e3,31%XliV.9lH\>qQ=1L<EDgc%t3&*cZ\u^If7%%2h[^qJ`$.dri4jChW&D>:oVbYl0homY$k_&OZJGFrRdfAo;\G(iI,Bc8s`WXS@FI^%]^+2"'ff@10)`KL=(,:BG#.3RhY$46Wo%d$d^HcKGte#.*qZUBG=P^`=*26%rOTc/pON#5qKO9qgO";Y^;\"&l8Ot%pj*;;%C/":%n+nocH`2n3IF,TT'mU>L8l=!YKAQ9b1!AZ[r<CJ<lSC_WG4H4$p$:m]hLMpsP^!);X3pmYa#Ecth9L@p6TBhNYPJ_%*ac[nFOfaf%j`g\"HA\n.<UiPL#JBBSrDgTbR?)d0lh=dJf'$DSmUD44@h3q<YL'J)<^"O+9i^ZY%:JK@i*F+/=rQ8Sd-t>U?9'7JH.T6H/S%e+%?>j?B1Ztb"<PL`c:+mYUk?U<A=]I?KH4,+Mn+p%@!Kr?Mk?Yjj;i0t#%c^hZ1Ll^$SFX@49lciJn+u]i[iG$G^[;Dl'fSnuORmR7%e,<:]^7kkE]^+0T0GJWq61=Ym(CWs._u\cgX-lS/eZ[7SddOesh*!ZuM;c,5f0(1b1:q^[GPu8hN%tQ_qi[C2U"A+Oj(?mQriTUP%k"s:]*;!OOC?Em"g;Fud<]X*E/h=Z_m1N>Qm=sZsj^Q'1gR>)3@Q"\.GLI=c-7s#N;S7%u3VLp'dc<iMffTO,B`^=!.[.ki<tiQ#%Y`\121\W+%Mc7qNa!r1_KfZ\%2o4n1OkCg8Y8.p$Q6sLncf:pC13`Weg#AY$e#D/]/>$5H3<!?.jOrA5aOBP.Mke="P,7]dG@R*U%QbO%m;\q[%(Qu\]him^'>Na&\jk#-WXbm"7_`U0Y[/9UbTmscUrUB!NIsrF*/3^guHa5F`I<)VJ2tQKXr9oQEQZJ5&?dF.&]=XIj%S=[=&$-,P*s'5J)SFFOJ5+_Ss3Ia,WcTRn,q)a&Un\.`qhRpC%?$\LdqfrFd1(p\'pbhg@4Bh?b^"!j9qou`iDeJF_J[b71i9/A0%5H>/NpHM`VDPuV-c>_\dS8#P)GAD(V48=V)1.#\nhU^HRjQ?0VhO(eIi^,2[[.Nq#:k%ZOmG6o[mAHNBjep;bp'F:_No8F`hq-DB%ouiC+IiaUL]ik6'*/qNlfUnq$[O*KEHN1B95!(dproJCupt,A\bJTmaWNV*'QD8iuGqs#q6XcBHD(VQSaa[`'b\c6tDEh>B\bYF[%+sq9C#1iA)`mMcT.C%=Of83jpD&("r[^WEoTipe.k@$6=>+5@&6sK-2s1VcC]UR^[$BmtmMsFT`mM_bEpX[&#]fC>KRs[AdbN%^7%m<nj)[uJ^\A%OSG@/Y=f9-%hp5'(;uh),*g4h!F9EPFZMqs9`cok!C0`]pAZ4tb.LXn0`N3M)T3QOCXOm^II[nau8Oo([3`LfhH"%"2eCCEuD,%NOGfi:#!^c8/^t6j(O02_MkVqJWEHFoFVT)lbDq/D1TA_:ufMWr>gn_H1H+TAEMpdp\i:hO1!$!OW3NY^?k'rp\V#e%@TIr_0l^g>R$V/"q;5?hk,YrglGrI>o7\R+=;ZP];h&d@6R28J3hrSWRhLL"^9l5N$dt.J(?AQK9-.Q#bS&n;%hk83r8".^i5\+5%IJ.6heGX,W'fio"(\$I:+ZSMd<Mju>Puhg&kWIP6H<tl=D7kA4qgq"P[HAVqqP:!5MoXRnMpDne6hpB"4FJ0m,YR$:UMnkd'lR\H%o7C>)^r<bEo9h7IO1i$_E_DjC9[YU&g1s"?KPD;2eJ9Vlr2%_S4]/>r3-P10mca18Z>pX"4AA%iRo\]ek/6/6fu_8VK;Ve#3k%oZ%hnAo%2d.nVs6W][_E5#>K$E+_PR66HI3*3RGil%/Y^-3lk.c?c"oR!Na"M7[&%6(F:J*_\3Le*Y?+umA"MgPR"pCSV5pQHUH1V7=%HEt#gG^I+r<+,=so];!'!`4,+QhTLrPu9)^7*j46J<'$ER@Q,h9`4T;*9[,UY/)rBr,dkS0@"FJID:\=q2&UM@t0pgg8#N>iF=pL%cMm(l@7575G4V&$K?cZW>,*_$M*:oPIs[s!l,Cj<M'APKO-Vt1)Fo<5I,\F@rkU8cq5L!EG`HFt!RL4J/FgG:Yk+DG4B_OhlBKMB%8M:JeJ1B!V],P*1T70.)jk'@4dGN\IH@VKGQ4Aa<44mg53/;isB5J.1mC?MI-)J,?"\d.`%3nt;W>@*>7)tr"40n"p!s8TsS$%=.%FM@6SgRhjLZ)^>Wqt/@d$83HXd[dmMUQND#?(s9HkEZXf^(FGb)\87\*D))Gifeee8l>+dj3:_;3B(B6ir>O&LukfR`<u%Z?N(*O%+hK*F!MkXq&&FjqM^1lR/0EpF^T[*&E&r"PekqflNaLKi7OI.[gVjN:B-1soLH=U(cZcJAI.h:N)`Raq0QXXn,1E"c3r[#aQ8c_6%l/,X`/k>(Y+?)45rgRtrs'2;[8r43S^6KUKfA=cDP/)Tg#&^u<J'-([_iCD%<n/2tS%"/"%K?f.<22!ArAm!T4ndlE'Yc\P1\msA%\u<ZF&+n*Q5<MHkV;,%?R-=<tQ.FaBPNbeMb,/)>=psNYm`83R?KHVPSueMBS*&o#a.)RW3X:#5ph'6OV-Db=W^7)WGcudd,O#[*%I*Bl-.6>oA2;NJMS)o@ngU.E_Y']WN&;=[,2V9JOgp!e&q!lKjDCqnKJ+:0h,uIoNRB>b,dOa[1+f_3E$jZ*NdZUKgdLJ)B:iMI3%C8[6`mcZhCV(.e3pfuJKElsqi=M4*3\o)DD2;6H)gZut>l<?lR*;*-hV,Urg[@4O.cJ./;4>T_1G0A.;P\b4*PVFIK)ZmL"G8Dp<%.P*qGUo$2anT5IIE-k3L3r^+*kl/Pa;?cZrN+p^21Im0"5/n2I87#S\Y:)tVrBn(fFbf9cR&(%cX35n\O*e&sOghlkNJM^P6>iL:%a6Tqd*k9Ii9R(fAqnV>f4N?U$2g8qog'*=Zm)d3*cgPpN_P]W%,J'UEM']*r.C8=2_nVnSGPQP(<qSC$-]?GikW/V=:5Z=Vh!\\U%\Y5=bcJa^rF6KQHE>Bl"q8DX9grf0M=`84k%N*O^48"D#EJjadg0L]W/Vu[\1G)g+Xj6?RVs^FCk>m62*+Yp[24.N>ZJb&\cS$(6%3W$<-:-S^J"K$AMrgM[.@+t/2K&@3C^-1*Z-c=cR`IGnY2Z2C]f1Rf-:Z&j4(-^PHcuFFQKp1uV2rL>"(NZW5O!"73SSqa3GoEP*%cq66iOsG4".D6@R3l2QC&jQDU?d-r@0pIfH8Fk_k<J@jQ5I+:'hGH@dKq%WL>3ArGOO>]V;K`:EFnlKYVTS=WWihLm)_8N&Wk(fL%D63(6W9Ss;gQ/X%TW6b8kY'SL:t9]o"a_c3"0/q9\nJ&/%]J[@l8Mdf9<)mV8HkS+;P98tjl:'O>]+t93iu0=XPP.Vf3ATA*.0k<%/MNV_g4hB:akcYkn2s&>5)"9)J!%EQ#g_oIm0F-2Qt,]9r27dEDJeHUCP#@57XL_/H1:Y/ag8s9hVY^U<Vg?WBoY_d3<"/<YKBL.%jAG6=r"&<\eot1ni5fMr5I3PYZ90M=e'VgD>$!WGlq[`25?_WuZgqq[MpM)ueQK6dkN^gfFY9u+1dei"=[tP&OI8coM8+*gSH8'P%nU_)/e,NWd_1'QL_=$gInY=(TpV/=u?JPJMj.G4ik$*mNMbfu@rmC1QJ$s8J0&Bk2^Uq`TkP&$o^[E3q4^*5Z\FJog(2mNLs7pg=%`Go%pg81<NBnBK3=Jr86)d_G"T'oqPNkJa_h>H[]Y7sEdR;d?fNT@9/op]0rHnmHsiU;iOs8;U&5Ai!6?eImUSeo@Z^;=2IB#ce_%DV"9ck+6eRD=0V-3OEUYFO9g7g",'*&)6V,/C8:I1pOSPp[dGAf7W!8h-XBWLQCU+b5+D]\BA`N&#;\n5&f"`ZK9t<Nm'UGLi=2L%Z.GX"O,S!hM^.gLCMSaoNQf'S4W'SKD]dmRX!8!J_f$dkcen2Obl/Wp_7cFC`=^ZYQrE;Xh!6[Jrq=Hj5,^.7clm)%irWcha,71F%-sCgT8m?T]A<s8Xc^Sf*.^A-qoOOEjqY+HbcO@60c4#,+R`<J%?-m?QpJ/Y,Hp:fGdfu:ST&&!@J)'.3,H!?g&D.R/:;ZeGZMn<C%5ouQ5WN]aFao([.J+:B7?[Q9bEbB[K@^>*dNHt@%>+r,fgH3a8W+sY1DXrYZo*d>6J+)?Sf04Tc(-_jB?`r(n:FI+dY\dk)ZTuM_%enMUe#qJrp1F!D1'RI$?6KgNgn95j9*`9>OC2k"rILHZe,)LE#Ci.Naq[09FB>IJ_h$WQE%kqL_Ml0>tQ[\k(3nf%g(&_@BjQsO/%-(V*j_eQ"C*.%C,_q%pi+00ibCXcBRWc;W(H^/5*gM9_(D`459>9;bPFSt"I7/TbE/-gte0qF_>-Y&TRSOR5TVfI-T]cc#hcfFcc%BT]e&fm=6_d:Y9)(U/>,6dECK/,?LOf';TY`7.c]gN@L:\Rb?;2lEt?Z,a3L7+&8&r+B$#rV=4[0<1)HTdtNW(FPJMb,c."A2T;^%(UK"DC*B!Y1<@]cNoKd'=<)auFfP3V*-UD0]@2Wh?JJk]a^o[^O17Ec81$qga34(/V(Ris'sNZU#%5*q=&HduqN7RuHa2:A&+i,*%&.G>_Z#jq_UM3^*iL!>80Bprt7)PB=Z+DledC"8=(6sQcZJ?9aiUcHiV)#^/?Z11YHVaWcAL[[J?S*:[![%&q'd]l[SLajDH5YWG%[?YL%hg]DlAb3cgCb%r<DfC'u+59D-O4!Cq:MlrT8lq5"E,;@3anic[Q-s.RFS"pMBe+$pLjoA:[aLm1m_?#ldWNgJ/@H(tPtI8/%IqL9KDXr43X]3QtVuPCM8jPYKI2nQT<66gMIG.;[O/'EWEfa^sNW,7g\Yb\mX[nI.#"&-8/<UC/s$%4>e^Z_6Ik6cC]$uP_6PRWg%L&(1*EbNGGJc7Hf*;:9Uj[LM&[nG:/,,%:bK$sE8'Tp`b*hds-Gi')>%H7sf^s\kf$0?Dbg](Jl4bd*ck5-N1^V<?=:hsMAOMd!g%qeI_oT<)DtpuckaoRAN3>5fc>57d_us,A*(E=DjR$&J,Dc<4rZpA3eHG32ZbGAH2Kn`e<Sk!/$Qs8;\@HLnn4Q4SBB]Q<^]o?ku2%?1RN\C$:Ct!bL>K)72Pt5jqHOhP7"<s7cQB\o5jM[mCTh@jbTi4RU'tbN&"UZ2]LgHgo(j!<(6=kgAul+$Y+5^0qJS>>a/$r$6Tq%i$[pA&#2WrXfrhd5nI8!,G:tU`I8/Uh[[QNo;a&+6a*&,@H*&"=O?c*0QDPF!JTo':D0QE'p/6b*E!'Z^%g.ShO6UEf`NAjUP-@5%?=bek8NREV8<"k>^$nnI%`0bke^&;=hmf4I?5-T$]G7on4H=hm`q+7I[2F6r/q=d2Gj7d7Jl2;>-H^B_TNTMPBJO<!BpaSW,Y<SP%9%nQ\jdDQ_5Drrt!/7,M(;gL]pf.r;;*Ye[-96G`IEtR1B5BR=,;1iDgeRDoj/EJqB[Dq[k*W1@IJ<no'8/ZS<[8%c>k/`/5>>*E%YtkJC1?^[u:`mtg(^6l=Dua%&a16oPFrU[r.MG<+G8>]Pk$ABZZ4M+@n8KUT#\GMWl"=_#A8999*'P`Qie_6eC:kt@jE?3e9*8PO%!b9%qfCOn^,'*cLJSEmfmi'tXrhI^RY-f@OT'*'p^im"^'"@f^NGu%/YnI2U1l<:rc,,_->!pYKi$ULhEL_*.+me<dm6RWo$fJtC%?Bf":K$f<%m0i]7&7gj_hT7l^bDgP'mFgu:5WLZb7V^233/-n`m4e#3[<r;KN"/)bbe2X6&M3@F]Uck1MC$QA\]jg02TVRF?BSI4%pL&;WXosI[T>QKZ&s<[u%7"7^WEi)F@,#so.aeHt$sQ?q-s(i=UG0U"7-\;<J5(erlDLorS.F>:;*0=,l2Z+HrRI"_3uMl2,cO1>%$je(d!m:jDWL[uF?KS)9JmJc)LOg(H"Nm,/eVNH[W@$!uO[ZZ,i%Ti:Lk1qt!g#pd=?g&B37$[^_9Bi3.[CdXEtX/#('AMKn08%O%rf,mg:eM]<`FHJn>;EQ#HBUX';9&60f2<U;3M/h:,0e$B=>c9"@>=J<=BBWYdb*pe!G\Q!*/QGtl]BDBY!i>:W!3;IQ:0+F,%cD[%FW$]0B2T%d+$jg3Vi:&HY,!bEF6Bq,)=3#]m'\Et@&p=H!ha1eI+Wol*EH]83-i%uB?8\64<On1q6s0*Tu7HUl,\u6"-B@I)P<Y"%fqSPmDj[Mf(ZlU@)1[m7cT%J0W[EPMkA40Y>(LaRT[PUk9XX=ThZ/I1O,9eOp^$XLGK3LQeT:X#d%&$@:eqF?0D!0/J4KB@-n7uc%o7=e(i%La_DLZ&^1Vo_F==B!SbRTr33!dKVcup_?6VeR2j>[I9R0G(]12!I_3);(?W!*5lQ=kbN_@4/?A7hULo(Kl:,(q[&<!qZB%nIP\bAnf+Ucbicab2Ym\.@R9P#?`84WJ^9aJKXP>$c)W8m3i7r124ZA_]/lAC^CYF,,gec"`tuara^#;X2`sJMVc6cKM'$Qr"L#F%5f-E.ToOXI79hqH4"j.j+:oRQ_@K9N/htFR!5U#P=l-30G`r8,7@jY4OHDuNGfg:$7uSH(2.?$4\M$4`=sLWoK,d[X&?l.b'l[8l%keW@4^d8#H5nmNY@f_ZI"#!M9@`[g8^j[N3"p/f]KkUSY6&<Q&V4"M(6fpm!!h^`+(-'?S+l=&H@-gRq<$h5o#^N-?M*gQN_sYWe%^D\m*=3bOa<8bkA/7I`kG!Khg,p:jU+in%7&op%O:_*TBZ*HUp0V&4M>/^5Y).;>&;4\2,%QM]5`"<:mGe>7HB`Q!6N2`X!aD&M"%h[jec_h7V/1_$Fa&)0j8HnbWO^g7>(%-fSrpEXJV`02`[Ni@^04K"GR;/Pe1OJ9oP4.p+m7DRgbqo8'B?6]2*Nni$I653g,,p:],%p9S1J"p#(pJ`%!FK'F&.*K:\)l3JfjPqWe:$nYDnB*Y8'4!+/!=caU\6QHEkrF0t9"iU:+Ws&.Z^]cLGfiJXd><'W_,ei,bF<4jM%NaMiPkf%EG04<oTL/BK%Qo3qloHOI7^uhjp(bkP-6&)8](Qo6P5S@W0ZFtrqJ:B^3NQ;i$_AIR"i:'eLdP>Tor#r(0/9*,i,`X0A%g3N,Mm30m[Q6Sq=#JeNG>jO6l#+<(>;`K/uO?]EX=d#^A8T2(gdG#s8H99UX16'Z8Z0=N%B!jeGZp\f]G(>r4.^_F`/EK?t4@C&7%ZYDVq(4MD"&u5Uo10Qd5_ol"(XL/.@1b[G6!<W,!kV6f==DaFYihSi_\L3CIocFAbGt>*G%d$.p0Nu)BN7Mkif%L-)$,LBD+UX%!%=EHEEH0V>7#R+Q0aJeKLIT^NS!3>L`9k2HsP$ll7Ph'`MKXGun[+&$[)en[P@'/6OXL2Oi*YV5qa8o[keS+?[D<"G,JUV7:C71<0%\T:ke0D=#Jfd"gXD_*e7+M1(A==aG;N/6h@7R/J5h]\X)l5HYS"]5QTf+UQn!_."1OBJV4d+#0!11GlhLuSRK`efciT[-c>\$?Vc%!")Y#5W&0c't"<t"U>FgrdY!;6oC("nT&(hTRu59Tg$8H<8s3F"F7Pq;ZR625]G'UD0&ir.1uWCQT3R9LmX0P@+Op+&1l<4L5/rg%R4-XL"bMS?9=UPR*f(OMZt0jq0a``!pt.=k%%N6<1Xm"uVY:ZnclOcW)6o)Bk-+o]3Rii:IUO(qKS\#Fp`$nO["HbZ)%2.f-9'+1%=U$cCC.*g,>/7@G#na3A+SS"77^47V/Rhb=CEI6\5\3W=RFRVCjKdJV<2iEfkp2'k+T`WJYu$*gHE=-*@[Ld9TP9>J.m_mV%gO.+%M:kSdAPe4tLHhE?@\9a<U54jWbJ_sT5'&LqK!(cNAh2ic(<9oT)l*AL(KPr$.SP:d&slIl/7]I&(_+-'>R0erZIN#A>eN;R0sK=R%:[I&O&eH"s@UPm9-3u.&Gn<%?2U3'-Zds.-Q939+/J^%\fKsEPJm(F<&L*0Nagrit4SuFCl*%7d3$rK/_k4qo@B:@jiti1_8V@CE%G(@%_F>Ct7TS^?_"q+^p!4W+H@d=i]''FiIa[tUSMnR6'1:k*/P/;b),F/%;eoE=u$#G,C9J#c<+Gi7d[L%iW=X_l[!=:?B$oUD+%PR'lk!Q.#OAGm2&ii7P<o99fk4TL(=W8,`eOHL6u3tkRB&cpt<ZR?KP#_72uKkts`#CBbdA/M/5f*\Il4-R#lZ)sR"-R)FSYYK]M%T2,Nnc6P^(AiG!%hC%J/,X?[=6pM(,ktH%k$eQ\:+Qf1#ddg(N`<;H[Jt!-/'BR(@KADM2_)^nE%-KJ-2N6*-RS,!#>*.^B"PDtJ%ZWBU9SnW/]1'Kua'0_'H/%?`42%RY$U.GNj,SFZtD/`mCB`Z++,t&^dCC+-L,8,PZ`M$\#1d<8/gG6@PbV4qW.NE=?V1V#G1CIo[%$i5Y=W_,F]n4%G8;d`kEUua$rcdGs55+=]G&>lp5"e.W",MHbrAd-^5P(%#t=g"SX+AK96VkNR`-j^L)"X"-C^eUcn!`(dtdnccq%K)JGU/J?E?2%YsVX<mKBR?hoo2\A%Zj[M')j]Y8dEYgZg[>;5:TI;`a8^-Lr4Ng"C!^W__XP.aI(3FjuS7MDbGe*%<"Us4qO?%;0%DY,?\L()n(&<U5]:n#=S.&UbMBBM5fDAZBB9&`Sj:Er_p!17_0aS#j`!q<.'aA?S2XVFZ`E2P_=T5$a!8=H9@K7,?TV<FuL=:R`]%e,i*?6n!sR"9<lG:e;S+&Ws_?)_s0_MW.SN>:;k"<,*qGT=GsMYtSm_dCh,laR6VJrTTI6'O;k]'I5KaWa\C*iW-p^/@8FtnqmGZ%Hb?"X*oM&>']j-=,,c_/>;aJBBj(TVW>L,`aG>OX66]b!0EU2FqX+/B%q,_WN<9Jh2J9?466WBB"EaiXX#?/>!L<"r=[mruO,TXk%MP,nGE14Y,!!&g"&H+03/BH2;/6?+4:_!jPZWW.9%tIKUFmPPXDZLR<E0(@c3B@EL55PGG(^(kX3:h8l'@L9)>cZRPVkJa*#rJ>2%.K#P"5\T15T+1NN#b3#Z+(f2TP(>DlDA<L!0``NgA`*ssb!H+c,)%[h4BZ(TEhbb1RdiaB0D=%jJj..(#7?"KilK#>&7k'(k\u!L%5BSMD3#-G3NcGt][!7_=Z#`8OjgGO?-_[us)(0Tf`d!O7+:i.Gs,D_n1e7RO,!=F1>lZ1pK\<a?O>aV36T0^,V`EL)d:JffauL\o%fDoK^336'ecq&r!k;ZYs`0Fgt$N#.sdgT_W;GZtI*3=G,L-O_77O633;nI[D(M'67'i8S9]u-jV&E@ir5)4G\eo8Ns@*[_)"dTf'%jL;PhaW>7`dNF_%i@Aof:07Kg1n-r,1]o!N^4StH0n!,]'<"WCQOgG:?b02pb,]D=7@o/2PmDg:8jJ,rk,B+_TgJhi#I[s1.H1KZ%i?JKB>op=&*=%1i17iY$RUU6o[6Ymj=A%[q,QtBi]e*dX\_'t$h1JmnCGl`k%[unhoN05g)aJq\\\U3Gn;ncWd5N+_G;#0=2\rYa%.2LC+1EQ++Bg**qfao,6I<N>`_6H-^2&4/EU2]VR@9sq`L/\9bZjJ'\#3*^QkXZ[HeGaAb.b&GdVC$k]EJHGU70V+I:"jTi6>bdG%lZaE9<U,mu*B+]J#$2)PnM#(2:TUdRK1B42*T.o)LKG*)W;nh1,0X<:)PaXV0C/hsBMmoXb(EBL/Dn?Y"Vu/R-lqTNOUdKBF<=E,%B+-(!C,+"&oGmPHb=1ojWlt.i_p>/ee:onj7%JsL8=dOajBAY&9WBckK0&U-Kp?-50KdjoMDHje3nRo@9+*.7JMUpi:juo*jV0!l%W@).9Xu2&Frak5sOG`@`Z$IIGoWmN"%g$$>XomHUio,nC/Bm,I.eKhGM9.LTXhrRY`Ot+M-+^/u8fTc:0bg4-SC8n;)[;ZT+rn^A%A8iWCohm]6F/_FlB3PrLBkCRJ5@]Xp!`bAG!_M_oXVjE0oZ<=Qh.D5P4Li6/`=T+-'"n*6@Q#>LA'cu/:^%'a5#+O,6kU5l#[G_D%6>7#Vh)e_n"qj=k,[du?W!h6a)DVrD,_<R0U37%Ol\3R2:ouu*O*JDd(aLI?N)PeI#7SH%76q`P+:eYA_UcS+H=&Q[AkPd]p^PUd%ja7OoRR[ctM1(;]H"=IE0cGD[G&S'"*@*mm9_Fc-fGUWoctpX_=qM+46A4Ge7a>S[9Y=K<Y;?TEZEHNQ+S8%AIt1XuV*2\/mZNfG%:"nV/Lr.O%!AF_"";E%;J:QY_@LN@7!I/m+O`S"<KQScUlH7J&J?"SEOEKWb_+^6"O7=@0i<KJl\8^@oO!.!/IA.FWP;Zum9a7jb%f4$(#2aefi=D1-M,2CdgCU5W01*&:g'o-E(Ic8=]Pdpl4QkC!Mi)q0j$`>4QfYE&bBducl!.59JjdH;r#0rTmg'u[iD8LV<4DS(%%@jQQ$OQj6RV`;6h/IPs<F?g,[>TA,bZ1k8%$iiR=$.rEQr!\]9@MscZF8B18ip08eN]*Q!co*G:#_b56R=H^2Kdo^eQB#BWVuo(Y%Q`/fPl?O@hKJ*oh5f,c.+UfE3OA)j?_%L$'/k#LX_HpTSae7n6GBR,BIWi-Q'PrP\#n@G$?6j&jgAC"E3=%%S7ifPkn^Y#A\J.rH%#AKL8]*gWi+1S/qOGt+<(_m>QiH^.](5HTjV8Ab?h^LGe&QU*#2HA'hG#[7cF?r=3S-]RW.60p1.'dEh:oU$CGBkf@'HBaqXesn"%9KGaaXaFt4VnaNF!Y3UNZ3Wg%8mAeJWaJ)i'"7rhgg1R..#prcF=^li_Z4b$ii!Wf'Bf;!Lr>\Q'176X_H%oZ*!a2Fej(i\V*t[Q%_cSofW?h+hreO+bd:b6="`Mc6P"[p@Ih<Ho*9\=;8PVL/i`LsoALSdqbGQ+9ViD_b*LAP1a]:-I^aY7j[3c(kdfTK*U,p@hZ1oWG%p#RLd'SmUg!u+k(L((ftn\km3ee<?jPJh?)%&j[lW?kIGA164r!jMm`@[c7@9hFJ=rR\J*Q8if\RM>6(l])q0<>_6;>k$K-/.L?A%b\ghDM'ng(:-URLJ_l"*,hX.157]%JP_^3d_)0'GRUSJYS?sL&fl/S-<?=28/#MKaFVVqu?sOUnRKcO:)IdtAgc'1A/>M2."fdjl%Kk6<^(^68CTIN0f__?o:iX!bC:4TSqW!Y>X+9s,5$mIUW$f*Ylf2tQ=.T[*H^*dFEe3)ee706n9Nke&l:qqhP0RG/.9NPXkbo%`]%1CbXAT+5>ENd"BY(Ikb-lnD6SS40NNLR?,J>Z(d"+tl`G+%J/#[E?PmXhtg@-6eS32A.*S9,c2mTWQ*'\2Z+Q,CKuS$Ws[_].lXu%@&!"EW>Asn=/<>].=7HRJ4L;-1ElsK'!XQ7$=V_8X9qg<Va*RJ.#D&!9GrMVU-PVVP4]=t%ad*7)"lZ_:kDmZOYhu,`g9(ACeakg%0pJV5!/o4b/A0<]>*qA0e'pr05gG'MF<%Oj"V'7C^_3Q2>H-Lo[i;OQZ=QF;2IUeoY`_Q&$HL.a&!BaWbGsgOI&BfB1g8)O/-;&%%D^g8-XPdF5iXgp?ZuB>"_?X)]did37%8-R,0f35M5Db3HA.3ZJW^`?:C@@8H:OC+i/YG/hBl>%/MRE<f:%=?4;On=eqeMs9qhjDR%RFF513q#S+(rA#)'K_@H&kThS,%9QEB&Uh,\=$5C']k3<;>e'lN$m#h."WKPNgJf<H>JYKMG4XFp72j19b]a!+m1Id/-H#\OPAi>%X=<g&Be&6CQ_Ktu.DjaC*(l84b-Z/HA*FR-lGB-:'hhCDO#_>h$+3T2O@e%EFhe=U;aYO6p]-ECe8dX/R#$'>R?2`GZ+lD4m2/mr%&^<s([T6BC)4Nh]M^VLcSMgPheVbm.18@5sZG*uNN*-G+T'9Jc%^$U(`,8/8s+$pJV8>cVj6Hlg!VTJkS-jju#gJW%,#[MQ';a&-%WFdk``(oYMNj:<^?(@W+fLm8G?:paKgukf4)6:_E2Q>;g4dgEW@*I\]\X4!5!284_`J#-\)50;LakDM.]gS.nX>QD]&d[l!(pCnH%^B1dI75Yq*:;8'OWF1\TqpL^^r@.s)+;?)]KT7e&3<qpM@j%\<j5eA3?dKrMaAX[paW'p56k]oC#dd^0jL:0GXj<]a<>b+[_JdVb%QnFCnX2_4q=n]B5.qFG3E=PK51EMiZ0LAg@f\3Zb@E'JR<[pBZ7cSD>kReeE9cr`U,[NP<EjnkUnfPrXP[KZQVPEK[8hcYleY1sE%Z%Q-Qm(-#R-#>8H"\uUeYZ#jdCW@%t-X[aX.2A^"IAIoV'%)^cMhrn/Ph!/[ZR8dKCDBn2VmtOq\tVG[I!F^XP*dG`M"htKW/)rJ%\SGTn:u5$[Dgi:1R4=Bk,h+P(Rc7P)q1>W(1$0Rm,c6V=7Pgr>.+^IeJQ;%?hsMX?jC:Ml-MSW)?HNHoif4uM43h&@0)CL137L-1%ijDm8.QKE\+P(ad.#n`J88#Y8L7Dh0n(S.]iF%:ejTuMc[2qfk-V&amCrIr6AtXehM.i$j@Tp!-0WE4"$/deKfThQ'#?`=36Pt'=%j<@G5&X,7Nh"/0f9-K#\gs*j?MDn`TMQAOI-2+->S1*9eA;o/LcVN@`S564hX@4ZbQC).5G(XIo%NV4TB#?dX/%TW?[\&X_;e-?r%Yi7Ru`FO-B7LORg7RVl;EP!PUSX`@371X4[<rC&`ecK569-^)^O9=f&CB9Naiis>M*]%q<Hl-@`K1r6@k;:148HW*F_GD/K-@ohD%JAjpkU3?(@/V.&N-KhrI/(1pAk^;Nn]gKs@'k'QJ97[%.07e^fT!Qsggg@4H/BM^!0p_qgV_>lZ#Y>9k0Lnj>%:^7Cp'Bu@4dkk8%XT_kom"?(*boA6UlKLiA*.&_<''C7pQ,J-s^Z0]i[R56E$Zr=9L'Di?E>hD?/'2YbLKWTK*I+87ng#Oq28W"I@Yn3.SA\;oQq5Yd%/>3Vb[\O#Gm%m#cVk,9;\d((T3+edc%r'c;'rrm0!"*HlYYYDiQ&D?3J,i@`&A8@k#p?Ic15h[Oca#qD>cCU<YSQDr+otMUpbRK?%8YVZs"89gbI3q^1KW+%ML_Xc*b4OH<jGo8EZ;c<',_7J&fb6h,KNSar:KXU1JeX>:2?]U6)-;L1*nu&VS&H6<g_Z]RT8(@tBXU'm%)ZhJI@;'l1^)#hMZ&!Pr85-RITI/S!S:4.LUGUKZ\(8*C1$L]R!@ihSh$g^9L"oW?dEX;$BpTVG-B;XW=;l3^X#4kVn,g<oaqS=V%T(^$tJ^3:d=5=&icU?KK8+.7&REni*q>Hth+G^.>V_4>B*N!=i*DEHRqX9Y%dN[7P.5=an-a>)O-NGWma8/:\Pp'^CJF]Go*,%tp%3EcTZB3->3@>hN]qBeIJlJcnU]I1,Q(Rkpp3h/j:j\b3ZOqS`1*6!LnSlb:9Jl7mQ$8/hZWcRD](BMJ$.\>6[Vq6dY(Z&(C(#uDO%\_nYEd9OV!MMn9M;,Vr<4[4*6Y7V/;3-@k?;5?3cY56Dg28M^ZmCX*;,XnhA0G,5-02ap2$\9r6#HS:(Xun-[Uj09i-P.aS@M-dO%,c6r"MFYo)/40hK0G3MK*p%8gPD[FT":ZW5^8@![89'b<'?OX_H;=I)^pHTa`>Dc+hB_\Ll*j:e=Q[W+AA6=<;)MLpcA0BG9+G^Z%SX_smT%J!B'UNh>U?B+bdeJcF%t>V^m]CgK;a*4c2::hpU2$tYRe?cJVLIlt@_#-5,S;hOK5$YleeC\WShndJ\VH_2kseXpG$NWu%)IDr?\sNemocRf[ShC^n&-6c?HB9[erAoT<cO\S?RlFHK-T9IQqi<KX$#/T=b5G"5@m?HK1o+DJ[MI?R_RP7(.Dq*WWCgDebZ^[F%9WL/'R'm-+E.4,(A,<[%,nf^<@qEjk.&Hp"EshRe.Mge,<f?4kPm@0J(4?6=Y!4Bq@keM2'u2O36PED$.C*BPHFm?ST.Wh6n3X*6%f_4Yl`I*=iF\8'nS!o5p1ZoI%SJL5I,c6T':*H_p^dn)d+&pA_8`as3&bo*DRRG*8):QV6o3[HF5t=bsZp(FUGG,ljQSL]_2&4/5%32ehKEYGFl8pHBEN+VBl;p6sKS6&_D'_=_V-*tn\d`Dj.!O"c\S3<'Nd9@P)F3KQnO_8K0"O,2>ID_[4.d$#FgIKhn#VBY6,gD%q%X!eSMlfW"F\pdR-n2M7M)&4HlNJ\LXV^RVrOO[c?oU#/QKbY?j*!M,)DupJ\c4)+l3T1N0&F1lhjui,qN%kkk&.rtX1Y!`^ZS)I$%k6;N>2)_'Ye"/OMk`BjjLUQC.";]$j:ETks-A<*]0KqE5?FK*g5g^6/J_4=V,;N^b!\G$_9b&@:DM1D=2cN`7Cl+Q<-P1S=-Vc,>%F)qD@j)\"(i!#Jm(!72G==gR^5R')[0hWE#,ZG`fS;Z0H8tdCf'(Kf?0ifuZR8&\6kIu;HPJE+lbe_fJNL4CSDp(sY4*mi'3moU?%0M*Hq(()mP1DL3ahZ7FGd4M$Z>%&slp<lGkdoBN/9EplXj#PZjpkUl?->jP"j2a4Udh9T-FqW5iV]q5g.hU-^J4L=EPlMfSLD\cE%7&ereaJ-]U42j%,UBo2FUHug)`>!11SW@<!,Lu3N6LI8fFtY<N4:L6U'3PTnN)`(k8C@PZ8#^s608qfq'"<!m?j1)<f`&)XR35<f%SL2Rb["NIB;`%E4'"YjeSM[7r*%AON<CS1l^b?Em?DIbIZb9gDeRT7bG:]U?0&CiELRFZ7e"2qU$ocG%2)7<R[(A:]9l]FL8`C68%6;/]3[^ikB&Q7!c6Z2G.*dN5<G2N$l6+@q'%%At=DKGHp#ib,C1Qu&0']4j]8nD$`:_a_bAr1@iOIPn'@&OhDPX6U[#t0/Pj=ojf%5kY[4SPUb`s,O60e0ir5(BS)p8(Ee1SOg,"1^qbZ;p'3O<L*.5$="oCIcb],%<EC/F6JlE6/cYd-uV,"(#d1U849*_p*J0(7[R)A%2CrogRm9Y,P_5+r82]Mq`hD<KClac:ZpBV]XmbALi&4!?6u/A2`oS<_ga4]bDSsU1kHZ5sJ-i@.#7J/CDgjXAN)3=/D#rM<X0(M(%hM)m!A`DJ6QTT\4/.n)]hDa^e,f<d1Bj&;8ED#=rD`>.A)oMlh3LH6Qbb.j#]*`Mpk'.M4J6P8F:P$5KK8saTa4_18bsBR2)N4dR%!_SjO3<'nLf<>?.nX:"J>)4F8+`=[.1%-n*EMMXe4g>e^.X&%hjcnVsDc=I<bU^P.?b;A4Ig(C@#:9^NWef:h,/R;r3K[ZE=GJS?%_W>-ZG`R1sCIb#1%Y*I'n:T(o<u+`M#Zen\a^\"DXK)"PqnR"%@][cY_33:p^-*BicRdpX0o];0Y!-?s,;Hq0=^gZP&=BYTG/b(b%<#--Zf#,_ZKV`KSLdODg2Da`6_#*.R'sfPp-IJaHh!@Isf%Be50>pu-jL`):@BEWR78+rKUsO\KM6'./94@Oi>!9OTbC$bb7jEDl%(Y',\P/h&^9B<C'b[kdQPgnfRD.dt*QPc(r>S7]XY4rWsc9i(n<7APgaGRBG3iastZ7ka-\aIYWL]eh5-(3\u3;eB*K93X5QjZ>@%_k'2f"CeMsEA4usMeYjqOr_ej/po`qetheD43_25je2uM+(RE%fa@.hj*U!IO;8Ln.0sr31SK+)VR2U2f.9F-1]^p]+tp!NJVE<H%NeK*=8>;:Q<D=+b:d'B_IYGMMq612^Tm?dhCPOnj\\'C4&_Bd1Mid7LI^A-WX[-X><6ho)o#:EKh*OC56p6OJ]erju;tQ;-!=CNE%+ctG&TUZ2C0odJj]FS8)[Nbfp%o<fU_m?lZ#Vk@.kF7"cLH8e#Xob??*Bt6\+V#L<'R$$#Q8#/n%-q-g.9]@ep1RQemf^LrpsL\!%/>9an="asD`8pL*#=LO9R4ec=nL59<\JhD/m=nAhaMW+9W4Eti_2,i,i*&NJk?Kcn\,WMhD@5@hYY[h+";,*PC"*SXjW==LC`+Ao%WP#kJH^JKg9XEY2d6;g"V?'8Ogh#u2C&(IZGe>n>8S7+OWP)2hCJT(hMe2C&0t0=jbi#2k=@qM<_#kH$d7c@k&4nDV9kjkSiggn"%GVDH92/bb'i%8Q/3W<(L8dAk,Uh9+`m\IK3R_e$;BaUdV4JjiI,8)g-dd4Sc$pbS@f:g`r,Xr\LjQkC)c4p*.c>5?g]O*aB1ogm\%^P-8gT*q*Q`O'5Gof/D*D9Zfr[SNcbl*f0E8qSX-<fuq7>0RE7eg%.s@GZZ:XY:h@/Z;^#Ynu8]MD=[!W`Bn?K"/a`C))R23MfnV%,(lq";'`iM>%%bon#08"dAiJNZtb:4&YYt'iC2@I6++RIVN,DFq,O\p>%)k[=AZ-(P[@7h-n-JV_+\;N[*h?DIhu'7S;&F@Pi<Jr%[;'7bX'/)RB?"27cDhUbj'GQan-\[';6;MY.<8B<M22mX9WM3VaT:!c'CMNtTNYb_I7L]^Zkq%cXY@pF.B$:D/M%$Lb`bj]*YSe@%?ib,S%,Z##5"LS#6A4eL2K<+*k+m5sTj1rSXQpGuLLiI_"`I7$0rIE:J="_'LOgVg5!)WaFIR%q%M$gnWaGY71c[@ZQ*miM1oeHp%S6;jf9Q,jjopT;Eot[@6I1MR*Z=;\q-RtE(qpq%9"bRZZSr$AQ6_`XY<W]PgIuE!"?o!KReR@&,0/4cd`dtQdBaGUPC2?+<%L1/$%$($73d+;cK9`i`9IuB/4Gp6.]K\:L0F'XJ7[si.FMTo'r!opb_&E27^c,o!JheZmbH*$In0SS`E+'"-6VLo`;-rX^P4Xe6N7PkWB%i@d3?R%K$uKW0T9p"0F:n'.V(Lh30Ea\mjeo<V6pZ-TmN9WRKa+Kbp,XjjCNp_[l?;D?+.RF#^2$ZT]qp#]-qg5_RJP7DLCX2S::%lg\)@isWj"!oJFX"u12h+I>^%A4m^VMW'tYU;SmUQ_GJDlmNI'?H*>57>VqaMCpW[U>s\4@Wa4'jgFRu7p:['V/SnEEA+ddX<JiC%V5%Np=Xl6[C<tA.\ZC.sZ">ql<+:-\daLkL.nEGjH<!\f$mheqAnWdX9*B5]DD"t:7+,DTPAjkj?BJ>XYYbmc5YS&1K2Ff<f'_ca%[O>dAHD$J'<Gj:0ds+bN2jLTmYrO9>pdnl"=Kit_%&5R`BIqj;UWWdkI%?[[VVC+k<5e,<s!g$o3c9UpT82D1m8+>KX6Tj[G7#YZ%TQI;0CAJ]#af,=taf,?jb&;n"*fe#\&Y9W[j?$_K$c^;eBfJ@=(lm%B`0>&`VaNL'[CiF(C!/>G27]\qJljTo`7L?I;J`[lE(Z))%3,o-7@mEl=,p5c%`(`*aNgqnZ@$kXN;L+e'`OVu0XqrqU`'hHUbFkOP(,8)tX@&?e#o'Y^`1b6qLmVo<(k-G'l"U]Bs%Eh+_rl&;%I$7+([tqlM9kd^,U-6ujP[ZtJQHJl'`akgj0tl5"1CY):_`*k1Wn;#nX<TI#7:YbS@pjL79=a/k<adheAq/47*9R7U1nd>L=G5:c%,%BDl<HOZN(t!'39[,;=bB\:tZjYBRA1!5%aF"4kQ8G[7B+laU/SA<eF%d:,*4r<>3GUtCnJ/!J&f#fL<t`uRE-b5'FuEUB2ES2$%;AbNi*_+)(`E\NkXB8jbm0LaV3-&XZ-,r8b[Mtf[q)X/l[]-/a39*iE)-p_(!`P\0*4ERQOXJe)`2j$s9-E[e7tal%;is>`YSko]%E3(K[Ubj3+fk`Fnla8`V'f,_G'bs5?>]^i:bUO#bWo<OQ#TQ0eR%[!l:6D4$hdJUGkA5b"_cu^FVgu1I;ih5.->%n*#8%>CCncb-%Uq-X$=&ANs5j<'1B;44D3Y_-jbT&c:6ODk6\27Ueoi(@Q"?:SO6C+/g>(ii)"E>$[=bRTU'[/Y]oJPZF9W.VE@R1#K""TUEjZsee%$]<efoGE7iR&EoV2FM4g3bFa)WN_`ImkBB^q5lQPj"IfY65e6hVNF&OfEXA!*]k8XpPUN^fhNu9_BN$6[@"D!6VXhE7E*j5806<&%2era4@jk9QF<$kF9P@@NC!mFq^pG@-UT.&Q&gM03Afq74&;iNH?eNn@'6Dn`kA9/EKRC,#ZDAf*F25GsV3ebiO;'+T-??856;6**%dmQiFg7E$kCNUq^ffdH"Pd1pY]7<=Sf#4&T6:P"P8<Jm"7050F),+7HD+12Vma-Vg&G$0*RC%a1CPUVEDpP5u,'@/u@_Rl#YJS4r%dJ<4-kR,PJ!,d9jKe[pqqGN$(hjUfM@AS5K!7Md4?UXp#8PHJB/@KJ2X4*3I@J3Un$tZXMc9$4NAht8u=k/a>]hic$MeNBbV>@"P%_f+;9,Q`:'+sOR^l+*dm3'P6[n^ini'M!$p`F/eh>ZjVk7+4fmDs39U*'iZ^Z6FjeJK%:(=KEp8mlrlIXm#k0b'Bm_FPPAF*+"1t%B=YJM>$d3WIO';P*'Z1HnI<rn7If?!,^0t)HqqNb1'\rn*V4nPXKg/^p5%f)/n@q:=_"5Fpn`8>OH5A,S.=`14WL/@Y)aZoa*C3d%9bK/kc5TFsk6r%$l7hbF]U7q5XN8G'bgq]Zd6ecj/Z+Me3RC.d7%1P/@a^*jdBU^2ggmUW;W`^CD/I487?di+=rVOqs#<gb6>^S`%:!fWC2Wi$KVX92l#GpTeCEl!26??U.)6\e'2Hn%&)^V@5M`Gc[(D>&r.Us\ert7DU5hIYUh3iTI6pqNEU";s4nJ#PO["plP(=Ui(%HIKfhNlWI2at]e>d^QiE;RoPu<=65RSi&Fg_CMFAN=s]%b3k?@XCuFW2-=@``0@Nh*mO5NglWOV@]<4b8`>hCiI!&KNj^fK`!U5l%;mo0NXF;WVSm:?4CKaBa@D7]lYT;?(`mX>``%ST/3k]]XeI"HH^O0hRJjCs86&T0?W]A>3Bi0_+WYf)4OJmPNKitU9HIr7JC,E7N%f!Xb&'G3V21S#[dKipTXITcdB5V8B11#F.?Hi$EEbcaC[Llf8b&]qE:V-f&Q7/Aj/6?+`F'ktIR,RZ?5`bI89hC0ik1C#k7a'(U'%Pj,WUWAll^p@4V'bL5CS%7]-AL2Cf9^eNt`KXW-747IZ$.akf=R$n.e#&Z-Weqh84Hu%3!Aj0oPA^=m^.H/5*RYp-H[sgk>*Ep3S%Hp=Ds@R>)))Bp`#Qj$4=\bl@7W$sWGLC<2I97oJ<itn*9cWF7J@&<u]N8MI->pBsbJ]OP*XsW;J+3"!eZe7LA<.]V<Z6k,Vitn*H%QcPmS@tsnB;dG(l(k:`Sp*k2tquUBJO,37XqM)_0bJ>n3d.`&_L7'T(0(!)eO6aS^&&\1I'H>d8j%%>30bNG9K_%9nV,JI`cXHa-%Z(]g7$M5'DbkM?N(r(\XQR@^o9*AcB3&,kucqRV/,flN8->4H@Bk,/.?s=05I=[2ACG=oJ=AtGTT-DO32Q?"@iqq:L_52)Sg&+<e%hi?"OI5)%_mlQon:j.Ij@0O@uC+t%m_2.P)io[N)+A<u`VFHrYUdIDXP\9Z7@f-9^N8MI-nP`.R//Z-j82nSFHDSS:/nK@SN5%Kh%6BX.\g];2AJ]=4JD]iC7c,1.7Q1(dYo+SMQGi)G%$h5l)m5iJ/C+)!>_o82R\j37sm#E2D*6UTu@]qcK1iCHGJ9k\975(s^Gmh;<%&On?e#U@`;S7Go`"X<O<[Xhn:G8OZp`LT9!gA%8PBdqVG$kGmj#fu_+CFP67o4R\-dDPErYS&.OMUAu1lJ_%FoV0"^Jpqh`.8D;6%TPKS)`-!XE0S@meSgBiE/GFNLMs<`V0s,g5JFP+s840i#>YAd)L"D66'N.I>->1]U3'`KY.8p<h$\\?oZ4-"D=jfVs85j9S"7rT=%h:q!(U`Ll+8/DZtGPj(]c4LRrr@Ai#E+\gA&mitTSC"S%c.n`AVZL6a[2iBRj;":3o8r3K[eoh&'AoQ,KIZPYa:Oo*8-S0#EK,"q%==U<e+c8/)&ACTLYE,'C"WT:1.`TO`<6fUGG[Wamc>$WpIW)9HVgJO:;,fM.EF/KEU7upq1&<;l@EJf1'7sI*4c((:a+8QtjO[3u%5`(NT"Xp$&jW#\jOm?`f>K]?5L;J1TId"IP>Y>gN9<ZVE4H)ZkEESZBH/Ut8ZImW=+XRgmgZdf`9h*M#Sae$_[kN]C0bl#F6j3cK%a2()9+-=a2]15d2gPDOY^5`mdAP?0J/]H\9Ws0c^PZE`A5jG(pLn?ua'L[+1?hAn&T;J#)K28MdK$$X"%[J98%p4b9e=80g[POp:%(l7sP(K8?G=4^=i;t5#3^@WK<E;1UuI!=D)/;.`/l4cX6%?CNVF#OSTTG",>G^U&Kn\scA.3$!8-o?[-O.Vn#AUJs]Q7J)i9oc<0%+u]"]9";@,&IB+8L>^M2n80^&OJ#QmAo\C@_aS+<%erq*8o+i%$Xi0HVpLheFSD4"&]\<q!:R$i=nr-Y-u=&)('5rk43$G]I2]71%W=U9;E1dcR`>N@u>u-E[kpJ*V"0`4KF8Rm"qM1J%&HQ7o-Vb+&XZT`S^I,E2<U;Sd+leR.U":I=P>^EfnsWq=%Wnq6)0W)+WnWqR%au\Seae^O$X&qnTYS>0P5=['Yg*18M,51>10.GTnL.p)F[)(<50LEA\c"\Dk(%g1AJ6k&7q)Zm6*I4VfHFh'3a6?*f"fQK7CDUQL%+T!-hSZ$1^bm)lMmnN&`j]gV^EjZ,g(hTirJ3CDZp`*M$'@9aQ%U$ZXV".KN_=n0t`=nO22WmRhous1>Xe!hXbBP_nGFQJS?o^K_%DDQ[">O3AVNCn#aEuIE/#l,$W;pO.>a+-/X7)g'WTKkSUq2n%h7IZSC0Sq*>_(c):g";sTmgLW_7<r](dlY%f\P\r,CD#ZDVh<?@%CB[,((6dDQ+m;dq]KhWoHtEc.Jh<aMlu@M)8$0AL7CTU#DYdGN@Y7a&]AgSV!c;3FZC-Gj.RN#J?*/ne82nHqL8^01WMmc9L4`T!%$h!40L]nm//]H:-#P?Z8AP@Sr/]BGIo,KsUSJMKG+D"G<c4CB'/A%R?`IP:l9c8>S+;=*I!d_'T@[;nZTOG[<VOU\^#%NIh/7\OW%CFP:C@$+)AX%3mm(ikR?:dGBl'N3YM<4Xd..sC&[?P[EL6rpBj1LL3)O/0Md&OV,S*CLl^:^*O\6nb9=Lh5pL]/$TJ%($H9Z[`rR%Vc!9&$WJ".UGLGqS?,!Xcp':Im8&?&%+da6d?)g\!RXRK*?2+rJP][U"JiH0&FXj;WrUmBYo_XfKU3ORTbUWoZh7>.Uk&O8_bc1H%,_0%5#Y#).U6Cn6YS+?8=h(aH)$(/=./*hAN:J+W9#PAuNe(:4Z^'b2(.Vmo2PsQ$Nh+-3`X5&C9mL%MYsft]5QhI0+oT;Xh'$#0%RFNb[at?GJf7*O)DdFUJd6$7,jY?Hk_Y_#&+^G*[7@n;j5gC=,P8Vb:+,[%,fX^g:O4TMQ.1chH`s7!4[1X0m*p%eJ01n>Vi#J@S%M0\Vj\2ba*L^PZc4SJCo!LebHX?\A[Q)=Xr(qLeY^/N%L)i'Lu@'FoEpS+Ug`j+Y<)%`/AW_db/C.d$%N)<'&o!W=m_T!fY1hgG6%hFj7E#*3I`;5cNH4pVOL3m-5EOUa.U&5*fFUbRc^Yd7he;HQa"C-%A<a81P>QNi>":jfgAiE/7q+?jj_H"k<48HPO_;)Y1G8!_m9%@As?A3XD,"U!tOm%P,"bXJ3kBQ8l/!/'?NWD$=b2Z_!t3YmuVd7rMfB`7EmlnkssCnH3,4U77J<D@`$*-QsaBPiic0M:TSRRH$Qu%L^ZPp!`!)=AJ2<-R6't1:;7GJ$'[0t02sHd`@"mK<'T^e]`;WdLp!a]MSh`K($d@T1e5(hOPM1r<]qoT_hq'/#pP!>)hF1#G\8-5%BL=C=SJEMo`Tm)WG9GHsrT:&sHi]'`:3bf>/8R!pVRm)U5)@c?q3_?U/JM&E4siLjR1SMc*EUD!oJ/WH,g^]m<h9LWTNF_DgL8,`%&Dogo";YK3ZPpp1Y*d'5aR!7rLc?F_?4,<iIH<`di\Nd<6uSD/"#$OpYp#2T]Jrg@I+pER`DB"\>9MA1pC\[`/LIO+OBTWiC7@(m%IILdI,,VuR&!r%3MNX>3Ub-A`59c>tQ!<n`+.m&6:,N)(/+YQp,C!@T-Nn0X9Sll_,lJ;sQ:dEqcfuahi=rRDQISKOObsT[Ucr8$%ke+7V#MMptCZm@)5"8<r&$`kKePLJm)#_iKX?U0['Y--HH,(4fF2='=a/PD]1P>KqMHI1`Lgs>!_'kDA.5ndI\LI,e<Zi]A$7'4.%"k&,qSI-BU!i9aZ@fPD77*PX%JODb-n6(Ap[I',rI&]hD/sq;b#g%":2ITCCnANe?c&cmloLN35<#M<[<_OP-,?%Wo&Fm^X"EB`E%0EFtj`9ijF*E@4r#D5Ns.S^rbDBVBLWUc\d1A%AAQ^u>'ErZlma'")9-[)d\aM=/`Q1LCi&`*RYZqg711+[i`,q8^O83F?j)%dp2%04HRHARZ/(e!5a8\fCmX#]D6@]e,8c&ep;HcZ;T&U3B]P7rh6#2E*l30-iQ4/urJO8JqgALQNdP?652p/QZ"_BV],M].Ot@XX_8f%!Vdj6`f=%.l0qG1dLjhPN1AK^N]bbb&5/0A4]DJB6?HA$L,oAk<SQc:J4fZ+$>\Rr6K5UTO<7UtS?e;nW,*BIo]EY<e!SSs6lAl(%$min`*qE.[:uOnN#%:+rSE`@)9o7>d?W#3M2J%BKTZ#LA1_A0*E[7Bp;IU"N8o,ZJ`;!AjQO,0JMXc%E+O)ac/BEK"JGB=fSm"aF%6_[(S/L<#DZ)5I=^2(Va@L42(`o0G9BS2jRUrlMCHMBmsqlmm^#q[Gm+A+C\M+_]tPSbK88984N\3_Uf[4;l>OlBYNg5gmO'Y_d&%,YCGJdDC@h67B-)#6B_Re'_NV3f`nf@,N-@RGheq3=M/qF_8ZOhiaJnB<K/Rcgb2PTE)ghEJIAJ_Ikr>2AOTni$n0g:j!"&#44uI%r&h;^#GKd[$_73]TBgJo]kP<a"8/J:G4+!fdY&9r[,so@<b0ksNc1A2OdH]]-r#@[%"Lt8ZdXk0Pfn?,/p[iQ$<ir6DoZF)N*8D%%:9\r-Q?]1;l?6*:BZH<ik,O]Cb%kFY%,WaN=XNWghH0ag)f8U`ELq-(JK(kuIUr:)$9OTBI_!SGV1f>C.s4^]Z]*.[7#K?/HA,pY%VAP!%Y;+is(56^P/5hUEdsMYU_n\)EKr?[C*(gpCWWQed_&an2@"ECH(M!IoFjE4.=iQeo=pg6c(($BlbOK1e+U:sB5UqHMo2Z>k%-;0$h"Z%Eu4L,Y>!0C`#8YL3tj3]H8L/P"k4rY]nR!R^__`B]IUdFl<`uaD`/6"N$V9)gn-PC7s6_Z0N,T8/pcmC*SQj486h?+aN%mgG["L;4jV-IFfM1_g\8;4_:2F`NEhN$Cog-%mP41/E;V'ZWtrm3%]_B;eVE!lFbhf[3A<)M'"I^6O[ug[;ekLK1^Q`aY!_[,Esa%8Y?qO,N^PBC9e<-Wuc`8lpgfKn`^S'U7$o#k^3",j32#I##VIZ^.HM48bbnP4X1a#oNV*QJS\CbHOmGt#c9%K>?!j%0q65]j>")t%MD3'4Hd'PknhuO3X/.Qp5<*Rr&HIUB>0-CBPL>(%aK0u]f.p78cjCj,8XQ`e=sP7jC%1MP4:s%R5#@tYIRYp+pFI^">*R,k09h`h%c`FBBLpWU5eV4giHXoLF)e!CCh(_dHoN'T'NX2J,X?'a8atea+ls)m=@9*IJh5F;>%,^XOp1P%GK("LlTY$%7n^(+W:'HM/0n>6;%+c(D$KpY[oTl=@p`f,M&)"T@Y.U_#7Y/buLD/"e`,Z0KaEcGLHW@,94hGYo*MVUW*C?/qun9&2t8'dGu90iQ6Y\\#?9meVAR_L;*%&LuLpNnTFWk_a*I4+lLg5N*ig-j[3QL0jS]bo'//@VkusV)$>A5i+fqn_r$u$-*/0Gt&BA)"d8g4'%-@cjSNSNj%hIm7AS`[kPiF%o7T#q\fNBZW@8SP)lb;-W'2%D<;[_cB/"`'a\QV[OrtR'(c5jdbVe>tLuhB*LDV0eE_(^QC"%&E)s'L(Ri]K6j3[<8+dT@ZWnr!?%(r43+N#NA28=@$(RpK!*0$jXWWJ]33dhX[\X+RB!XM%lpib1GFfGq/0iBm)i[PHetVL1o;;>*18OaMJ>ifWaAiFd;<\TK+D:dR'T%WDXd$-GW;H4n@uK[\Kjhh+.g*m-S4?'(n=u4"L,h&E."o*D;2O:]ZS7f$L=Q6Ch"<7CsI=C'!?eZB0&P=bpW:!`BN#+p-a[jV:*=%@_R$Ul!SD!aY[P73'I"RVOJSu&n$buGr'/S$,;>1J>o@8*/M^FiJJsGL_R6CYEFP%#J;Y.IO2!c#&[jjl?uSs05t!>8M3Z0Djgun%H?`]].<[>/HgXL1^)uo-J(>u6=;L`KlO[Z[IE3pj8="st>^!c6,BX)cI0s_TdAiQa&?q]VVHkg)>ji/T.GkC4I[Gp9Mli6g;Xr`Y%\t.'2$>gJ+3Cq*PN/'gFJoQnYb_?GaFd4GL[0e^+g6pJ@bjgnTfRWR4OF_G:3#Hp5E4i1BJuB!sKS6K4&dL0/?8TjN&qLm<M1^rU%72)S!)\lO,-X=^LijDlk+9QS"a4Y*'*aU!;jT!j)D7c,"fQCOts%k?XfKo@9]SU+gj:lFG^d\qZ2WD4(@/#3cUoHL9mW@66+,r"Y%e6;fM[Do'hP+p$C)0=)DRWmIC6"4\IrL"T&*)E$^naQOn]<W$#;/"ud1)/8)+=\)94pYuXm]Qs@Y8h<BTLR#7O4j*pR[VSP0>c0H%A)?JZT9&DVNjr8[0\$PNpS53nJcM519Si=hME:1-TMVYHJd2gKWm=W*n9*St6!cMY27Ps%_[Vf+J4jrG`_o1eNlQa)coa+nRa\$2%([?hCLp<IM8UTpBA)F:i@Pb!?$$.=ZU!Z99K6N\$=UN`J3j.@*IV#i+mN!)+cV*_iaF`lT[D_Y5OYPn[A,U:XC1VA.roOfJcnk'n%J@F4]T;"8b,REmj),\.D'7OfC`q*YNA,4F:ISLpX4$AA^S:<0j<q_(l9_eJ^E0%[#jIY"J:;Z95\J<8gjm[g(Ui?cQP^V>A0q#a:%o/,2?VYjN!grd7rGBsbeZ,sC@Q>t=S$`T%6n'Q:bUs3Fr#&mmS3<EY(-+7D@P^X0Jj-Xh@Q?J2KAu)6='hFtZDm^FOL<*:NNJ\/`%pNi"uJ9>?i-EL<7!6rJ"Um`CTU'sF^B87e%fMmd@R\G@u1LGrq*F1O(\TpX;Y=onPRoqr^q)j(OQdNh.)I5n]<_A/$UOc_1rNZ17%c!!n4Hlu.24#-V?4WisoZe8u:Nb`u[ONLQ;doUnoA.B),9>@Wd*!h4Sctu^>_4oZ%Te:F!X&3_CB%]eV%r>*uKk/c0k>j:hDsKCp%[o+M'^%,TJL3K"(W]#eo-6SIsg<<CWr*$\p=f(fB21'UdFc3XZh^K^`Y"Dg]=4<>[Dm>DIdS.E,T%.9(d^1[Lb0lRf<6Sn#guDdS%Q9`=\5tkc9W8@#54o(f#j20*iNsM>@<rERUc>SpJHWjfhC5En+Ida%)VA<d0?YN_0bSJ-hA)Aa;K=@:E#[j!d@Q2Ne.^GR1&%0Z"%?k3E]batnF(^HRrO*AkF"m;/S6t/oVasEM#;SlNPE%;8ZO)?tDDU4-/rYMf#(j["ciITA^^s?pch*];;;<6hpKZn`U8ePTCo^)eC%]]W</!dq`0KXEs+mPDVSe:m(T9C&!fbqnn.n$b?<TE'fP"Z44TH`)GEo6eIY6F/7H7g!>.lh_>/8g%P/adAGl5Zk/bAV^Wr4ZG9Y%_b;J&h\cZfD(*1NL4D/rV!oHXgIIX@?N$.$7H&3G[^T/XLY,EW3.%#1;8</H05jrid.L%#$F->`hVqB*J5%<Z\i'U53j-kPh?rdE%.sWBQ&pBMT_N5Ctko6F(*pW73%KXjgWV`#>MTA\@R:AFI7ZiNR-"bt,.2ajEb0.A:jl.?ZXNL)hMaL1#fi#VCmE-(S>=qB/Q4fS<%;F%m<-'`'T0Q)dPCoK,m/%h:3.BNr_F6FuB@nL'5AkdR8qa2kWHZ:K%6Ybs"X#bm%3hq4'C,&j"*WRrbp,2uGAsg?;d6c]P7TI0!%d:N-Q3YHIO@(.tEYV+dGANCkSG?qiE0U,SE[8P%AQ2[Z><@^.sVP.1i]nDeh#S=m.ha2#`VFc2kD3ahC?^bQYfJ$H%6f%AX!eE$d%lc)3+/G58[/3msT42LTUOO3&E`XEeO1e>Q;R5O;)enWR4I^ImFKT+.a)mA:K-lQSf.blR8%WF"aSZFi%JXrX5.+pprj128ue5@lZ%20&S*Vn4iRe^DWYKHU&0fj7r9%r`]Z[@;7$O=jd)5U0;>I:1Z<aUGpLk#.t1joG[`6%l3P_`bQG1&;@,9Y^s-$gG#8luuQfKR$bY%@8Alqbh>q5;P;=[%BH"=0^,fhZ]Lnb2ZG*X[D\nB@jMZK#,pR%_s!X:@bc=!dC7/qQ]mtTB5WsFXZ(P9N]K@A?ZnqP_UA(.'6*mr%/5>U)IVF+(I#r4&BTXhFZ;XOXg9]3T(],bhfp@uu=_)6mXEu2u+P@sJ6*Q1`9Xr=OP4Ar>B%nkSFDa#-qe:-$rKB9X`;OAM.Pb@I%ZSAuBAn)H_RgmU9<2>^j;:p(h]Ri8Bn$%50NPECiRk`T.:RE+o[Lo6W5We^Wp+.CGUfKuf"D+&3,duBbaYo&=D8^_FpY&QpE-=13%BBm$EZS1?cCpW;MD_$lj%QDsua=@&9H"tJIf)l*]c&A%/P<h1GN?l?#BmB0Xci_Un)7lTne.c&7UBLA@*&B`3DNt"2O"T[JTNGB2%YN^UGYL\I>0!J0TJ0"KS-Z$(J[u7f<r4Q&J'Q">:['.]N]>oKPh2gZD6hQsPJXi%Kg!mf?1r!3l"/e6/;Qh'5[m.7VhHMQ'X][4#%Fi1"mODAcB0;%Nt'*XH]_O##pWWl5!D]c*mAt+]?FY.m1oY>]EW=R<6QSqes2Fe,)s.PMm"2kEHc=Z<DM?+f?oYcg1UMk_!h5Joi%m\i6MHnb/LG\-K_JAk\k+u15KY+1qi6[UR5HtG`']$TTBM9`((*2D&`eI#P-$7'eZ^rut'hl3-8$QPtp<KdP26]SW+Xd8,!Fr(RA%-Nqe8_)uAd[o]e991pn"+$2q&b]I0Em@3=oFXHsQbf)0=cb7k+e@-VC)"_<T7-`AF4B.lP=t%m^eT(?Q\cn=m[XXIcmPbEOoO4gm%a^p1*(gYCBgkhl`lq0ZOLi&;u;G@U-0Cjce4(h?X/ba^3.E]*]7j=<I.80%XEeR6D%?@1MUf7ns.gb=bDCd(I;Jc,Q1Z#h9C-aWM%3`7ZV%q6ILCU+Y9FXG8`L7%1j1!4^5"cjY:\NS4@`N(Eo4Z/D>8Ei;JUk^tm?'6,:\_I#>..Ep9bL)Y@1)>3^Vr@JFQj\,Ap\T1d%3NQa!E>udg]'om&bt/162\M7Jr:[<mP#/"bi^/CI/-T@GZe?U;2WOk;8hO$N?hN5e(hLn)qs2bc(28!&XO_*'V;#>ldkSjC/FUKU%:AO2aqTXVLp-J%+9]oO1"ZYA-/aM#&_'NMm^GsTq#UD4t_LO,%O:Z+^`Z.T9,`T5MG1)I8eH@sF>W-MCf`k\mb2J=9_h`2d0<[?`%AbY*-RF@r/aI)cbY=k#sa'9itf%Am$3Za7G6BZT-Nrq*S%[jL6h",^O_^HRlf%Pg`G&-3Q[QD0]c+U!ag3dX!l@b##o=D;jPFoCr%-[%7Tf\>qU!VDm6/HKS8[HD@?bBJ%i;">=TZ%F+jCMW%F[QD0]m3-!nAG&#Q(KGYA%F%gGm)&2'OimU)cJ&IPqbij+fUZDkk<)Q@%N^Ffi6LG7-aIRl2\J**Wf1*Z8VhKP=S]6ZY<bGs)&TT6'-hNZHG:qbVK&!n3b6)57c@t9C`c^Hr66F2gRSZ+jHaIOV,M:,/JHWM>%0I(dn)QuO7@;W/Um%!!W/grq"YUZc&JBI7aQ300f4.i_OEN1WA9p/9%"_u+]dd_E(OtGFLY`.4#QSG(d\5@2/%,Dt;Vs9_u6Yuu9%8l&s-;$-Z0$.D']$ZirRIda&l=2-T@G</_EM?=Qffi*5%'M%H[?MfR_%p7$0((XK-@Y0VIZXNd!5PAl"1">28A]H@Dg]9HPZNC;4%r=6>JNg0"mPLiBOcJ30*.Q0%:*r@hFX@ftJ-i5B9%IAGhrg+TRML3UYd\[F`N/&P^`<OJIjb1%KB!!L2$0`)?/_;H6Es#+R#Mrs&%p<)"$@cW/(k-Z%Kj7Rhtgic0oY)DFdX^L$>9k)4,X?cE&f2Sk;r8?-?YJa2lo/+MRIDY5$i>5[CUpt^!h"\]NWCIIF7aes/mRg:G%7'FCPjT2?K?@a(?P:@@^,F$-tOm<aL;O3iXR4qG(b%k.!A]H'e\RBl_=Dp%T/*G)tC<cOr'fa`U/Lb%6-U5?_A>DlLQQLmVm]L!k%34818=csC13BN(oa:5[W:P%m&[$2RFPaQ>Y!n,8[DA0e`;$M;l:qqq_q(]+<*u#U@8+KpB@n)$$Z!63<Ej+(X/uk)%W]DJcN.?e>%=)XI<ThLdo5?VT-LT6'%\t.oYF.T-<)<<C61K1:O+Eki*U&gLgr#-LE7'.2[Pd7pi8-dHg+6&#"@e/GhlFUE&7K^DPdHV\%LMq,-%Pu\\.@9dC$i^'HMo]<O##F6\Af<2lA20$N_hm"C(5*Lq]d/b-T',,>>K!%hFl$o^rC^@@`A$GPn_Z]\_0GC<GU$k(_N7>8.G-D0-%BJ1tiNg]dU[)R<s=r+Wr,a[kPG[DIarE<Y+HH!5kaEPJ#"]p`0#IpKUq)6'"mTGN8="c-QR9QXn;5sG["uj)m1BElCphCc,6m"5B%kVTnfH5nE&cBVTCMZHi8`O5pJER/26P"CqhY=;`dG!Ce*dtLAo!90]<nmm,>p>K0S+JN/BjAlN:XjTEFcCGM0W,Q%Za>^r+<*a@(%e/*r/*DWE6PiU>X+@VgIc_=HG<[ZU_"W?=k9>ZFZc/WK+V&*VS=\=k/VU>KD'e6V3PH<81YOFkm(sOf'jnOhq)sW&kn=b5r+e*5a%dNb9pE[1tn]5T'A8:*NVh&V<@HTNW)#m"OUfQE4"/!\.t5(O]>=5doM7]`Ycl2&7:fU#)Ld"W7L9VHeFb)7]p)H?N=A]B&sd`LNG%#)"mdaJ9M:]$&doVG!=hRa3ocp`Xm'K\=>'-,+<=FV>M!.pfIl[f\F+]<XE!^2")(=G^f?dJB'Y?(MSM>"S[)(UnD-Xt.H/mHVg?%6JTSG=$Ct^bcH`.$T6]/EN<\PFDo^:m%6l($#sZ@@;0JF3>:7Z50N3E="L07R+@A-?X@2&Ft5%NeL^e2Z//DU$]oAh<4WeYp&=m/%h*760WF=KN8_<#,Z%UOaAr;ZrPfAD(\4]<UC8G-Ed\g-Vb--P27qup![(<"m<"]ghV$"'BdZE]`NbJO"k6dCrC[N-[F]g%49.l4_%29T@$l(qaah.8NW[,1CI-]%$oF+)Z9j\".uL_aB8j:W^n3@5+fa#(B4b2uNGl+j&00^.ni?,0A#K3)rn)lqe#QcX`Ch&b?s>LkQ2%mJ&-R$-990U.a0R"[qXE<i,0`R<DP5q<f1@i^e.E%e!u>C.[1=o@fI#3^A]u`<%RINR?DWV,^g(Mb*[3"BbJ;LI,02,4Oq-c;=@p%dtGHQT"3ap%CaSV.4)o9k!+5);din$6hbSKpU944X1=uS5,!-ASKj?m0M-&Np<Dkj.cLZ[KINr)GOeh50=.*=/A:Vd=)DP8&3Xr7%0T4nD?l%5LUlpBKK;=)C0,C$9:qW,WWUI'N<0I7?Ull0#JZ:S#P2t^-W`f&T1IX^Ud9CL"kIkn.!f6e)5uJ@0[kS=kp>/h-JUD:\%kY^6kGc-g&niF.R%(A"q0+q]Bm$Jd5aK]T/5+/oKY09bQGF@T&]_hJT\_E_@r!bJ=.EgQgLpDiu<rSYRD>ZP,9%H6TcL]2Zm#522%^(s3e*85.@'f_QCDrd9C$!,r.SJQr'l2!Ir?aQV@oBrr\greu9l#98b#1foShFasbY'?CW'dUQa1+?UJML]fB)6JW]%BOt,M/F%$%%8ijH_NYPV!P1$:S&0Ce-Dg$Gk1!G0()*cAd0C<;LrBbr]!*<2o!HL`,nX1DS@SL;JEB51XaQKC5qGkj_,5!*+?0;*eFV6`lLIqd%ALGF,gDd"3[]^<,][;As3>Fh*qg?lcUcGk6%S&TKgX=G(ht<:P`4d'sk1qO9<<U@0qCSh\1DEMM^6-t#`dP!1!=0nRaoaY*Nmb""%gjU=A$/KY+/8<Xt_&*B,hCNPEXTZ/XZ.NHrDhmd8Y?//@@`.ET8MW@t03XN$=[Tbh.AfS+\3eCh)6k+:JYd6-*Hq6O=R'Y<`&,t,%7tUE./Q4'mX)1:+-Z+!/!c#&AA],C_A*Md[;U38u/;/tp#iB&dW\D0-55f;$WX^A3Rl9m&HW_BA=8Nm.<m6kVA+^gSDDcku5JPud%]Ta=*Qs#c$T9ZpFl"P%\9muS5dgo80$U7/TW/<I:Brm:g=IJ:I+\2au*'I\5*GWKfL:&+"+Rrg-dY=R53i^J]P6h7]-/nbmX25_j%(=Rkg9ir!4eB>iY,Za*`HZd9@l*nEooWcl<',K0_6%A/5nhV'j5]jF!f1,`QLY.WH9#ujVFll_1CXL1^TN0%=54].Sc[W[9a(e'D%5g.qV][ZTeU7&7\;K2"J6o/9-Jr)CE`Ck^q,C?as7IYhS($.tsVJ</).?2W7nEA%fLo)jod4!%5[n`EIGF2EVq49=)%rZ!I8Oa23%KP7m;7$%:$+5TKrnQ#ZiIHS_@VqS2!4fA<gHpZ7m[rCX^GofHK[.!.aP-]T[Oh3f$F#1AVRlZ%"gH&'u%`G-#',JdM`a1RU^c]2Q%_\b`CjOcFgkc5J*E"3SdA"GQe3`'m5]2M&_i!M%.lS*&G*>[rach0BdWJ-oq\18IVZ=2Z1!*E8_O-G<DG,)#tE<2Hlr2J4#L7m<M%!D6VL0G51PG_obT'Xl%2E<2WAk11r'>As-R*"E)-IZuF%,[kD5>F;[&Yr'/?qrR(5VA2.G&=Afd,V94VIqDkO/Su-oGp8Zc#>n$m%@5<\&#WG.CKF&l[&AOdtWh7WU/en?4VNlc*<d2<VAp,GV&;ZN"Psbo%^'s*7!p\$5cEM\eds(llAXkt&Z-be.>Cj(3:`CPl>N6&Z%.LRL1(`=QR&9i/g<AreQEGX/BER"0VfQ#XkX3C?tNRVcp0CLm8s)d8qf!j.mm5s42Udd8mo.Wp2]T<FXb,4tYf\jt>KaEU,0<eQu%o12=*?Ei)X1+)nK4Mkq_04c4%>=7,'bl!\cR/&'HnP*pJMm%PGY6R_;g^k0`r!%K'ndrMhP$Ig8O9WLf>WKDbJ=)!.8BA'SNl6G*%NK254n>Cua4GWa'][?MrS:>RKq!F+ta9:>/9Bu+,Yg6TIRdO/+A3rM:.1]C_>C<pjMl0A[M":rJ;("c6_Ok0JAt%#AG2]<a@m$l-%3_LB"^9Iq.c"b8=acMaUQ7MXbJ>A\/T$n[Z@+H8I6-QrlJ9A[@GR:uX#t0F*7]OM.`/1C+12TJ,:QJ9W\MUP_)>Ph=60r1F*s0mP%bU$&B!3@'W5V+Nh9+_2&NO)epbW$oO)ZDI.<Pm33<hM^p<g5>D.,B)f?RUn/=#E13k<u8-'PPUAoc[Gf(I:.7eO$VV;]()dN"KM'%1Q82;frT?sgOIK?L-F;N1b/X3ULk&$#I-1'PGPhYJn&o+0T,8]gc*n*4*.NUHM-28aDN#S-UgRn-UgRn)*NQ':<_$(.Eeo)f*i7i%clWrI9^&HlCGEfJ[%"Ta,FT>*F^;Q>)e1fNSgHls1M#W%b^W2@V[SsS_BH8!iATg0(AlmHgq-gslcCj2dd!s'DfB.qbY(SB,/!XH%iRPO-?*`Xt<K%=ENiGLJ;[X0U&OXhQm6j7RD0_ZG>T^SI&6\_/7YJ6ker7,H,0V1b=pRU]`PO&7l[r@SbcQRH%c+;+@E!'Zg37UR%h,l[<c`MqarI!WuLcMmF9+,MPF7:1c,&X"'GM)MC^#u'Srb4tnJuB%3^PB)N6sI0uj[flOijqh2nl@.WTd@;37L:c>,%I>S!3toq%e:mf[djZnZ&>hqJCVA&(ACN#HF0Xk\7M/akg1a1=4"O+no6tCg;/X0m:7fEhLp`3dZ4\flBI#To_T4(FY^[X\CiVgd1[D)hnW#T8%,st"K_2VEc&X,._3"AY-ANZFCOfQL16%"TU$P5d&7Z=eifSEQLn>Sq59%>T]+C%]b$,lqH7]d5^DT&_'/P3+OTG<WV4p]\NoERAq%;%f]Pg'#%GXI&/IYslcR@]UiWd&mEVE`U25_M)/)R=ko4V4Z[tTplh:/rVO9Mb(RX$lJT[+etrDD!/7KXhu^SW>N+ZK[`W9^inl"%e[7e;qY"Osk,$nY3>I_QC-Ug=@JK4=b!don,_T`:6b.8#BlTVkVS$O*@3M!_fVVnTDDc7:[2UF-TB;N_k&DX7pN(-oS2[\,2`oM"%@V&\1Z"t-]F%\0k\`SneNNQ9DV&c^"Wb!'(LF9.`!UN")G4t<DD9ctG#l7ZP@TlP/I>b_XN.A!Xm$@4Xdd:[pgTO]bg3Di7a,[:k%\V`+e/`ZB%_3r3J#UD9#F##;cS[L!s>pJcj=fl]l2b^-YjF)9$F/d%K!MRcTOlR)/0H=C!]K@Xh[rujd"Q61#YVmS_]Xk,u-NSNG%D&<d:+FT.Rg7G0s+Sp2Jrhlkr\+NMB_-o@qrb^hI-S-i[aLJj/,%4@1qrN9PHABI:ViShPYLn7jb5-PhV5HQHQCi7F3h0kr^`qtI%g0$eF!FmcT6$AKDB__YFgeK)/Gq4]8.NDAK98I@r)o`NsGB-9B9,kr0[17_eBBZ7_QW60n-@@mPcN&3E#:a%F4BPJ21E"KCEiWo<%VWo$\jnA*$?!e?MYNf8#Ym.Vqo;DXEE],UpTk,FUN5giQg1m%nhY4Sr/pp[F''AI^_GiZC1:=tTp3H`+ar*dI$[Ro1`H1ugN(.Pp%C"?9GgCVo\?ItHVB,pfs,!N#t`<</\`n<#&:aXg+<R2;TqAF3.XMc5<0-G-A<;ha`r$XG3\g"C8'sqgtWIjitoj'k!-o#-o*ECH)%b6ZTs^B)F.8fn(R_n.K*L:"=i<AT2!/YWPkMeKue*L?Q59a0Ypd1)j*'1eO;rmBZW=BFKUhP!`*dGsW%eR;u]^JdJK/=NfmYJ\Z`%G?A[RH*6%5=_mo40C.q2rUnclrpO33Q/Lucrd)>]HNNZfE5/(+lYl7BK`?OLq5aPnf3eR6Qeu,JnSk.U)NkLNO$@$YXi(.<^T7a9%rVY4TrHm<>bgd;"jQHC]FL]_R5KSBNSRAS6;";bJB#sRmJ+L/L:s)$%no'$UqB,.qrls@#qTCPlo_[PEiTn7F?U+ScjWAsO]3kP3%IfHlAro)Hng[G1;jbAf!s89J^Vp6F^G(5^b^nOcW`-Q^i8J(G:HT$!rPg@FRe]1eRI\>%qMog0#/<?6R)WKT`^"aR8iW$aq*+-n@%s",;tA:<["N'i=Q>pIQ5qZs:ODTJZN="<e>c+Sc@B$WR.4Il:f<^X\(7nKL%o%*?U*%0i(3nR&g`!-qAR"l3*$lY`=d@TFN*2<Db%D?%O$A@3:CGnEA:3V\)E(@@0T,5^B$7S/e8XVOB>j93?Q%9!ci\j)kiVI/_:c)`cF$IuQS2p.;/^Z$.?O4n0-'`8Ll.A1^N3p'M9%,4'llSN$bKN>FIWZ/%@4)2]%FBP[E0<#'Ie3c0(sWIf;Nh]sW<f?e&8Zjn[a9&s.57T.Z'0lnOa2A@hX#nmXfs8R>qhnK$%=<V(P%`EJg;!!+690&1gj%./8b(Cl!pN,0<S&I+'YL?0t\%5J'j5h>m>dEm@NILEhU88M@sQm.l"o2ku[:8GCoM"2eA2g,MnCiqW0U&8Ct%m2#cC@=Y</m:(c&CBH#[(I!V=D?(JG0&:<G=1nl/'ujo>0h'oh\@=)M9?+FfElXk_b;H\O11VBGZl>Mp>PP&MEmG5#)N!JcOui63%2U0FrW#3jJ?/>SGSW(A=TE`KV`Dh2P@Ltg/G/WRO>1>gRRTETb[>J+>Zr/IR5pPk3`N*\5O4n+5)+5EL%+/GJScZ27DCKG!2YNU;%/dB,Xd`hQ#OSTB'OnTVo!SkG$*KCd^)5'$:pUD[2[:&p;Gk#Lb]Dl-oZKbjA(jXj<<+hK`#e'2[-*d7FL:SgJCP!G:U25B!@GngZ%iB8b$C)7Zsq9HE7Hje8eD56"-=TiJ)!Af8gbpm%m)`X`V>QhS2JYS]i8Y@7"KR"AIi\B-\L>@mj^<p//SNU;J3:Q.004!W&]hOVB%)8JSqcTLbcaL&[<ha!;ZGj;c-gJ"<2nRD;BrR)[ihV1J5(\`r[B&#Hn++go:#fkGse1RcFL(R.afbJrZA[IbR/qo)2fgCS]8R3Vr%>TkA_)$&U9K$VL<osbEJrRY"%;M3F*MrES$I&nnP\9Z/@D>UaI"l)LCA.<6]1Jhtg1B=;K&BE$X,afV6qZI#hWq-0=Kn!$"5cY]N%A,oGjcr7P)9dA:)m2RkT&7*k#)^*20?M*VX5e=4Jrt:[__*ps].qtITP5n:'!2+XeI`YE_#P&'[>b7cb@aSl:,[a!-$bW`m1Hn56%TI%C^AXQ#?\0Ya[[^$%GA08?Hj@c+5<>p2n4ot^@6NdtVj/+88Os/K/i.-VUnJeBifS&_j17ZL[Qqa\dr3Dis`f+T8,Xb!h66iW7%*G0.*6P6HXddFaj<$X_&\1emlPH$^Uho#M?$na7;p.r?&eQAC]!aIh*/5+sZ!3t?8QY!PO^A:"$_-iXP1nlbj*4g2$n\Q,B-ro6K%%UK]]$U?'2`u?.,5*6m9g(^es(NA5H8Uru1(E'#=([aW93PUB9k>QrX0A`13A)6gi4GLdURckuXKfXE%-M%.%LeKRf5QKSpJ+YB'%^ep.P.tf]GkrIH?,E!O.I;lH6.H"f6P)ICEo0pmYU.&,UWK`gQHiBn(Y7icVdRf?Xn*m7Hba?86n,m6:.Cab]J3H'DEB?sqA:g$1%!lJFjb&e<Eaj2DfN(^*81'@iN<8GjO+;8US[pL;nbpFbcQ\6`-0!;Rj=(J#DHSakI+e&1nJE2e@AK=L3]Ohr]]'0:E@<kqgdDGNs%PRV$:Pl2dEY_ttBV7BU.krJdTX@Quo6^GP"&uHjI64-7Fm?\/;95(ft&t+!g-C_3E%3Xh=4AlT$@_sBU"U*AJAl\+Eo7u6qQ+M@/%0Ji(J$ObVg"M1e54B6renKAKH>:AU;.[k=8d9d'kZ$U&>Cea,?JlI")TSTQW5WoYG>BZ/F1%!t.`o'BHL*\YY,dZ\lhh6EZl77tb%7*<0pL+EN/U<J-+:kWg?f:5aO;C8o**<kXL`O)XgY&-/b-/*oWe0L5g[*_s%1.(p7mR8>>Mn>>>8]@Lq4)O'-)ZnS;h9#h4-LZ#3%PnJ'?pN#E#*NG'VqCZ#oX<T]'+c,_0`MPh%e4n%NGW('uN_2VqT^Oun=P).WUL+431qPKt#]ucn_`tmA1]g9dUsFN+<u0Nb\/*W1%)'cWI)"@>^?a-Yc(%;1F^7@t[i:f00:`VnYSc+YkMKK;O#(7bqMa^$c$l6A(miZFCF2.2R`+$"j010=B%>'.1ZMdU=!K=0%gA7Dr%`oE6#<2emZ2q\^.>hB68ZiOdnJ]Pjkg41g7Yo/_S!OrO.`hDf%75?t3OZWj+,,i3=Qa_MhBr7BpDh!clg6KX-S*90J4J\@;Fp2nS%ke-jbaH//t'&OlR^8E"Edk_^0^#(9&Q/RlZq&,3cplr`f#Qcr<Cq!BA#*d_4[YKF,#6SKEJUKU=TmY('+OCf6k^ft@!EW<o]&O+X%rB:`P@GW-O.cU\cK[<`Y/!un6JOYo0HZ3QaX`WL.oA-f!Wet4SP#:9k@VimAFu%X,p_lVgbXi[k$8Z`&'=k7q:"U65X@%/'7Te['%91Y,AVViA#QG>>1_@*;5#[j3D)DF%&!OBC^6tf&Z-I,+#'FlW+P7b*DDc:t2Q!QK:I4UAW^bWN/bGg8i!:\c#Mp2e]k'UM\H1bG%%<uQibY!33FiY-4bM4AEOp&gPPG4%Hof%Nu$!Mn#_RRp0+d.`B+8>8Mh=bL"8d>LWX_5E5a`GS<'%3F8gs3HL'"!gEfq,*p3&:tbb%GKocl3"sCW(he[o+5kpBUml&(%?*(<WBIjhe+e!Nl.'/%;;gUsC`ipZ.JQGqEMi(LRZsFS7HQc9,];V[Yo.CRd1X"=EpY(?q&TOM%[mPci:s$!5U/MKu-__I_QdA`u>]nnL#FG%ejA6*=*/j5#0(mWQG[Or<jP`*VGT*1i?E+-2*7Fr=pi4/?)g1blC;,e[J6a$]jZXA%%:?*Z$c4gI35rC?q:;2_Zd[,DS>4_UpZFKXa6?pU"9uMLCl>Y,;+cmo]o2rA14kI5cC@SIR?,h%[N^:;b#ats;K"+i!68K9O`&"NZ%W6d+Mlgi#M$i+baUrl!"JBVF>pJr2LVC2ok8F$n/_ea3K<*aFt,d_b;Y@Dh(CJdHN)ipU&Nq`q>Ln50a\i_.js/`pnfa0B9V.HJ]%ODi<u,6D1%d-K*liK.tQ0YDp/q$)[#_BD,f(78bu*>+5"]'4l5lj\103$BWsT!]F``7/1#59UYI-NkrBa>i:;QppQ\q%5?>`9O0D%!gCMHerC"aI)hY8LoErldh+=>:Tp)<h"qMc,Pstg)[Q]4KRib&^U9UDp^P3\:C%3bKQ&?:Hs\*Yn7Lr5HAHQF1i^OY@..E#e40`2%?sgq95;hc*r`6^9[sMh?*NSap^%J_'!#S7<MfB$cUt@,VF6_\gPsM_[BcFCR*&_K=7CFMn$:ItZXM?"s0V#s10T,o0jDYsQ*DMbB%K:C)c&NG%Cl`uY2Y'XO<Z\PR-Q[U[#-n\B?Cb(g0#5Gj4g35<rc3eLJFUbn+EQFI&a9G(_VhjjG`3R40qIlX9PekS8af`JdDi\6\%W'YpM?0&fOZ]_eO5mj++oI!L;_QHpYi6Ke1,]:$R*Gi7^>A"U;*,fgm-MY`nL"RC*FG/Qu-P5F,l_TC\?(uF3p;\578upjg-3SA:%:sBQ<iRAt3#^e8TPWaeq8B7TF9[3Fl,!>.s+;EC<quiB*O<DpbE#2>=?'W3h\/0h0Ja+REI&md/[:W;qijV&u&EsO>!W>/Bq\Tn;%N>lD):"nh@$%2pG?#A1P*/a]&^Jg.*ki/sA&u,WT\AWW+e=B6k=-Fc&,V`Voa3Q&$Gg@dpMo9k>\L0d7"=0N^;MrO$LDm2c\i>LR%UpJ8r11!BXQI2R#-;"phrHF'V%[kCo1,4S$;(3'j4Y?dL)6YC*o(`*1FH#k@p+[4!'4aG)6RFYd>te@ps0-(.OeH<+C24Jniu^.3%7LXcXOmso!#U)T*Gf>d<gdO\;"!=J"N/Z;M'k9!Dgf[Q>*g%?!"/Ah4nfVCqfThO9Yq.<sHCHPOM#;LM'C:stR*9f+HJR!\]D+'b%A0b!s/2@8nj!6A]U4Qi@UL0nq'I%3ul:F>&F/e=fX8uOL&fU9i5`Tr[&MqAUC-nZt+Z(N:KLV>aQ:R,^&RK4L92ae=qr^XiRSXW&%C1KH^bX*NclEDEg50*/Oa[.9KiCCIIA51QJZQgG)?!paSpBpWq=Vf'K*Eu)BL`U!\gaZ9_Elb&_aCG;FRlW_!8g'Yl,.9Lb-O_.d%i4pFjp4<MY^DiCs(q;22Q@RqG:%r1@-:"Xu1JldtW<1lK:*KV7hqWA9/ju]V,X)9lJrom:<YIqZ0=b`IAMo];0dVSi.jl-I_BK%K%lctWu!10bfEm^]51ps%3Acih+3pU7=hSJ$RdV`lN4r>7c7$J<;Dh#Hm><E/@h]Z,(IaHoiZj$__,fgLT<HNr.,3^j.U$V.u'NRS#%@=a6>+h:B/q?.Rbo?-7m)Z&I\W*DkjH]:!Y'4C!?K&fJB>nE=^BD0a^B'EQU7hc)YBVWZ[i[t9,P601hSDlMdr]\??UO<SkaMcKo%80%#uE[1F5*UO?UHeIl[I1'bgrJF*)JDGjsd2]\Uhcp%'mB+17K^BZ<X2Z%^X#M5$3EZWe%:)qVe,_OjZeFJA\O`CW\#)39K=Dic%L`Hsa^qa2;Rs>IY%kM0jC$NH;b7@<aF%J]")^PK%&;/q/EfiZ8Rjh2nD\/-f>Ls(%iHtYK])qikUkem):sM_!b;JopYb%=bW1c)]%c2I&XU['Q!KNnprAHQ>u*_uAX.Og,&jNQb<_8)H_a43lq+o;Nc<TB!8'E"^@eXd2"N!K!a>XP\<bm_o>'$56H_dm7&5[g@ECJahk%.P?t.Mi,YEroD39ICX8r4V"HJ/A<:G=cu[^j1'gLW2\=!3S4@S;:?q6q!TR*4ld5"p0o*car]G\n*lPCDP_;eG`+k9SJKBm:_=%!%U+Hl*Wi-@/?rXT9(5*lPWj\=qZE%HR:m)tGc7Mmt5_-LUXaMTp*)fr'-1N?0qY,mY*nSbGiWuS3;.%1'`OW*;;uH@=L&o+@gZ09E%N6lN*qq9eIj)9E<3$;O4i>/-O?qaNfa%5/"EKW%+?nk+ibu/BdS7=]nGLDNP1W!=<pt.IDUP\[;?CEBnK.^4V)FoomC<nL"*ae_%%?hq1_<=g;t8=HZ,_0'IBLa&cDc'M+TR',)`@Ct^bX@7n=Ssu.b\6(GGfMfT=jBN-+i-Wq2L0,arNNtfWMRYUN"Mj)o_/fpGeDPTT%Y6`/?)ED81**GHi,j57c8:qJY1CdQM]h09n<Q,WU<g+chhP*=11F5a^JP=.=0>3Ka1$"N9)OCJFY5[!cNi$ia7]3c<((2r$WX8q5%c6XR-AUt&+<RgOr7YnVY6GLMGB`cZ&)!UDk3[c,LSH)>Hi'Lr/&lP'W-H-*ue=tj+BTf__`68<d0)]=_B"?pJ_ZU/fr168?O^;R!%6o._+L+"AhDZd/XFiDDBni%kB#SP*tW5J*?J[hs!A[>iO2ORm;\+:nI1_4&!QJe6O]r*btE"[4or'j$6ZLf&f:b@4l396PhX$*A;%69'i*<8f]Tq)8WIP*hnP9UT.q<<,u$M%-<CES+ZRi"^A@6S10SmnN!17#j&SLO#C/E1F403M`+?KLN$8"['P_,`]c^L@>ABE7OSF%n.Iu-kSfEIXtp&E%Qq^k@">i6n-FY1&eof3/fDdg+<c]=&3820A8"S#W^1`O@;BI9;"a6RrU-++6Re&j[#dZiluBUVi%jXd,1H\X%Mum!dO<V.F-aZFmD`W!u+qNDildHk;pSJ46?k4<4:I+Ct*"naI%(G3_Do`*-;\;bhel`e"%WaUO[D%R:#!Aie9:W0rT53o4LsLU#%?3,U^U5m7r`BLB(0>i'G9SN@po:kEf%mhP,G=rYRY6?p<ApQpX[!C>CEFQ/2M78#[m(TirQg!:9X3?n,G79?T[%oau)al89),_K+%q::;m<oi6Z+C1lU#u?^snYk`HmN>Eoh>k0E\DZE4(g!7`"B+HpfY?K"'_HA)11acG>.\QDS-&!3\`\0P6WjQ-_5XFI[aWe,oBl4A%A1*9NE:5D<Ak;%'J5gD3k7XLrcX%<aqq^@'nXAC8hF:ehh$rpBc@kV+,@(>.[o'DmXAK7T?0"J<7U_qQ'F`*I`2;3fE$XNW4?NFe%V3'3O.A/mM,ISaF2<$PniHLP*ko0`P[(FgYSgF$MXp5]@B1O&rc+ll9Wk8Kk66b;*EX"t%+W=(VR3;mJHDjU1'MiQ^WKDWADS[e\%#2jN3L+##nJ<FCH<-3Lj#]=[Q>"#s6m$Jq%O8KHn;HMgS;Tm0@Ur"@L90Y5D;<_SS=d@eL1KN(I5c0rclY+`m#uXjX0`[O\2b;-7%j<;0e?DU0^V(CLbIO$1$f7qqL[)BK*h(,UQgj8NrhdY#2;A2mF#'UAr>[O5DjGhEWn<$Bj/\WFNEG^f`plo69h&P$cQo/$Rm^^%W%2b?f:C\YdoG9$9\?Xf\nm^WhC4kH$&*kQd%2>:BP:.g6Ep#NYi,6)cZ>U,2-4u;k(A'0k]!V'5G?H1`)[dgqCs.HmQ_fLff*T[%[%lFFoQ4U8rIm6Gp!*QjtR]LK3)Wp*Ck'6]X;Nc%lobn5o1rKb'USf_crZPd7OW1\%AXf.d9HeDQu#$b6=MZcogXghLN.e4'IBD"d+%n1AaR@slP:3]5]k?sC;jWHNB)0K!D%^S.tRQQ#c>6.SiZJ0g[hj-`>G6O*=)nYEPF\*e?$:XV5h\i12mKXO6:ncSI]E-$ao;#57L%4KlM2'JqUm$_2E@cF[#G3&&;/QIS(@\-0HBY`HN!gZb;^)]GWa7q@+Y<NrZj,^`rdpe!]NbL[:hJO'9r-I\utg&Tot)j!+.#BRe)%G6e^f0_OK`5)$ohD,.(e*]FD@*u'f["u!T[>BdP"8LcQ/dn&5p!Qf,)b48?6Q:(X'me>E+T@(g7K1#dYs!b9,,SELME]^MWZ6Y7O%?OK4j@;kVn`1YZ%72lJ`7,j:8l^((%F<cpP]Y'3R80etOC9*rRXJbEJ_@T",//UW8=<s3WbhF9?('99&Yt0t($V^16/<Ur]jB"8U%#lr%2^-SrTk.2TZ&uKA)#oSR&M8grlWgo*`fV*BNglcI&K1(;"@SP.AAnf:6=EPjN3"R?u":9nf&]G=-]9,X'gF>:`O[q0Q+C0+7%OW[sITb8[]13_Eam'f_:FRdi^+l+cV1=t5&?lTg'0'q^`3$^GiMJVEI+i/!c__VYAd]Dil3$ch8RQY0'/kA<TJkS^ZaFnZRZ^$t[%.FO[$jI1bo"e+m"WD/_$I50_6SD,<b,I.>fkp3+_Xfa9\*Mmj'0S9g(V=<#73Ar>bmVK4JmU?<OW<NtDB>6f/GK9p[-,m)n:;:^m%1_E)K:.L*^#c95P0=B9@%),!"-p>c<GLmAD!Ce"4GfQ]"_:#3B>TBC]SB^0f25EEsbNTLiS=Ujcdh<jEH3-c8J$&sAe+"c_fH3d^%:CuX[V<PTs:<-1Rb"PQ;9mCJ,2DQ(TXW`AT^rTD768*ZujO(joFpAW-*=*fO6Rn5]rkF$@R!9,ND!^+=1^#q/WI?jrIGQ+*/\=Ds%H%RA<Y[-r,dZK$T%_RAj6?mM2CNor8X(NM[p@V)cM!.Te@_seN?2J(+4>aH5=!A=Y44KK#"c+5RY!aZ<jZ5@5;`l/o$$7CYd5aPP%:5MdIL?r((3&+V$C]S2f&^$R!VMWj8$P+_9L[j+BjZtVC$C5t?"E>=Cl7md>=Ao(Clg4-T:9I&rOj]mXUbo$#gc'%n;$%:6CSi<7%6#jOa>>(G,$6=!^(d=cFB0p$KbbEsR$,sQ+<RmqOoIB?*bVCQVpr#S"9IN/m=:aUcF,sIJYLLq5Cn@]1U4PD7GhSXm7&S1lSgY+A%*-Jrm0hsl#e^lDKfrA9,oGUOG]CV[$+jE8REfaX>*keNXU=5cA(4*Ksi)H^V1-!f_]q)6hD@i`/'\bHY:]WNb.RU!ti@^qOG,7/i%VE[3cKa,M1ePk"ecq<2\"iZ`0mr3Ih'Hs\/]@3EZ`phd=QJ,hBLSRl2]F82"2=S>kZCmRlNOlaNTU5`j$p.Bl#TPU+Qk]J-PFrn8%%[821JRTfa<35B-JKb)sG]sW3H]NE>mMmX$K\1e95S7BB/gWep5Zpna3=RG\iBcumXXrU.K?$Wm3@.!(13n9`Bd8oijYXdc+snig%6ID2j6UGNT2r4`i20oTC$BStQ6ALFf_M@-GiNDeH\A.6lkS8Q?Oqp=18ptlZq71kVd*Hs]]E429">2Q=!<AQ^Ke*60@LY:2MngK?%"jE'+B<2.o^F2aq._l%_%E'_M?^Iqt!2-%_.S,)l!f(5"32EST^Scmrl;Fa!if$k;#jckE"[re'`!_9cD6@^j<)&jJg<cgb!@I?Z%X.W)INO0%oOfeb32W^m&GF@?2')b*Y7%dOI4ccpb&FMslYX/=,hqg1G;[3)]]_`!J8(l6s["_C"YXJ",ptQ>RjMO7nbY?0KAgu#G%DLar"+RP-E`-_@uOi4:1fc426Wu<`9KNRb"K38%)6P6N5h^Jg00)a_$EC`La_R:`jI^[7PCO*ZGcUN3A?I(sO64#T@asb0>`$g=K%AdGJOAs5T,/oj/35V5gHDa7C"!2!/GMlGF3%AHP$A`57_D83&Jau'7ZRmIm5g]U,I6V&V)/q8t_KV&lp%!P<BKgIiEn"Nh(@jH'<%Qj.\'B>@3f%[lPu6-$8677A+uE2A7,KueS1:Yt6P2T=S7=a:L/k56efTi&<CrH2<_U<DLQMaPHQ4nr5Zm,QK<)$YJ''XQT7gONA^%KHT2;h6il:H,,`,dXMft:`"DMoI-;_>(fW+^!^%a'#qkl\MOe`G+oqM/.$hP>uYAVcjLM+eB?j%"]E0l;9:""bJMKhG'D<>Q6cH+%bWfHgI??j#OZB<W;]6]fjS?BZ`J*hRV_Yf!=SJYMK9sUumQ3<)!bml'HqG,3%b05uhQ7b#1U1N,bQ\PW$"X-&.k;q]s#PSDJBs%.%2!AG%c?!k/,Z6'%-Jdua*$l=&O*:\ZQb\eGg1\1FVEU5/Zc?VV1jCsu^5P89ppPSWpE9p?RC*Lq#Q',S1'lT1U5d/s2KSh#E$^fd%2,F-q(*Xg3CVW5Y*WS=9R$qN03Amat%DIJ4@Pmn[Rdh?3Onof^O74!"+gr3]m:B^ShhV^98p'A1,/]5=jAa`Io5I\3&<kb*%UtN9%R&>6rZ2E4IA_UD_h_KVU2+<^-CdH=I<`f?l$C2_R[W%n]TQg?DSsrYgaJ-S5&cLsJbJ<0AE@Nus,REZ[6&Eec&l<*3F:$Zs("**D%._lf>D%>MAi$NQ=*_HTN;I`Y.&Lat'NiTkpRZJg.iY7J#dB)!A9+gI4.TfY9DE-/dNl?m'mW+d#7g0_-+noE2J`b&^!ha[?8J4Cn%OZ5e+44s)jV</0tBDd<13mjg^N<KjXBAERM[?QRP$J4)4i\KCWr=hhpU5Std+eaFPJ.1Zh_8L7*EWQh]$F_u^FQ-5&Y?@/XSg\,S%NAa^r%hkfQi6M^#]4-!S^-9O]d<MSM9h=U$OH??trN5pb<LRqV-??lMmc,S;,+da!dnuUt:EWblXcO?N0!HJqYr$Dp5E7@'4(=Br%4QeW(",sjVEG97B]&`1ej<B5n-$0DAq$dB]p]`"YYL"*QHXUp+eK#2kn=_qOOqQ:Eie'Wb3^)%f^2PK4p(H-0j#:E\HhqT#?mL9"%jDd6:+a(0Q]O)QrTr3kEW7e*2'U&^',u6@?hS\#hE.lMS5uqHNVafp+O1i"Y^.KZ\6rKEEjWaLIW1),2Ll:"0%B&fZ+e2%^X65En%imQ=^E>-U1Sf`Vh&iDnPl\T(tOTXTg'Aol6Ynm&p],.5O8/-`UE`t1I#5/nP!aRe3RPKYpqA5,%ilt>]W(M(%Lnrq8KDm<ge4XiI%M'J2bh`#Z&UM%Z6;hhBt$3:#mA9hEIdS;XlHq9%6a[jSW*B6NOaT9o:e\E"5!p'-Wj=g8<C>hfHAs!?PR3'#'6\*iCs/k_$F/B^G%/G^um4.t)$EQ&4eV<AITi?\fD;o7AgWgn+O34BWpO1[j2pkiA=PS+#A\2aJ>''[:V&Fh$0'eTU].s_A&bnqX#/K$]%D&OP7-`n`L%f]T>R_uPr&fq8Oh=gC6KWa?[\A!@KNVKn%Q5\,ugY9?8;9G(H.68A"W/5;Uj#RLUO<C>J/Zmi"`KA?OD<#os1_I*fZLPhrZI=n=,%-%jEsG"?9Yf%rE_5SR^X>D*)'\YU@'[]&.5KONE_-dnchb'4:PAHTr^XN.B3YnJ_6P%[/nB@DeM>5iAQjDf')g7*"TE/el*e=Zd.%or[QaXi_:,_ISiV<=\u;L[U4p[0ZsB0VKXU,+[X=h"+84J9)JTCm0)F+6QeHf&f<9%i8"Si(j\NHXh9ir]Z&^&VWsGQm"LM'&j4,%0blJ6`1^:$qjm:__EbA,IYK!h\iZ^^42Tf+3MAhl?^DI>9VOW69lUj;2UbH6MXCiU*Nu&'GDDpQVqO=@OV$@iEmO$M-6JH.Qb',Y%oY+(?d3\%*+nN;ch]fb;.1Q\L0b[sC45pF[/WVOd2P<(Yi^P4I1$%$@N6Hr42hBMT[#j,X@+)YSg&%5qh'5Zo%30J2R`h%h/+\-(%+^IC-/Z!@#3L0i'$Ikp!mfu2b8c*o@_5US]R4B)fKgo_4!a*,d^f0=,?cd$4_3c1CSPk;M4MXWGK9,7ZUoG8+mVUSZ"i,nO/!6YM%F+:RF7NP)8%f\Vh7#@[h`,f(*Xd`1KQQ1FRR0-pdnD*/8%$"FJ)$`_@<"Y.hoiYYj"nR=QF@_R$5,e4@hWa(6Ir<PN&pEi/3-FK^%je/+qp8Vob:&413D*T",KR;4UPkc<[W/9'MR&;ukC9q05d<K.';O!nAaLFG\mZ0*;dG)]t5/0JsT4o[W&SVfKmSBTM3%%:tpq1,=%%B/jfC(qa56qpf!Y&h]8W`*@-)8'X5L*E@<CUCVtOcr@+!CY.p6gb>seEq).h$:=106Ep2W:Kp1=t<MBV@"+CB2E*)X!D/[6]$8W%Ehu.G"3.',d18X/0F':"*>B$O62"S-6ZA[PDLh/VZ0`DE@J(+NC'P-&jP<%^FP.h*\)0KN$b+iDPk[<c*Z/FP`jVK>*l<D!D9c?m%-o*5\;4CJJ;]KUU"OftmEjBCi95Re/#=8Lp.$5Yj,=QurTaUnr'"rbD?S6r[%]Mc/-&Vo2)FP\Il-"#Ep)h<Spq,G`mc3Ips75Jo%J,A=d^\P&ts3!(qq!69+lh`?MIef=[rV97(I/Wm8^]21nJ,\I]s6'C)f73VhQ[eto++F1MlbEGF5Q!_gpEeDg2o#1#s75nkr]d<8nDX~>%AI9_PrivateDataEnd