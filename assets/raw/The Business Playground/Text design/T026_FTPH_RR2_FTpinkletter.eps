%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: T026_FTPH_RR2_FTpinkletter.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: Production%%CreationDate: 15/8/06%%BoundingBox: 0 0 319 69%%HiResBoundingBox: 0 0 318.0792 68.5728%%CropBox: 0 0 318.0792 68.5728%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x199 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 28 8%%BeginData: 4236 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD54FFA82E522E5228522E5227522EA8FD73FF7D27FD0452%27FD04522E7DFD21FFA8FD51FFA827C9A15252A752A7A17D52A8FFA87DFD%0BFFA8FD07FFA87DA8A8A8FFFFFD04A8FD52FF84277C7D275227277CA1F8%2784FF527D27A8A8FFA8FFA8FFFF7DA8A8FFFFA8FFA8FFFFA827FF27A8FF%FFFD047DFD52FFA805A1A17D7C27F87DA12705A8FF7D527D52527D7D5252%527D527D52A87D7D7D527DFFA8527D52A87D52A87DA87DFD52FF7D277C7D%F827050552A1F8277DFF527DFF7D7D7D52A852A8527DA87D52A8A8277DA8%FFA827FF52A85252FD047DFD52FFA827C9A12E272727A7A72E05A8FF7D7D%FF7DA8A852A8FD067DA852A87D52A8FFA87DFF7D7D7D527D7DA87DFD52FF%7D2E5252272705272E5227277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD53FFA805FD0727F82727A8FFFD04%A8FFFD1BA8FD52FF7D27F827052700270527F82784FF7DA87DA87DA87DA8%7DFD04A8FF7DA87DA87DA87DA8FD5CFFA8F827272705272727052705A8FF%7D7D52527D7D5252A87D7D527DFFA87D5227FD047DFD5CFFA8522E522E52%2E522E522E52A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FD%FCFFFDEFFFA8527DFD0CFF7D7DA87DA8FFFFA8FFFFA87DFFFFFFA8FD53FF%A852A8A87D7DA8A87D7DA8A8A87DFF525227A87DA8527D527D52527DFF52%7D7D5252FD057D527D7D7D52527DFD52FF525252A85227275252527DA852%A87D52A8527D52527DFD05527DFF52275227FD04527D277D7DFD0552A8FD%57FFA8FD29FF7DA8FFFFA8FFA8FFFFA87DFFFFA87DFFA8FF7DFFFFA8A8FF%A8FFA8A8FFFFA8FFFFA87DFFA8FFA8A87DFFA8A8FFFFA87DA8FFA8A8FFFF%A8FFFFA87DFFA8FF7DA8A8FFA8FFA8A8FFFFA8FFFFA87DFFA8FFFFFFA8FD%04FFA87DFFA8A8FFFFA8FFFFFFA8A8A8FFA8FFFFFFA8FFA8FFFFFFA8A8A8%FFA8FFA8FF7DA8FD06FF527D27527D525227FFA87D527D2752277D5227FD%04A8FD0452277D52A87DA8FD045227A87D7D525227FF7DFF277D5252527D%527DA8A8A852277DA87DFD05527D5252527DA8A8A87D527D527D5252527D%A8A8A8525252277D52527DA8A8A8FD045227522752527D52FFA8A8FD0452%7D52A8527D52527D52FFFFA8FF7DFD04A87D7DFF7DFF7D52A87DA8A87DFF%A8FF7DA8A8A87DFD04A8FFA8FFA8A87DA8A8FFFD05A8FFFD06A87DA8A8FF%A8FF7D7DA8FFFD06A87DA87DA8A8FFA8FFA8A8A8FFFD05A8FFFFA87DFD05%A87DA8FFFFFD04A8527D527DFD05A8FFA8FFFD04A852FFA8A8A8FF7D52FD%82FF52FD047DA8A8FFA8A87DA8A8A87D7DA8FF52FD047DA87DFFA87D7DA8%7DA8A8A8527D7D527DA8A8FF52A87DA87DA8A8527DA87D7D7DFFA8FD047D%A8527D7D7DA8FF7D7D52A87D7DFD04A8527D52A8A8FFA8527D7DA8A87DA8%7D7D7DA87DA8FFFF7D7D52A87DA87D7D52FFA8FF27A87D7D7DFFA8A87D7D%52A87DA8FFFFA8527D5252527DA8A87D7D527D52527DA8A8A85252277D52%7DA8A87D7D525227A87D7D5252527DA8A8A87D7D27277D52FF7D7D525252%7DA8A87D52522752527D7D52FFA8A8277DFD0552FD047D5252FF7DA8FD05%527D527D5252277D52A8A8A8527DFD05527DFD04A852277D52A8A8A85252%7D522752FD06FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A8A8FFA8FD05%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8A8FD04FFA8FFFFFFA8FD05FFA8FF%A8FD07FFA8FFA8FFA8FFFFFFA8FFA8A8FD04FFA8FFA8FFA8FFFFFFA8FD07%FFA8FFA8FFA8FD07FFA8FFA8FD05FFA8FFA8FFA8FF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-08-15T09:22:56+01:00</xap:CreateDate>
         <xap:ModifyDate>2006-08-15T09:22:56+01:00</xap:ModifyDate>
         <xap:MetadataDate>2006-08-15T09:22:56+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>56</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAOAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXlOv/AJ8fovX9R0m38q6lqQ02draW6tRzjLqAx6K1NmG2&#xA;JIHMoFnkEub/AJyOmV0jbyTrCvJX00KkFqCpoOG9Mbj3rv3Om/5yPlhieabyTq8cMal5JHUqqqoq&#xA;WYlKAAYOKPetS7nr+nXi3un2t6ilFuokmVDuQJFDAH78KQiMVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5kMir+Zv5pCS4ktoP0feNJNEOTxgKv7xU5J&#xA;yZRuPiHzGUan+H+sG3Tc5f1S821fzRNp+n29loWvXl7Bco73ktwpilWXk6URecxjrEQDxffLYxvc&#xA;gNMpVsCU+/MrXdYs7Lykbe7lUXfluCO5UsSsi3ELRyc1JoxKsdz88p08QeL+uW7PIjh/qh7b5/ud&#xA;StvLv5cGwnv0e71Kxsri3025NtJPBLYTStH8UkMR+OBCC52333NcktI5KWj+fPzA8sWA0rzTp0Wo&#xA;XWkaRNrur6i92BOtklxMqxmOGB45bhIY1rxYKxr8Q/aCUxb80fODX+madH5Xt1vNWuJILIy6iVjk&#xA;T6hLewygi3LhCYJI2LIPs1XlXZVIrv8ANrW9X0PW9Ui09V0WHQtD1aKCK+mtLuN9Skn9UCeKEluP&#xA;pU2K1C/5Z4qsp1L81ZLG01bV20xJPL+lzX1i90LpVnN5YuI/TMDJssr8qMGPFV5EUOyrIPL2p6n5&#xA;g0vUINY06TRrmKaS0aOG5LM0ZRWSeOVBFJHyV9gQrAjwoSq8p8m61r2o2H5Tm9bWrcak0kmp6lPf&#xA;gw33HTbi8oyx3UkhUywq1HjWi1XYGmKpufzMv/NGn8UtpdGutN1Tytch7a6d0nttW1OO3aIyKkKS&#xA;pxWRWKF4n2KswxVl/wCWVzdz2fmBLm5mufq2v6nbwNcSvMyQxzUSNWkLHio2A7YqzHFXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+O/zA856n5e/MnzhDYwWri/uZYbpp4hKzwuqh&#xA;ojU04GnTBPGJVfREchjddXmTzBrhpvTRQXL+kAeAqa8QK149uuTa068yec9T8w21nb30Fqi2CLDa&#xA;PBEI2SFBRYqg/YHhkIYxG66s55DKr6PrbVbjQIdC8rS6slmz2VrHf2T3l3Paek8EKK06CKKUHgst&#xA;Cx+yGp+0ckUjkqfX9K1DVW1M2mkXN/dwNphdtRnb1YWMzNa+mbXi+9vNVONaq3gcCUisIfy/0u0t&#xA;P0dZ6JbW9oZLyzkt9Wuh6YmtgGmWRLeoU2z0Vq0CEhdq4qjovKPlS4mXS4dC0eWQWx0/6rHqd0f9&#xA;HsJQ5iYLb/7oe4A33XkF6GmKqFqvkW51W8uIdM0Ca/11ZbO9Zr+Zhc8v3UyMHtODM/Hi5+01KHFU&#xA;Z5d1Py3Y6TFoWg2+jw6fe8I4IINTuKzG5iBjKyfVebc4QvFg32aUNKYqmcXkxYrfSraPy/YLb6Ix&#xA;bSYf0ld8LclSp4Kben2GK0/lJHQ4qgLP8rtFso2jtPKumwq31fkV1K8BpZuZLYcvq9f3TtVPCi/y&#xA;rRVlnlzSf0bHdqLGCxF1cPdyrBcS3IkmmNZZGMscXEsd9uuKpvirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVeN+bf+catF8x+ZNQ1ybWrm3l1CUzPCkUbKpIAoCTXthtjwpT/ANCk&#xA;+X/+r/d/8iY/64bRwu/6FJ8v/wDV/u/+RMf9cbXhesX/AJE0LUbOztr9Xn+pWE2mRSBihEFzGkU9&#xA;KfZZ0jA5DcCoHU5FmEGv5WeT0mM8dvKlwZI5/WWVw3rxSrMk4oaCUFOPIdVLKdmaqrrT8q/JtnY3&#xA;dlZW01rb6hCba+SG4mQTRmMxUcBuJ2Zj0+0zHqcVRGnfl55e07VP0nZm5huizvIVuJAsjymFpWkU&#xA;H4mlNrH6hP2uO9anFVHU/wAr/KOpspvoJZ41luJxC0r+nzup3uZDxr/v2Qsvh2xVqz/K7yjataGO&#xA;GZhZS2k9srzOQr2CLHbE71PpogUV7V8TVVluKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KsF0784PLt5ql9Yi1u44rOaeP68Y/9HaK3tjcifmSv7uZY5fRIBDhCQaYqgIf&#xA;z48qUlS5stQt7mAAzRGAEFfSMzSRNyHqRrGOXID7JrSgbiqj9E/NrSdV1NtOXTry3mieQXDyrGUW&#xA;NIpZQy8HdpCVhpxRTvWhbiTiqWeY/wA0jP5VfWdJd9Lhj1XSrC3mujbxvdC+mg+sLGs/JAEt7nmk&#xA;nKhKlv7sVZVLbT86df0m31TTfM+jR/pvQIrcX1zHcKkE005h4UjVJJVDi5XiyI6s6uNgBiqtdfn9&#xA;axUkg0gXVpJqFrptvcxXsTq73dst1Xiis4MaSKrLQ/HyAPw1xVZaf85A20l/FbXOjfVFMrRXJku1&#xA;EkJWWxiZGjaNQZkOpqJI+XwMkgr8OKtebPzVvdC/My60V75TptvDZzLaR+hJM08vLlZrCqm4Z5o1&#xA;5o1QqftbMKKobRPz8Qor38VvNHd6iLeNlvYSYRJd2tsYEZIlSZoheiXqKxqxJ25FVES/n1LJa2cU&#xA;GkRQarqUM/1S2mu+ZiuEgkeOOZY4iQwmj9GVNmWQ8QG3oquh/PYQsq3Fgl20t3aWxktbjlCgu7e3&#xA;ePgzQxySNK07NGvD4lRyGouKsr/Lf8x7TzrZXE0dulrcWy28kkMdwtyojuovUjJdVjodiCCvbFUh&#xA;g8//AJo2o0+C98nNeXWoKo9W3eaOC3b6pFLyuWMDlOc7sjLQ8KUq1K4qif8AlYH5hWtqTN5Iur6S&#xA;L0w7wSiMvyiaWRljdTTgsbKByPJii7FvhVR+p+avN/1vTrjRNNS/sL2zt5FiZbiNGnubhY2Y3Agk&#xA;4RwxMZTyQEgfcqkP/K2/OM2qXq2Xk26ubHTR6VxHC5lladp4E4clT01eOJ5JGQMxpTlwYMuKpxp3&#xA;nbz3ea9oVjceVJdOsrx5G1W7LvMkUf1FriJVb0ouLCVo4pPU4/HVU50ZlVR2p+avNNnG00fl+eaZ&#xA;rCKeLTh8ZW6MpWWOS5hE0VI46N8NS37IJ2xVKL/z9+YiCNIPJU4le/EO03q0tUuOBLfu0RZJY0Zg&#xA;efpICCZDsGVTTRPN/nK9F0bzynLbelayy2iLcfFPPCkLiMetHbpGs31ikZdg3wPzVCKYqgvMXmz8&#xA;xdN1qQWHlttS0kVaL0jSbkmnyztG5qVo9wI0V05bhloSy4qq23nDz5qMWqRxeV30uS1tJ7iwurpz&#xA;LHPMjAwQ+kqRuPVT7XdT2OKpff8Anf8ANC2snih8oNdX9u9uZZkkYRTIzRmZIV4E8qOQGZgAvxE8&#xA;leNVU485+YvOtp5V1O88u6M0ur26WT6cJVM0dy08qC4QQRlbhfRjJrzVfHscVQl35687rdC3g8oX&#xA;AC3RjknkYsot47i3RpQI1ZSXhmkdQrmhXbnRuKqP8vebPN2pXPG/8rSaZb/V3kVnuOchmDNwi4mJ&#xA;EAKIKsX+0aUp8RVQfmfzl5z0iaG4tPLk+pWzafFcT6bbxu9xFdSXMcTxNcIXhbhHIzcYg5+BiaKV&#xA;OKrr7zN5+k060uLTQPq90mpBL20LtN6mnixe75pIY4uDtJwhPwGj1UV2OKoJfzG89rPLHP5Fuilo&#xA;JjcyQzO/q+nFEYxacoIxL6ksrL8RSiqTudgqq235g+cPrUUM3lO6kSdowtxEtwqIXM4owlgjcCkC&#xA;cWZQAXHqemN8VZHo+sa9qWmWMlzpEml3V5DO07O6SLayxsFi5IxikcSg81+AEAUficVYxZecfzIg&#xA;tktrjyvJqV8FV3uQ31OJuUMszKFKyhTWIQrV/tn4uAKc1Vx8+fmD66U8myC3BXkRNIzyVsTMQoMK&#xA;CMG6eOJGau3IuqEUCqfjUtWubCLUjoxs9R/Rc80dxOPWFvO3BvqzRRUuXEhRXoiVIWhAegxVhz/m&#xA;Z+YbabEbXylLdXcNzYW188bEgNKI5btPSQSvG0cMtCW+FWDAnkFVlUxP5i+cIrmytLrylJBPeOIA&#xA;xuCYvVaeaAem7RIXRfTjlaqqwiZmCnjuqnXmPXvNNraJJpukuJhqcdoYmT6y01mw+K4j9B+MQqa1&#xA;mIoFO3IqCqxa8/Nrzfp6afFe+TZfr1/cSwwWqTuZJI4SRzSP6vz5kKZGXjwVKVk5MoKqv5e/NDzr&#xA;q8rV8kXEEEU9pbXXK4IlheeJZJuSSQxV9IuE2Ox3couKp/5d81+atRt7l9R8rz2FzCti8VuJlYSC&#xA;7VWm4ySrbr/o3IhwaNVTtutVUu1TzV+Ylhrk8cHlv9JaSJZo7Z4XZJWCtahGfmnBAfVlCEMwY7t6&#xA;aIzYqt0r8x/MVx5l0XQtS8stYT6r6kk7i4aT6vAtp9aSQr6CEgORbyc+AEhopehoqhNC89fmZJpt&#xA;mmoeUZH1e4WMTgs9rbQSSSRx0d+FwxRUf1nZVqOXAIfTlKKp55F89Xvme91e3uNIfSxpbW6/vJPU&#xA;cvMjO8UlEVEki4qWVXanIBuLVUKsfu5fzu06CeOyiTVkjnlmiurprNZ2hW+ZEi4RfVIiGslD0PFi&#xA;x3kX7Kqp35Z1r8yb5kl1PSLOC1ks5JEcSSRE3SsUjQq3qSKknD1N0+FXAJ5KQyq3XLz8zoNUhn0n&#xA;T4ru2Nlbi5s2mhW3W6Nyv1j0pG9OeVvQZuJb00XjWjs3EKoVtX/N6WawgfQre3jlvrb67dwTwuIr&#xA;NLlvrVVlk5HnFwEZVSzLyYiNyqKqj/NA/MOSytrrSa215bXN4ZbG0ktZo7m2SCdrP1WvIoirSTRw&#xA;q6xutA7fF+0qrHNO8zfnnLLNHL5bslmgsobiW3mkVVN1NIQ0EVxHMUYRopIBQ1/akU7FVlN2/wCY&#xA;E3lqSO3hitdXksGKXPqRyTR3xeiqIin1dkCb8jJ12p3xVJptW/O2H4IND065NHDSPcBVMnq+ipQB&#xA;kKxcSJ9+T8eSbPTFV2pTfm81/p93YW8af6DBJd6YzWv1E3TLcm4hlmJa7VkP1dUeKqH4qjfZVrQb&#xA;r84n1BZNYs4UsbiSD1IEa39S3HrFpisiu3OMRfBxKl+hDdaqphrkv5ivf6I1tbmCx9a8GrxabJaT&#xA;ycQwFizNfrAPSZORmEY9QNQKSKnFWP6D5r/PS9e4N95VsbU2npRz2zyhHaVjC7+jIs80cg9GR/BV&#xA;NPjdgyYqnOrP+aVhrN++jxLq9hcM5s4757aKK3C2/NFT0VhmIeclKuzHZRQBjIqqr5d1T81J9VVd&#xA;e0awtdMLcCbeXnItUlPqFzI2weFBx9OtJQa/A1VUL5hm/N83sZ0i2tY7afT7ZbhRJFKLe+9SSS4a&#xA;FpVhaVfTRYhzUCrqwHwuMVS6DWfz4u7ix9bQrPTIzFILwiSCdOZugiP/AL0c1P1Yc1ReQ5H4mP2M&#xA;VT/y5efmTJdai2safbxQrdW8VhG00ag2gJFxOGh9ZnkpRgrqgJ2+HqVUklvfzyt769eHT7S9tLe5&#xA;vvqEbyQRm4t5bxfqnqFWX0zBa8uND8e3P4q4qrwa5+c312YS+XLf0GUiA+tbhAVE5TkBcNIPU/c+&#xA;ow5cDVVRx+8xVU1m4/NaV7KW1tJIFbSZnlgsWsDx1YbxJcm8Z6QkdPQLUatWKgEqoryxq35mT2l7&#xA;FqunWbX1iLWKIuXtkuJmVPrT+on1lQqfEycFPKqg8GDKqqE1O9/OdPMV+NLsLBtEnmhXTnuSsrQw&#xA;xBkuGlRJbZi0zcZI6O1F2NG2xV1vrf5yEpNN5ftRyMCtaCWIcV/cG4cyi4erVaZUAWlF5HeiOqls&#xA;+ufn/DfW8ieX7K6gaO0WeGN4I41eZQ103OS7MnKA1UUFG7VrVVWUeX738yWtpl1vT7A3Qmi9GSF2&#xA;t4jAbmSKX4Q963qLbxpMu4DeoE2KscVSC4vfzsttSmkh06C+063vrl4YA9sktxZSzlYI6s8YR4YY&#xA;ywPIcuaBt1fFV66z+dZkj9bQrZUlM6s1vJAfRQzIsLMklz+9f0kdqq6qOe6sV4sqyPyzceezY6dF&#xA;r1pam6BdNUukk9MlREGjkihQTqWaQ8HBkWlCw2IXFWKWN3+e8EOn6ZcWdrds+nrNqGvSC2WSO8Ky&#xA;u9ssUc6IzikcayCIIGPIhhUYqymC88+z6Lym0+3tdQkt78vxlUSRTpIVsAkf7+J/UjozlpQFPbsF&#xA;WGG8/wCcgo7sTmwgniisNrVXsxHLfQK8dXLOkgW5dRKArgIjBa8g2Ks08l6h56vIZpPNemW+muyR&#xA;yW8MDq5RmklR4ZGWWZXZUjjk5rQH1ONKqcVf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:B2C459DB2DD111DB8FA0D9E813ABF9F4</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B2C459DC2DD111DB8FA0D9E813ABF9F4</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:689F5CD560FF11DAADF381FD8E2ADCAC</stRef:instanceID>
            <stRef:documentID>uuid:689F5CD460FF11DAADF381FD8E2ADCAC</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -68.5728 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 68.5728 li318.079 68.5728 li318.079 0 licpclp[1 0 0 1 0 0 ] concatgsave % PSGState195.079 0 mo318.079 0 li318.079 44.8784 li195.079 44.8784 li195.079 0 licpclpgrestore % PSGState200.749 5.66992 mo229.099 5.66992 li229.099 34.0195 li200.749 34.0195 li200.749 5.66992 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0.23 0 0 0.79 cmykef214.46 12.5444 mo213.854 12.5444 li213.409 10.6245 212.733 10.3447 211.416 10.3447 cv207.376 10.3447 li207.376 15.1045 li210.473 15.1045 li211.576 15.1045 212.075 14.7847 212.075 13.1846 cv212.681 13.1846 li212.681 18.0039 li212.075 18.0039 li212.093 16.5449 211.559 16.1846 210.598 16.1846 cv207.376 16.1846 li207.376 20.0039 li207.376 21.625 207.749 22.084 209.085 22.084 cv209.778 22.084 li209.778 22.7246 li202.747 22.7246 li202.747 22.084 li203.229 22.084 li204.546 22.084 204.919 21.625 204.919 20.0039 cv204.919 11.9648 li204.919 10.3647 204.546 9.90479 203.229 9.90479 cv202.747 9.90479 li202.747 9.26465 li214.3 9.26465 li214.46 12.5444 licp0 0.18 0.28 0 cmykf226.6 12.4648 mo226.457 10.8647 225.799 10.3047 224.268 10.3047 cv222.612 10.3047 li222.612 20.0039 li222.612 21.625 222.95 22.084 224.321 22.084 cv224.677 22.084 li224.677 22.7246 li218.091 22.7246 li218.091 22.084 li218.536 22.084 li219.604 22.084 220.156 21.7051 220.156 20.0039 cv220.156 10.3047 li218.786 10.3047 li217.22 10.3047 216.4 10.6846 216.169 12.4648 cv215.599 12.4648 li215.671 9.26465 li227.099 9.26465 li227.169 12.4648 li226.6 12.4648 licpf234.573 28.6191 mo234.573 30.1816 li235.3 30.1816 li235.465 30.1816 235.586 30.1455 235.663 30.0723 cv235.739 30 235.79 29.8535 235.815 29.6348 cv235.925 29.6348 li235.925 30.9785 li235.815 30.9785 li235.813 30.8262 235.794 30.7129 235.756 30.6406 cv235.718 30.5693 235.665 30.5156 235.599 30.4785 cv235.531 30.4424 235.432 30.4238 235.3 30.4238 cv234.573 30.4238 li234.573 31.6738 li234.573 31.875 234.586 32.0078 234.611 32.0723 cv234.63 32.1211 234.671 32.1631 234.733 32.1973 cv234.818 32.2441 234.907 32.2676 235.001 32.2676 cv235.144 32.2676 li235.144 32.377 li233.44 32.377 li233.44 32.2676 li233.581 32.2676 li233.746 32.2676 233.866 32.2207 233.94 32.125 cv233.987 32.0625 234.011 31.9121 234.011 31.6738 cv234.011 29.1035 li234.011 28.9033 233.998 28.7705 233.973 28.7061 cv233.953 28.6572 233.913 28.6152 233.853 28.5801 cv233.768 28.5332 233.678 28.5098 233.581 28.5098 cv233.44 28.5098 li233.44 28.4004 li236.401 28.4004 li236.44 29.2754 li236.339 29.2754 li236.288 29.0898 236.228 28.9541 236.16 28.8672 cv236.092 28.7803 236.009 28.7168 235.909 28.6777 cv235.811 28.6387 235.657 28.6191 235.45 28.6191 cv234.573 28.6191 licptrue sop0 0 0 1 cmykf238.685 32.2676 mo238.685 32.377 li236.981 32.377 li236.981 32.2676 li237.123 32.2676 li237.288 32.2676 237.407 32.2207 237.481 32.125 cv237.528 32.0625 237.552 31.9121 237.552 31.6738 cv237.552 29.1035 li237.552 28.9033 237.54 28.7705 237.515 28.7061 cv237.495 28.6572 237.454 28.6152 237.394 28.5801 cv237.308 28.5332 237.218 28.5098 237.123 28.5098 cv236.981 28.5098 li236.981 28.4004 li238.685 28.4004 li238.685 28.5098 li238.542 28.5098 li238.38 28.5098 238.262 28.5586 238.188 28.6533 cv238.14 28.7158 238.114 28.8662 238.114 29.1035 cv238.114 31.6738 li238.114 31.875 238.128 32.0078 238.153 32.0723 cv238.173 32.1211 238.214 32.1631 238.276 32.1973 cv238.359 32.2441 238.448 32.2676 238.542 32.2676 cv238.685 32.2676 licpf238.903 28.4004 mo239.981 28.4004 li242.412 31.373 li242.412 29.0879 li242.412 28.8457 242.385 28.6934 242.329 28.6328 cv242.256 28.5508 242.14 28.5098 241.981 28.5098 cv241.842 28.5098 li241.842 28.4004 li243.24 28.4004 li243.24 28.5098 li243.098 28.5098 li242.927 28.5098 242.807 28.5605 242.735 28.6621 cv242.692 28.7246 242.67 28.8662 242.67 29.0879 cv242.67 32.4414 li242.564 32.4414 li239.943 29.2393 li239.943 31.6895 li239.943 31.9336 239.97 32.085 240.024 32.1455 cv240.099 32.2266 240.215 32.2676 240.371 32.2676 cv240.514 32.2676 li240.514 32.377 li239.115 32.377 li239.115 32.2676 li239.255 32.2676 li239.427 32.2676 239.55 32.2178 239.62 32.1162 cv239.664 32.0537 239.686 31.9121 239.686 31.6895 cv239.686 28.9238 li239.57 28.7891 239.483 28.7002 239.423 28.6572 cv239.364 28.6143 239.276 28.5742 239.161 28.5371 cv239.104 28.5195 239.019 28.5098 238.903 28.5098 cv238.903 28.4004 licpf246.14 30.8301 mo245.47 29.2246 li244.771 30.8301 li246.14 30.8301 licp246.231 31.0488 mo244.675 31.0488 li244.403 31.6738 li244.337 31.8281 244.304 31.9434 244.304 32.0195 cv244.304 32.0801 244.333 32.1328 244.39 32.1787 cv244.448 32.2246 244.572 32.2539 244.764 32.2676 cv244.764 32.377 li243.512 32.377 li243.512 32.2676 li243.678 32.2383 243.785 32.2002 243.834 32.1533 cv243.934 32.0586 244.044 31.8672 244.165 31.5781 cv245.586 28.3145 li245.681 28.3145 li247.067 31.6191 li247.179 31.8838 247.28 32.0566 247.37 32.1348 cv247.462 32.2139 247.588 32.2578 247.75 32.2676 cv247.75 32.377 li246.181 32.377 li246.181 32.2676 li246.339 32.2598 246.446 32.2344 246.502 32.1895 cv246.558 32.1445 246.585 32.0898 246.585 32.0254 cv246.585 31.9395 246.546 31.8027 246.468 31.6172 cv246.231 31.0488 licpf247.87 28.4004 mo248.948 28.4004 li251.378 31.373 li251.378 29.0879 li251.378 28.8457 251.351 28.6934 251.296 28.6328 cv251.222 28.5508 251.106 28.5098 250.948 28.5098 cv250.808 28.5098 li250.808 28.4004 li252.206 28.4004 li252.206 28.5098 li252.063 28.5098 li251.894 28.5098 251.772 28.5605 251.702 28.6621 cv251.657 28.7246 251.636 28.8662 251.636 29.0879 cv251.636 32.4414 li251.53 32.4414 li248.909 29.2393 li248.909 31.6895 li248.909 31.9336 248.937 32.085 248.989 32.1455 cv249.065 32.2266 249.181 32.2676 249.337 32.2676 cv249.479 32.2676 li249.479 32.377 li248.081 32.377 li248.081 32.2676 li248.222 32.2676 li248.394 32.2676 248.515 32.2178 248.587 32.1162 cv248.63 32.0537 248.651 31.9121 248.651 31.6895 cv248.651 28.9238 li248.536 28.7891 248.449 28.7002 248.39 28.6572 cv248.33 28.6143 248.243 28.5742 248.128 28.5371 cv248.071 28.5195 247.985 28.5098 247.87 28.5098 cv247.87 28.4004 licpf256.032 28.3145 mo256.126 29.666 li256.032 29.666 li255.911 29.2617 255.739 28.9707 255.517 28.793 cv255.294 28.6152 255.025 28.5254 254.713 28.5254 cv254.451 28.5254 254.214 28.5928 254.003 28.7266 cv253.791 28.8594 253.624 29.0723 253.503 29.3652 cv253.382 29.6582 253.321 30.0215 253.321 30.457 cv253.321 30.8154 253.378 31.127 253.493 31.3896 cv253.608 31.6523 253.78 31.8545 254.011 31.9951 cv254.242 32.1348 254.505 32.2051 254.801 32.2051 cv255.058 32.2051 255.284 32.1504 255.481 32.041 cv255.677 31.9307 255.894 31.7129 256.129 31.3848 cv256.22 31.4473 li256.021 31.7988 255.789 32.0566 255.524 32.2188 cv255.259 32.3818 254.944 32.4629 254.579 32.4629 cv253.923 32.4629 253.413 32.2197 253.053 31.7324 cv252.784 31.3691 252.649 30.9424 252.649 30.4512 cv252.649 30.0547 252.737 29.6914 252.915 29.3594 cv253.091 29.0273 253.334 28.7715 253.644 28.5879 cv253.954 28.4063 254.292 28.3145 254.659 28.3145 cv254.944 28.3145 255.226 28.3848 255.503 28.5244 cv255.585 28.5674 255.644 28.5879 255.679 28.5879 cv255.73 28.5879 255.776 28.5703 255.815 28.5332 cv255.866 28.4805 255.901 28.4082 255.923 28.3145 cv256.032 28.3145 licpf258.435 32.2676 mo258.435 32.377 li256.731 32.377 li256.731 32.2676 li256.872 32.2676 li257.036 32.2676 257.156 32.2207 257.231 32.125 cv257.278 32.0625 257.302 31.9121 257.302 31.6738 cv257.302 29.1035 li257.302 28.9033 257.288 28.7705 257.263 28.7061 cv257.243 28.6572 257.203 28.6152 257.143 28.5801 cv257.056 28.5332 256.966 28.5098 256.872 28.5098 cv256.731 28.5098 li256.731 28.4004 li258.435 28.4004 li258.435 28.5098 li258.291 28.5098 li258.129 28.5098 258.011 28.5586 257.937 28.6533 cv257.888 28.7158 257.864 28.8662 257.864 29.1035 cv257.864 31.6738 li257.864 31.875 257.876 32.0078 257.901 32.0723 cv257.921 32.1211 257.962 32.1631 258.024 32.1973 cv258.108 32.2441 258.197 32.2676 258.291 32.2676 cv258.435 32.2676 licpf261.405 30.8301 mo260.735 29.2246 li260.036 30.8301 li261.405 30.8301 licp261.497 31.0488 mo259.941 31.0488 li259.669 31.6738 li259.603 31.8281 259.569 31.9434 259.569 32.0195 cv259.569 32.0801 259.599 32.1328 259.656 32.1787 cv259.714 32.2246 259.839 32.2539 260.03 32.2676 cv260.03 32.377 li258.777 32.377 li258.777 32.2676 li258.943 32.2383 259.051 32.2002 259.1 32.1533 cv259.199 32.0586 259.31 31.8672 259.431 31.5781 cv260.853 28.3145 li260.946 28.3145 li262.333 31.6191 li262.444 31.8838 262.546 32.0566 262.637 32.1348 cv262.728 32.2139 262.854 32.2578 263.017 32.2676 cv263.017 32.377 li261.447 32.377 li261.447 32.2676 li261.605 32.2598 261.712 32.2344 261.769 32.1895 cv261.823 32.1445 261.852 32.0898 261.852 32.0254 cv261.852 31.9395 261.813 31.8027 261.734 31.6172 cv261.497 31.0488 licpf266.36 31.8223 mo266.259 31.9365 266.146 32.0156 266.022 32.0605 cv265.899 32.1055 265.685 32.127 265.378 32.127 cv265.087 32.127 li264.829 32.127 264.677 32.1172 264.628 32.0977 cv264.578 32.0781 264.542 32.0479 264.519 32.0068 cv264.487 31.9463 264.472 31.834 264.472 31.6719 cv264.472 29.166 li264.472 28.9326 264.487 28.7842 264.518 28.7227 cv264.548 28.6602 264.606 28.6094 264.69 28.5684 cv264.773 28.5273 264.919 28.5078 265.128 28.5098 cv265.128 28.4004 li263.339 28.4004 li263.339 28.5098 li263.487 28.5098 li263.638 28.5098 263.751 28.5527 263.827 28.6387 cv263.882 28.7012 263.909 28.8564 263.909 29.1035 cv263.909 31.6738 li263.909 31.8994 263.889 32.043 263.848 32.1055 cv263.775 32.2139 263.655 32.2676 263.487 32.2676 cv263.339 32.2676 li263.339 32.377 li266.417 32.377 li266.761 31.3047 li266.667 31.2832 li266.565 31.5293 266.463 31.709 266.36 31.8223 cvcpf272.147 28.4004 mo272.187 29.334 li272.075 29.334 li272.054 29.1699 272.024 29.0527 271.987 28.9824 cv271.928 28.8691 271.848 28.7852 271.747 28.7314 cv271.647 28.6777 271.516 28.6504 271.353 28.6504 cv270.796 28.6504 li270.796 31.6895 li270.796 31.9336 270.823 32.085 270.876 32.1455 cv270.952 32.2266 271.068 32.2676 271.226 32.2676 cv271.366 32.2676 li271.366 32.377 li269.663 32.377 li269.663 32.2676 li269.806 32.2676 li269.976 32.2676 270.097 32.2178 270.168 32.1162 cv270.212 32.0537 270.233 31.9121 270.233 31.6895 cv270.233 28.6504 li269.755 28.6504 li269.569 28.6504 269.438 28.6641 269.359 28.6914 cv269.258 28.7285 269.171 28.8008 269.099 28.9063 cv269.026 29.0117 268.983 29.1543 268.97 29.334 cv268.858 29.334 li268.897 28.4004 li272.147 28.4004 licpf274.345 32.2676 mo274.345 32.377 li272.642 32.377 li272.642 32.2676 li272.783 32.2676 li272.948 32.2676 273.067 32.2207 273.142 32.125 cv273.188 32.0625 273.212 31.9121 273.212 31.6738 cv273.212 29.1035 li273.212 28.9033 273.2 28.7705 273.175 28.7061 cv273.155 28.6572 273.114 28.6152 273.054 28.5801 cv272.968 28.5332 272.878 28.5098 272.783 28.5098 cv272.642 28.5098 li272.642 28.4004 li274.345 28.4004 li274.345 28.5098 li274.202 28.5098 li274.04 28.5098 273.922 28.5586 273.849 28.6533 cv273.8 28.7158 273.774 28.8662 273.774 29.1035 cv273.774 31.6738 li273.774 31.875 273.788 32.0078 273.813 32.0723 cv273.833 32.1211 273.874 32.1631 273.937 32.1973 cv274.02 32.2441 274.108 32.2676 274.202 32.2676 cv274.345 32.2676 licpf277.103 32.377 mo275.563 29.0313 li275.563 31.6895 li275.563 31.9336 275.591 32.085 275.644 32.1455 cv275.718 32.2266 275.833 32.2676 275.991 32.2676 cv276.134 32.2676 li276.134 32.377 li274.735 32.377 li274.735 32.2676 li274.878 32.2676 li275.048 32.2676 275.169 32.2178 275.241 32.1162 cv275.284 32.0537 275.306 31.9121 275.306 31.6895 cv275.306 29.0879 li275.306 28.9131 275.286 28.7871 275.247 28.709 cv275.219 28.6523 275.167 28.6055 275.093 28.5674 cv275.019 28.5293 274.899 28.5098 274.735 28.5098 cv274.735 28.4004 li275.884 28.4004 li277.316 31.498 li278.733 28.4004 li279.86 28.4004 li279.86 28.5098 li279.721 28.5098 li279.548 28.5098 279.427 28.5605 279.355 28.6621 cv279.312 28.7246 279.29 28.8662 279.29 29.0879 cv279.29 31.6895 li279.29 31.9336 279.317 32.085 279.374 32.1455 cv279.446 32.2266 279.563 32.2676 279.721 32.2676 cv279.86 32.2676 li279.86 32.377 li278.157 32.377 li278.157 32.2676 li278.3 32.2676 li278.472 32.2676 278.593 32.2178 278.663 32.1162 cv278.706 32.0537 278.728 31.9121 278.728 31.6895 cv278.728 29.0313 li277.196 32.377 li277.103 32.377 licpf281.385 28.6191 mo281.385 30.1816 li282.244 30.1816 li282.471 30.1816 282.622 30.1484 282.698 30.0811 cv282.8 29.9922 282.857 29.8359 282.869 29.6113 cv282.979 29.6113 li282.979 30.9941 li282.869 30.9941 li282.841 30.8008 282.813 30.6758 282.786 30.6211 cv282.751 30.5527 282.694 30.499 282.614 30.46 cv282.533 30.4199 282.41 30.4004 282.244 30.4004 cv281.385 30.4004 li281.385 31.7129 li281.385 31.8887 281.392 31.9961 281.407 32.0342 cv281.423 32.0723 281.45 32.1025 281.489 32.125 cv281.528 32.1475 281.602 32.1582 281.71 32.1582 cv282.38 32.1582 li282.603 32.1582 282.765 32.1426 282.864 32.1113 cv282.966 32.0801 283.063 32.0186 283.155 31.9268 cv283.276 31.8047 283.399 31.6221 283.525 31.377 cv283.65 31.377 li283.309 32.377 li280.252 32.377 li280.252 32.2676 li280.394 32.2676 li280.487 32.2676 280.576 32.2461 280.66 32.2002 cv280.724 32.1689 280.766 32.1221 280.788 32.0596 cv280.811 31.9961 280.822 31.8682 280.822 31.6738 cv280.822 29.0957 li280.822 28.8428 280.796 28.6875 280.745 28.6279 cv280.675 28.5498 280.558 28.5098 280.394 28.5098 cv280.252 28.5098 li280.252 28.4004 li283.314 28.4004 li283.354 29.2754 li283.236 29.2754 li283.195 29.0664 283.149 28.9219 283.101 28.8438 cv283.051 28.7646 282.978 28.7051 282.88 28.6641 cv282.803 28.6348 282.665 28.6191 282.47 28.6191 cv281.385 28.6191 licpf286.685 28.3145 mo286.685 29.6895 li286.575 29.6895 li286.54 29.4258 286.477 29.2158 286.386 29.0596 cv286.296 28.9033 286.167 28.7793 285.999 28.6875 cv285.831 28.5957 285.658 28.5488 285.479 28.5488 cv285.276 28.5488 285.108 28.6113 284.977 28.7354 cv284.844 28.8594 284.778 29 284.778 29.1582 cv284.778 29.2793 284.819 29.3887 284.903 29.4883 cv285.024 29.6348 285.312 29.8301 285.766 30.0742 cv286.136 30.2734 286.39 30.4258 286.524 30.5322 cv286.661 30.6387 286.767 30.7637 286.839 30.9082 cv286.913 31.0518 286.95 31.2031 286.95 31.3613 cv286.95 31.6611 286.833 31.9199 286.6 32.1367 cv286.366 32.3545 286.065 32.4629 285.699 32.4629 cv285.584 32.4629 285.476 32.4551 285.374 32.4375 cv285.313 32.4277 285.188 32.3906 284.997 32.3301 cv284.808 32.2676 284.687 32.2363 284.636 32.2363 cv284.587 32.2363 284.549 32.252 284.521 32.2813 cv284.492 32.3105 284.472 32.3711 284.458 32.4629 cv284.349 32.4629 li284.349 31.1035 li284.458 31.1035 li284.509 31.3887 284.576 31.6016 284.662 31.7441 cv284.748 31.8848 284.879 32.0029 285.056 32.0957 cv285.231 32.1895 285.426 32.2363 285.636 32.2363 cv285.88 32.2363 286.073 32.1719 286.214 32.043 cv286.355 31.9141 286.427 31.7617 286.427 31.585 cv286.427 31.4873 286.399 31.3887 286.347 31.2891 cv286.293 31.1885 286.21 31.0957 286.098 31.0098 cv286.022 30.9512 285.813 30.8271 285.474 30.6387 cv285.134 30.4502 284.893 30.2988 284.749 30.1855 cv284.604 30.0723 284.495 29.9473 284.421 29.8105 cv284.347 29.6748 284.31 29.5244 284.31 29.3604 cv284.31 29.0752 284.419 28.8301 284.637 28.624 cv284.855 28.418 285.134 28.3145 285.472 28.3145 cv285.682 28.3145 285.905 28.3662 286.142 28.4688 cv286.251 28.5176 286.327 28.541 286.372 28.541 cv286.423 28.541 286.465 28.5264 286.497 28.4961 cv286.529 28.4668 286.556 28.4063 286.575 28.3145 cv286.685 28.3145 licpf236.425 16.6709 mo236.683 16.7197 236.912 16.7559 237.112 16.7813 cv237.312 16.8047 237.482 16.8174 237.624 16.8174 cv238.13 16.8174 238.567 16.6211 238.936 16.2266 cv239.304 15.8335 239.487 15.3242 239.487 14.6982 cv239.487 14.2676 239.399 13.8682 239.224 13.499 cv239.049 13.1299 238.8 12.854 238.479 12.6709 cv238.157 12.4873 237.792 12.3955 237.382 12.3955 cv237.134 12.3955 236.814 12.4424 236.425 12.5352 cv236.425 16.6709 licp236.425 17.084 mo236.425 19.9736 li236.425 20.6045 236.493 20.9961 236.629 21.1484 cv236.813 21.3652 237.093 21.4736 237.468 21.4736 cv237.847 21.4736 li237.847 21.7393 li233.597 21.7393 li233.597 21.4736 li233.971 21.4736 li234.391 21.4736 234.691 21.3359 234.872 21.0596 cv234.97 20.9072 235.019 20.5449 235.019 19.9736 cv235.019 13.5674 li235.019 12.937 234.952 12.5454 234.82 12.3926 cv234.63 12.1758 234.347 12.0674 233.971 12.0674 cv233.597 12.0674 li233.597 11.8018 li237.235 11.8018 li238.123 11.8018 238.823 11.8936 239.336 12.0762 cv239.849 12.2598 240.28 12.5684 240.632 13.0029 cv240.983 13.4375 241.159 13.9521 241.159 14.5479 cv241.159 15.3584 240.892 16.0171 240.358 16.5244 cv239.823 17.0322 239.069 17.2861 238.093 17.2861 cv237.854 17.2861 237.596 17.2695 237.317 17.2354 cv237.039 17.2021 236.741 17.1514 236.425 17.084 cvcpf244.126 14.833 mo244.126 16.3477 li244.688 15.3379 245.263 14.833 245.854 14.833 cv246.122 14.833 246.344 14.915 246.52 15.0791 cv246.694 15.2437 246.782 15.4336 246.782 15.6494 cv246.782 15.8408 246.72 16.002 246.593 16.1348 cv246.466 16.2666 246.314 16.333 246.14 16.333 cv245.969 16.333 245.777 16.2471 245.565 16.0752 cv245.353 15.9033 245.195 15.8174 245.093 15.8174 cv245.005 15.8174 244.91 15.8667 244.808 15.9648 cv244.588 16.167 244.36 16.499 244.126 16.9619 cv244.126 20.1768 li244.126 20.5469 244.173 20.8262 244.266 21.0156 cv244.329 21.1465 244.441 21.2559 244.603 21.3438 cv244.764 21.4297 244.995 21.4736 245.298 21.4736 cv245.298 21.7393 li241.845 21.7393 li241.845 21.4736 li242.189 21.4736 242.445 21.4199 242.612 21.3115 cv242.735 21.2334 242.821 21.1084 242.871 20.9365 cv242.896 20.8535 242.907 20.6152 242.907 20.2236 cv242.907 17.6299 li242.907 16.8467 242.892 16.3799 242.86 16.2305 cv242.828 16.0811 242.771 15.9727 242.685 15.9043 cv242.6 15.8359 242.493 15.8013 242.367 15.8013 cv242.216 15.8013 242.046 15.8379 241.855 15.9111 cv241.782 15.6455 li243.817 14.833 li244.126 14.833 licpf248.294 17.1299 mo251.388 17.1299 li251.362 16.7012 251.312 16.4004 251.233 16.2246 cv251.112 15.9521 250.931 15.7383 250.69 15.582 cv250.449 15.4268 250.198 15.3486 249.936 15.3486 cv249.531 15.3486 249.17 15.5059 248.852 15.8193 cv248.533 16.1338 248.347 16.5703 248.294 17.1299 cvcp248.294 17.5518 mo248.288 18.5508 248.529 19.335 249.016 19.9023 cv249.502 20.4707 250.073 20.7549 250.729 20.7549 cv251.167 20.7549 251.548 20.6348 251.871 20.3945 cv252.194 20.1553 252.466 19.7383 252.685 19.1455 cv252.919 19.293 li252.815 19.9668 252.519 20.5762 252.025 21.123 cv251.532 21.6689 250.915 21.9424 250.174 21.9424 cv249.369 21.9424 248.68 21.6289 248.106 21.0029 cv247.533 20.376 247.247 19.5332 247.247 18.4756 cv247.247 17.3301 247.54 16.4355 248.128 15.7949 cv248.716 15.1538 249.454 14.833 250.343 14.833 cv251.094 14.833 251.711 15.0801 252.194 15.5732 cv252.677 16.0664 252.919 16.7256 252.919 17.5518 cv248.294 17.5518 licpf255.779 16.2441 mo256.563 15.3037 257.309 14.833 258.019 14.833 cv258.384 14.833 258.697 14.9248 258.96 15.1074 cv259.223 15.291 259.432 15.5923 259.588 16.0122 cv259.694 16.3047 259.748 16.7539 259.748 17.3594 cv259.748 20.2236 li259.748 20.6475 259.782 20.9355 259.851 21.0859 cv259.905 21.208 259.992 21.3027 260.112 21.3711 cv260.233 21.4395 260.455 21.4736 260.779 21.4736 cv260.779 21.7393 li257.451 21.7393 li257.451 21.4736 li257.59 21.4736 li257.9 21.4736 258.118 21.4258 258.241 21.3311 cv258.365 21.2363 258.451 21.0957 258.5 20.9111 cv258.52 20.8379 258.529 20.6084 258.529 20.2236 cv258.529 17.4707 li258.529 16.8594 258.45 16.415 258.294 16.1387 cv258.136 15.8623 257.871 15.7236 257.499 15.7236 cv256.923 15.7236 256.351 16.0415 255.779 16.6777 cv255.779 20.2236 li255.779 20.6768 255.806 20.957 255.86 21.0645 cv255.929 21.2061 256.022 21.3096 256.143 21.375 cv256.263 21.4414 256.506 21.4736 256.873 21.4736 cv256.873 21.7393 li253.545 21.7393 li253.545 21.4736 li253.691 21.4736 li254.032 21.4736 254.263 21.3867 254.382 21.2139 cv254.501 21.041 254.561 20.7109 254.561 20.2236 cv254.561 17.7236 li254.561 16.9199 254.542 16.4297 254.506 16.2549 cv254.469 16.0791 254.413 15.96 254.338 15.8965 cv254.263 15.833 254.161 15.8013 254.034 15.8013 cv253.898 15.8013 253.735 15.8379 253.545 15.9111 cv253.436 15.6455 li255.464 14.833 li255.779 14.833 li255.779 16.2441 licpf263.264 12.8174 mo263.264 15.0205 li264.831 15.0205 li264.831 15.5205 li263.264 15.5361 li263.264 19.8965 li263.264 20.332 263.326 20.626 263.452 20.7773 cv263.577 20.9297 263.739 21.0049 263.937 21.0049 cv264.099 21.0049 264.256 20.9551 264.409 20.8545 cv264.562 20.7549 264.68 20.6064 264.764 20.4111 cv265.045 20.4111 li264.873 20.8877 264.63 21.2471 264.315 21.4873 cv264.001 21.7285 263.677 21.8486 263.343 21.8486 cv263.116 21.8486 262.896 21.7861 262.679 21.6611 cv262.462 21.5361 262.303 21.3574 262.2 21.125 cv262.097 20.8926 262.045 20.5332 262.045 20.0479 cv262.045 15.5205 li260.982 15.5205 li260.982 15.2852 li261.251 15.1787 261.526 14.998 261.807 14.7432 cv262.088 14.4893 262.339 14.1865 262.56 13.835 cv262.672 13.6494 262.828 13.3105 263.029 12.8174 cv263.264 12.8174 licpf267.177 11.3174 mo267.382 11.3174 267.556 11.3896 267.7 11.5332 cv267.844 11.6768 267.915 11.8516 267.915 12.0557 cv267.915 12.2607 267.844 12.4365 267.7 12.5825 cv267.556 12.7285 267.382 12.8018 267.177 12.8018 cv266.972 12.8018 266.797 12.7285 266.65 12.5825 cv266.504 12.4365 266.431 12.2607 266.431 12.0557 cv266.431 11.8516 266.503 11.6768 266.646 11.5332 cv266.79 11.3896 266.968 11.3174 267.177 11.3174 cvcp267.79 14.833 mo267.79 20.2236 li267.79 20.6426 267.821 20.9219 267.882 21.0605 cv267.942 21.1992 268.032 21.3027 268.152 21.3711 cv268.271 21.4395 268.489 21.4736 268.806 21.4736 cv268.806 21.7393 li265.54 21.7393 li265.54 21.4736 li265.869 21.4736 266.091 21.4424 266.203 21.3789 cv266.316 21.3154 266.405 21.2109 266.472 21.0645 cv266.538 20.918 266.571 20.6377 266.571 20.2236 cv266.571 17.6299 li266.571 16.9033 266.55 16.4326 266.506 16.2188 cv266.472 16.0625 266.418 15.9541 266.345 15.8926 cv266.272 15.832 266.173 15.8013 266.046 15.8013 cv265.909 15.8013 265.744 15.8379 265.549 15.9111 cv265.446 15.6455 li267.468 14.833 li267.79 14.833 licpf275.349 19.1855 mo275.168 20.0762 274.813 20.7578 274.286 21.2314 cv273.759 21.7051 273.175 21.9424 272.535 21.9424 cv271.772 21.9424 271.108 21.623 270.542 20.9834 cv269.976 20.3438 269.692 19.4805 269.692 18.3916 cv269.692 17.3369 270.007 16.4805 270.634 15.8213 cv271.263 15.1626 272.017 14.833 272.896 14.833 cv273.556 14.833 274.098 15.0078 274.523 15.3569 cv274.948 15.7061 275.161 16.0684 275.161 16.4443 cv275.161 16.6309 275.101 16.7803 274.981 16.8955 cv274.862 17.0098 274.694 17.0674 274.479 17.0674 cv274.19 17.0674 273.976 16.9736 273.835 16.7852 cv273.746 16.6816 273.688 16.4844 273.662 16.1924 cv273.635 15.9004 273.536 15.6777 273.365 15.5244 cv273.194 15.376 272.957 15.3018 272.654 15.3018 cv272.165 15.3018 271.771 15.4834 271.474 15.8457 cv271.077 16.3262 270.88 16.9609 270.88 17.75 cv270.88 18.5547 271.076 19.2637 271.469 19.8789 cv271.861 20.4941 272.392 20.8018 273.06 20.8018 cv273.538 20.8018 273.967 20.6406 274.347 20.3174 cv274.615 20.0918 274.876 19.6807 275.13 19.083 cv275.349 19.1855 licpf277.444 17.1299 mo280.538 17.1299 li280.513 16.7012 280.462 16.4004 280.384 16.2246 cv280.263 15.9521 280.081 15.7383 279.841 15.582 cv279.6 15.4268 279.349 15.3486 279.086 15.3486 cv278.682 15.3486 278.32 15.5059 278.002 15.8193 cv277.684 16.1338 277.497 16.5703 277.444 17.1299 cvcp277.444 17.5518 mo277.438 18.5508 277.68 19.335 278.166 19.9023 cv278.652 20.4707 279.224 20.7549 279.88 20.7549 cv280.317 20.7549 280.698 20.6348 281.021 20.3945 cv281.345 20.1553 281.616 19.7383 281.835 19.1455 cv282.069 19.293 li281.966 19.9668 281.669 20.5762 281.176 21.123 cv280.683 21.6689 280.065 21.9424 279.324 21.9424 cv278.52 21.9424 277.83 21.6289 277.257 21.0029 cv276.684 20.376 276.397 19.5332 276.397 18.4756 cv276.397 17.3301 276.69 16.4355 277.278 15.7949 cv277.866 15.1538 278.604 14.833 279.493 14.833 cv280.244 14.833 280.861 15.0801 281.345 15.5732 cv281.827 16.0664 282.069 16.7256 282.069 17.5518 cv277.444 17.5518 licpf289.694 16.4111 mo294.304 16.4111 li294.304 13.5674 li294.304 13.0576 294.272 12.7217 294.208 12.5601 cv294.159 12.4375 294.057 12.332 293.9 12.2441 cv293.69 12.126 293.468 12.0674 293.233 12.0674 cv292.882 12.0674 li292.882 11.8018 li297.132 11.8018 li297.132 12.0674 li296.78 12.0674 li296.546 12.0674 296.323 12.124 296.113 12.2363 cv295.956 12.3154 295.851 12.4341 295.794 12.5933 cv295.738 12.7524 295.71 13.0771 295.71 13.5674 cv295.71 19.9736 li295.71 20.4805 295.741 20.8164 295.806 20.9785 cv295.854 21.1016 295.954 21.208 296.105 21.2969 cv296.32 21.4141 296.546 21.4736 296.78 21.4736 cv297.132 21.4736 li297.132 21.7393 li292.882 21.7393 li292.882 21.4736 li293.233 21.4736 li293.64 21.4736 293.935 21.3535 294.12 21.1113 cv294.242 20.9541 294.304 20.5742 294.304 19.9736 cv294.304 16.958 li289.694 16.958 li289.694 19.9736 li289.694 20.4805 289.726 20.8164 289.789 20.9785 cv289.838 21.1016 289.939 21.208 290.096 21.2969 cv290.305 21.4141 290.525 21.4736 290.759 21.4736 cv291.116 21.4736 li291.116 21.7393 li286.866 21.7393 li286.866 21.4736 li287.218 21.4736 li287.628 21.4736 287.927 21.3535 288.112 21.1113 cv288.229 20.9541 288.288 20.5742 288.288 19.9736 cv288.288 13.5674 li288.288 13.0576 288.257 12.7217 288.192 12.5601 cv288.144 12.4375 288.044 12.332 287.893 12.2441 cv287.677 12.126 287.452 12.0674 287.218 12.0674 cv286.866 12.0674 li286.866 11.8018 li291.116 11.8018 li291.116 12.0674 li290.759 12.0674 li290.525 12.0674 290.305 12.124 290.096 12.2363 cv289.944 12.3154 289.84 12.4341 289.782 12.5933 cv289.724 12.7524 289.694 13.0771 289.694 13.5674 cv289.694 16.4111 licpf301.698 20.3018 mo301.698 17.7393 li300.958 18.0332 300.48 18.2412 300.265 18.3633 cv299.877 18.5791 299.6 18.8047 299.433 19.0391 cv299.267 19.2734 299.183 19.5313 299.183 19.8096 cv299.183 20.1621 299.288 20.4551 299.499 20.6875 cv299.71 20.9199 299.953 21.0361 300.228 21.0361 cv300.601 21.0361 301.091 20.791 301.698 20.3018 cvcp301.698 20.7793 mo301.011 21.3086 300.578 21.6152 300.402 21.6973 cv300.139 21.8193 299.858 21.8799 299.561 21.8799 cv299.097 21.8799 298.715 21.7207 298.415 21.4033 cv298.114 21.085 297.964 20.667 297.964 20.1484 cv297.964 19.8203 298.038 19.5371 298.185 19.2969 cv298.384 18.9648 298.731 18.6514 299.228 18.3574 cv299.723 18.0645 300.547 17.707 301.698 17.2861 cv301.698 17.0244 li301.698 16.3604 301.593 15.9043 301.381 15.6572 cv301.169 15.4102 300.861 15.2861 300.458 15.2861 cv300.15 15.2861 299.907 15.3687 299.728 15.5337 cv299.542 15.6992 299.45 15.8887 299.45 16.1016 cv299.464 16.5244 li299.464 16.748 299.406 16.9199 299.29 17.041 cv299.175 17.1631 299.022 17.2236 298.836 17.2236 cv298.653 17.2236 298.504 17.1602 298.388 17.0332 cv298.272 16.9072 298.214 16.7344 298.214 16.5146 cv298.214 16.0957 298.429 15.7104 298.858 15.3594 cv299.288 15.0088 299.892 14.833 300.668 14.833 cv301.264 14.833 301.752 14.9336 302.133 15.1338 cv302.421 15.2852 302.634 15.5225 302.771 15.8452 cv302.858 16.0557 302.901 16.4863 302.901 17.1367 cv302.901 19.418 li302.901 20.0586 302.914 20.4512 302.938 20.5947 cv302.963 20.7393 303.004 20.8359 303.06 20.8848 cv303.116 20.9336 303.182 20.958 303.255 20.958 cv303.334 20.958 303.402 20.9404 303.462 20.9063 cv303.564 20.8418 303.764 20.6611 304.058 20.3643 cv304.058 20.7793 li303.511 21.5137 302.988 21.8799 302.49 21.8799 cv302.251 21.8799 302.06 21.7969 301.919 21.6309 cv301.776 21.4639 301.704 21.1807 301.698 20.7793 cvcpf306.888 11.3174 mo306.888 20.2236 li306.888 20.6426 306.918 20.9209 306.979 21.0566 cv307.039 21.1934 307.133 21.2969 307.259 21.3672 cv307.386 21.4385 307.621 21.4736 307.966 21.4736 cv307.966 21.7393 li304.669 21.7393 li304.669 21.4736 li304.979 21.4736 305.192 21.4424 305.306 21.3789 cv305.419 21.3154 305.509 21.2109 305.572 21.0645 cv305.637 20.918 305.669 20.6377 305.669 20.2236 cv305.669 14.1143 li305.669 13.3618 305.651 12.8994 305.618 12.7266 cv305.583 12.5547 305.528 12.4365 305.454 12.373 cv305.378 12.3101 305.282 12.2783 305.165 12.2783 cv305.039 12.2783 304.878 12.3174 304.684 12.3955 cv304.56 12.1299 li306.559 11.3174 li306.888 11.3174 licpf311.056 11.3174 mo311.056 20.2236 li311.056 20.6426 311.085 20.9209 311.146 21.0566 cv311.207 21.1934 311.3 21.2969 311.427 21.3672 cv311.553 21.4385 311.788 21.4736 312.134 21.4736 cv312.134 21.7393 li308.837 21.7393 li308.837 21.4736 li309.147 21.4736 309.359 21.4424 309.474 21.3789 cv309.587 21.3154 309.676 21.2109 309.74 21.0645 cv309.804 20.918 309.837 20.6377 309.837 20.2236 cv309.837 14.1143 li309.837 13.3618 309.819 12.8994 309.785 12.7266 cv309.751 12.5547 309.696 12.4365 309.621 12.373 cv309.546 12.3101 309.449 12.2783 309.333 12.2783 cv309.206 12.2783 309.046 12.3174 308.851 12.3955 cv308.728 12.1299 li310.726 11.3174 li311.056 11.3174 licpf0.5 lw0 lc0 lj10 ml[] 0 dshtrue sadj233.349 25.5098 mo312.719 25.5098 li@201.883 47.7915 mo201.806 47.2153 201.722 46.436 201.691 45.9077 cv201.679 45.9077 li201.386 46.52 201.044 47.2153 200.745 47.7915 cv201.883 47.7915 licp199.882 49.4478 mo199.349 49.4478 li201.667 45.2476 li202.038 45.2476 li202.644 49.4478 li202.087 49.4478 li201.931 48.2056 li200.517 48.2056 li199.882 49.4478 licpf203.985 47.1685 mo203.997 47.1802 li204.249 46.8315 204.626 46.3755 205.351 46.3755 cv205.692 46.3755 205.998 46.6216 205.998 46.9878 cv205.998 47.1978 205.962 47.354 205.92 47.5513 cv205.542 49.4478 li205.058 49.4478 li205.435 47.6177 li205.465 47.4976 205.495 47.2876 205.495 47.1431 cv205.495 46.9224 205.362 46.772 205.075 46.772 cv204.585 46.772 203.938 47.4917 203.794 48.2954 cv203.584 49.4478 li203.104 49.4478 li203.668 46.4478 li204.136 46.4478 li203.985 47.1685 licpf208.765 45.5415 mo208.765 45.3071 208.957 45.1392 209.143 45.1392 cv209.341 45.1392 209.4 45.3071 209.4 45.3979 cv209.4 45.5776 209.257 45.8237 209.017 45.8237 cv208.777 45.8237 208.765 45.6196 208.765 45.5415 cvcp209.148 46.4478 mo208.585 49.4478 li208.101 49.4478 li208.663 46.4478 li209.148 46.4478 licpf210.329 47.1431 mo210.341 47.1558 li210.556 46.8013 211.011 46.3755 211.538 46.3755 cv212.036 46.3755 212.167 46.6997 212.132 47.1431 cv212.144 47.1558 li212.306 46.8384 212.809 46.3755 213.264 46.3755 cv213.887 46.3755 214.066 46.6763 213.874 47.7192 cv213.558 49.4478 li213.078 49.4478 li213.396 47.7251 li213.515 47.0591 213.515 46.772 213.138 46.772 cv212.839 46.772 212.149 47.1978 211.94 48.356 cv211.742 49.4478 li211.263 49.4478 li211.581 47.7251 li211.7 47.0591 211.7 46.772 211.323 46.772 cv211.023 46.772 210.335 47.1978 210.125 48.356 cv209.927 49.4478 li209.448 49.4478 li210.011 46.4478 li210.479 46.4478 li210.329 47.1431 licpf215.678 49.1597 mo216.062 49.1597 216.731 48.5356 216.731 47.4917 cv216.731 47.2036 216.636 46.7837 216.181 46.7837 cv215.726 46.7837 215.103 47.4438 214.935 48.8237 cv215.108 49.1118 215.384 49.1597 215.678 49.1597 cvcp215.246 47.0962 mo215.259 47.1079 li215.498 46.7231 215.911 46.3755 216.384 46.3755 cv217.013 46.3755 217.247 46.9282 217.247 47.5278 cv217.247 48.3198 216.647 49.52 215.605 49.52 cv215.324 49.52 215.048 49.4116 214.851 49.2075 cv214.533 50.9478 li214.048 50.9478 li214.887 46.4478 li215.372 46.4478 li215.246 47.0962 licpf218.636 46.4478 mo218.163 46.4478 li217.601 49.4478 li218.085 49.4478 li218.337 48.1216 li218.511 47.2153 218.828 46.856 219.163 46.856 cv219.325 46.856 219.438 46.8911 219.487 46.9155 cv219.739 46.5796 li219.631 46.4839 219.511 46.3755 219.349 46.3755 cv219.008 46.3755 218.841 46.5796 218.54 46.9517 cv218.528 46.9399 li218.636 46.4478 licpf220.511 45.8237 mo220.751 45.8237 220.895 45.5776 220.895 45.3979 cv220.895 45.3071 220.835 45.1392 220.638 45.1392 cv220.451 45.1392 220.26 45.3071 220.26 45.5415 cv220.26 45.6196 220.271 45.8237 220.511 45.8237 cvcp220.157 46.4478 mo219.595 49.4478 li220.08 49.4478 li220.644 46.4478 li220.157 46.4478 licpf221.823 47.1685 mo221.835 47.1802 li222.087 46.8315 222.464 46.3755 223.188 46.3755 cv223.53 46.3755 223.835 46.6216 223.835 46.9878 cv223.835 47.1978 223.8 47.354 223.758 47.5513 cv223.38 49.4478 li222.896 49.4478 li223.272 47.6177 li223.303 47.4976 223.333 47.2876 223.333 47.1431 cv223.333 46.9224 223.2 46.772 222.913 46.772 cv222.422 46.772 221.774 47.4917 221.632 48.2954 cv221.422 49.4478 li220.942 49.4478 li221.505 46.4478 li221.973 46.4478 li221.823 47.1685 licpf225.723 49.3755 mo225.519 49.4595 225.304 49.52 225.118 49.52 cv224.578 49.52 224.398 49.1411 224.513 48.5718 cv224.86 46.7661 li224.482 46.7661 li224.548 46.4478 li224.926 46.4478 li225.058 45.7271 li225.579 45.5474 li225.411 46.4478 li226.118 46.4478 li226.052 46.7661 li225.345 46.7661 li224.991 48.6255 li224.926 48.9673 224.997 49.1597 225.226 49.1597 cv225.388 49.1597 225.555 49.1118 225.675 49.0757 cv225.723 49.3755 licpf228.472 48.1997 mo228.472 48.4517 228.556 49.1597 229.185 49.1597 cv229.771 49.1597 230.173 48.4517 230.173 47.6958 cv230.173 47.479 230.149 46.7358 229.526 46.7358 cv228.854 46.7358 228.472 47.479 228.472 48.1997 cvcp230.688 47.6841 mo230.688 48.6313 230.06 49.52 229.173 49.52 cv228.31 49.52 227.956 48.7876 227.956 48.1997 cv227.956 47.311 228.562 46.3755 229.573 46.3755 cv230.179 46.3755 230.688 46.8911 230.688 47.6841 cvcpf231.095 49.4478 mo231.599 46.7661 li231.167 46.7661 li231.228 46.4478 li231.658 46.4478 li231.724 46.0815 li231.874 45.2358 232.347 45.0376 232.706 45.0376 cv232.851 45.0376 233.006 45.0923 233.103 45.1636 cv232.946 45.4399 li232.874 45.4155 232.802 45.3979 232.694 45.3979 cv232.61 45.3979 232.335 45.4224 232.245 45.9077 cv232.144 46.4478 li232.79 46.4478 li232.73 46.7661 li232.083 46.7661 li231.581 49.4478 li231.095 49.4478 licpf237.108 46.145 mo237.396 46.1538 237.685 46.1626 237.972 46.1626 cv239.005 46.1626 239.634 45.8931 239.634 44.7407 cv239.634 43.8589 239.247 43.4087 238.358 43.3726 cv238.16 43.354 237.954 43.354 237.756 43.354 cv237.612 43.354 237.46 43.354 237.325 43.3999 cv237.288 43.4087 237.253 43.4175 237.217 43.436 cv237.108 43.5083 237.118 43.6519 237.108 43.7681 cv237.108 46.145 licp235.132 49.4478 mo235.132 49.0435 li235.42 49.0435 li235.645 49.0435 236.058 49.0698 236.103 48.7817 cv236.112 48.6919 236.12 48.6021 236.13 48.5122 cv236.13 43.8501 li236.13 43.7603 236.139 43.6704 236.112 43.5884 cv235.985 43.2739 235.401 43.3911 235.132 43.354 cv235.132 42.9497 li238.403 42.9497 li238.771 42.9673 239.14 42.9946 239.49 43.1021 cv240.263 43.3276 240.712 43.9487 240.712 44.7495 cv240.712 45.2271 240.541 45.6411 240.2 45.9829 cv239.886 46.3071 239.499 46.4321 239.067 46.5142 cv238.897 46.5405 238.718 46.5493 238.538 46.5591 cv238.394 46.5591 238.241 46.5679 238.097 46.5679 cv237.765 46.5679 237.441 46.5493 237.108 46.5493 cv237.108 48.3403 li237.108 48.5122 237.108 48.7729 237.19 48.9165 cv237.217 48.9614 237.28 48.979 237.325 49.0063 cv237.505 49.0435 237.692 49.0337 237.872 49.0435 cv238.16 49.0435 li238.16 49.4478 li235.132 49.4478 licpf243.301 47.0532 mo243.615 47.0532 243.769 47.0806 243.769 46.7212 cv243.769 46.1353 243.525 45.4966 242.843 45.4966 cv242.043 45.4966 241.837 46.4146 241.792 47.0532 cv243.301 47.0532 licp241.773 47.4224 mo241.737 48.2505 242.097 49.1235 243.05 49.1235 cv243.57 49.1235 243.911 48.9165 244.218 48.5024 cv244.253 48.4399 244.298 48.3774 244.325 48.314 cv244.36 48.2681 244.388 48.2153 244.415 48.1606 cv244.721 48.3315 li244.353 49.1411 243.795 49.5825 242.896 49.5825 cv242.313 49.5825 241.773 49.4028 241.378 48.9614 cv240.965 48.5024 240.856 48.0347 240.856 47.4224 cv240.856 46.2349 241.62 45.1372 242.87 45.1372 cv243.534 45.1372 244.038 45.4878 244.37 46.0454 cv244.55 46.3423 244.604 46.6938 244.666 47.0356 cv244.693 47.1616 244.703 47.2876 244.711 47.4224 cv241.773 47.4224 licpf246.311 48.4302 mo246.311 48.8628 246.661 49.1333 247.065 49.1333 cv247.443 49.1333 247.829 48.9165 248.054 48.6196 cv248.297 48.3052 248.26 47.9985 248.27 47.6206 cv248.27 47.2251 li247.56 47.3599 246.311 47.4585 246.311 48.4302 cvcp249.061 48.1968 mo249.061 48.3228 249.061 48.4487 249.068 48.5845 cv249.078 48.7095 249.123 48.8892 249.248 48.9526 cv249.33 49.0161 249.446 49.0249 249.545 48.9976 cv249.635 48.9712 249.716 48.9341 249.797 48.9077 cv249.887 48.9263 249.914 48.9526 249.914 49.0435 cv249.814 49.3481 249.42 49.5288 249.113 49.5288 cv248.656 49.5288 248.432 49.2954 248.314 48.8628 cv247.919 49.3403 247.309 49.5825 246.697 49.5825 cv246.014 49.5825 245.43 49.2681 245.43 48.5122 cv245.43 47.3237 247.38 46.9907 248.27 46.8647 cv248.287 46.6577 248.27 46.4419 248.26 46.2251 cv248.233 45.6763 247.784 45.5415 247.299 45.5415 cv247.047 45.5415 246.715 45.5591 246.526 45.731 cv246.428 45.8208 246.463 45.8931 246.526 45.9917 cv246.58 46.1001 246.661 46.2173 246.661 46.3608 cv246.661 46.6763 246.445 46.8013 246.158 46.8013 cv245.834 46.8013 245.682 46.5405 245.682 46.2349 cv245.682 45.8384 246.006 45.5239 246.338 45.3706 cv246.725 45.1909 247.021 45.1372 247.434 45.1372 cv247.721 45.1372 248.027 45.1724 248.297 45.2622 cv249.016 45.5239 249.087 45.9468 249.087 46.6392 cv249.061 48.1968 licpf251.873 46.3423 mo251.891 46.3423 li251.998 45.8657 252.43 45.1372 253.229 45.1372 cv253.625 45.1372 253.939 45.4243 253.939 45.8384 cv253.939 46.1802 253.76 46.4507 253.4 46.4507 cv253.131 46.4507 252.933 46.2251 252.933 45.9653 cv252.933 45.8384 252.978 45.7036 253.059 45.5962 cv253.076 45.5688 253.104 45.5513 253.121 45.5239 cv252.025 45.6499 251.873 47.5122 251.873 47.9185 cv251.873 48.9438 li251.873 49.1685 252.322 49.1333 252.483 49.1333 cv252.717 49.1333 li252.717 49.4478 li250.291 49.4478 li250.291 49.1333 li250.398 49.1235 250.507 49.1147 250.614 49.1147 cv251.064 49.1147 251.046 49.0249 251.046 48.5845 cv251.046 46.0903 li250.974 45.7134 250.695 45.7485 250.398 45.7397 cv250.219 45.7397 li250.219 45.3618 li251.873 45.272 li251.873 46.3423 licpf257.219 45.1724 mo257.515 45.1724 li257.515 46.6763 li257.191 46.6763 li257.012 46.0103 256.598 45.4966 255.861 45.4966 cv255.467 45.4966 255.035 45.7036 255.035 46.1538 cv255.035 46.6392 255.609 46.7476 255.969 46.8198 cv256.5 46.936 li256.886 47.0083 257.155 47.0718 257.451 47.3423 cv257.694 47.5757 257.803 47.8726 257.803 48.2056 cv257.803 48.6646 257.694 48.9526 257.344 49.2583 cv257.102 49.4653 256.652 49.5825 256.338 49.5825 cv255.889 49.5825 255.43 49.4478 255.089 49.1411 cv254.774 49.5376 li254.479 49.5376 li254.479 47.8276 li254.811 47.8276 li255.018 48.6196 255.484 49.2231 256.365 49.2231 cv256.76 49.2231 257.264 48.9888 257.264 48.5298 cv257.264 48.2056 257.092 48.0435 256.805 47.9263 cv256.5 47.8091 256.266 47.7642 255.951 47.6929 cv255.826 47.6655 255.699 47.6294 255.574 47.6021 cv255.277 47.522 254.98 47.4409 254.783 47.189 cv254.604 46.9546 254.541 46.6841 254.541 46.3872 cv254.541 45.6138 255.089 45.1372 255.853 45.1372 cv256.248 45.1372 256.643 45.2544 256.949 45.5063 cv257.219 45.1724 licpf259.401 47.4048 mo259.401 48.0347 259.536 49.2407 260.39 49.2407 cv261.342 49.2407 261.45 48.1245 261.45 47.4048 cv261.45 46.936 261.45 46.5864 261.289 46.1538 cv261.136 45.7661 260.875 45.4966 260.435 45.4966 cv259.491 45.4966 259.401 46.6938 259.401 47.4048 cvcp258.484 47.395 mo258.484 46.7563 258.611 46.3247 259.006 45.8296 cv259.339 45.4155 259.833 45.1372 260.381 45.1372 cv261.656 45.1372 262.367 46.2075 262.367 47.4048 cv262.367 48.6021 261.656 49.5825 260.398 49.5825 cv259.177 49.5825 258.484 48.5386 258.484 47.395 cvcpf262.914 49.1333 mo263.139 49.1333 li263.283 49.1147 263.453 49.1333 263.58 49.061 cv263.633 49.0337 263.651 48.9438 263.651 48.8813 cv263.651 46.3696 li263.651 46.1987 263.66 46.0278 263.606 45.8657 cv263.562 45.7661 263.463 45.7759 263.373 45.7583 cv262.914 45.7397 li262.914 45.3618 li264.46 45.272 li264.46 46.0366 li264.479 46.0366 li264.9 45.2896 265.439 45.1372 265.853 45.1372 cv266.239 45.1372 266.913 45.3257 267.164 46.0366 cv267.236 46.2349 267.281 46.4868 267.281 46.8911 cv267.281 48.8267 li267.281 48.8716 267.29 48.9165 267.29 48.9614 cv267.299 49.0435 267.38 49.0962 267.452 49.106 cv267.578 49.1147 267.703 49.1147 267.838 49.1235 cv268 49.1333 li268 49.4478 li265.727 49.4478 li265.727 49.1333 li265.879 49.1411 266.023 49.1235 266.176 49.1147 cv266.239 49.1147 266.347 49.0962 266.392 49.0435 cv266.419 49.0249 266.428 48.979 266.445 48.9526 cv266.455 48.9077 266.455 48.8628 266.455 48.8179 cv266.455 46.8647 li266.455 46.5405 266.428 46.3872 266.41 46.2622 cv266.355 45.9019 265.979 45.6685 265.592 45.6685 cv265.205 45.6685 264.855 45.9282 264.666 46.2622 cv264.479 46.604 264.479 46.9282 264.479 47.3052 cv264.479 48.8091 li264.486 48.854 264.486 48.9077 264.496 48.9614 cv264.514 49.1685 264.891 49.1147 265.035 49.1235 cv265.205 49.1333 li265.205 49.4478 li262.914 49.4478 li262.914 49.1333 licpf270.938 42.9497 mo276.347 42.9497 li276.473 45.2544 li276.096 45.2544 li275.799 43.5347 275.377 43.354 273.741 43.354 cv273.562 43.354 li273.104 43.354 272.896 43.354 272.896 43.7056 cv272.896 45.8745 li273.221 45.8745 li274.002 45.8745 274.361 45.5327 274.415 44.6411 cv274.819 44.6411 li274.819 47.6021 li274.415 47.6021 li274.415 46.8013 274.092 46.2886 273.391 46.2886 cv272.896 46.2886 li272.896 48.7007 li272.896 48.8091 272.914 48.8267 272.986 48.9263 cv273.112 49.0063 273.256 48.9976 273.4 49.0063 cv273.588 49.0435 273.777 49.0435 273.975 49.0435 cv274.217 49.0435 274.46 49.0435 274.712 48.9976 cv275.682 48.9077 275.961 48.2603 276.167 47.4048 cv276.194 47.2974 276.212 47.189 276.248 47.0454 cv276.617 47.0454 li276.445 49.4478 li270.92 49.4478 li270.92 49.0435 li271.189 49.0435 li271.432 49.0249 271.836 49.061 271.899 48.7544 cv271.918 48.6294 271.918 48.4937 271.918 48.3677 cv271.918 44.0122 li271.918 43.8853 271.918 43.7505 271.908 43.6245 cv271.881 43.4448 271.783 43.3999 271.611 43.3813 cv271.387 43.354 271.162 43.354 270.938 43.354 cv270.938 42.9497 licpf279.5 49.106 mo280.354 49.106 280.57 48.1157 280.57 47.395 cv280.57 47.0532 280.525 46.4956 280.363 46.1987 cv280.192 45.8657 279.914 45.6138 279.51 45.6138 cv278.62 45.6138 278.449 46.6763 278.449 47.3687 cv278.449 47.8013 278.467 48.1704 278.639 48.5298 cv278.8 48.8813 279.096 49.106 279.492 49.106 cv279.5 49.106 licp280.57 43.6431 mo280.57 43.5259 280.561 43.4712 280.488 43.3726 cv280.363 43.2827 280.201 43.2915 280.058 43.2915 cv279.923 43.2915 279.788 43.2827 279.653 43.2827 cv279.653 42.9048 li281.396 42.8149 li281.396 48.6021 li281.396 49.0435 281.531 49.0435 281.944 49.061 cv282.124 49.0698 li282.124 49.4478 li280.57 49.5376 li280.57 48.7544 li280.552 48.7544 li280.516 48.854 280.48 48.9712 280.398 49.0513 cv280.174 49.4204 279.752 49.5825 279.33 49.5825 cv278.755 49.5825 278.342 49.3403 277.982 48.9077 cv277.658 48.52 277.533 47.9536 277.533 47.4136 cv277.533 46.8735 277.649 46.3071 277.982 45.8657 cv278.297 45.4341 278.781 45.1372 279.32 45.1372 cv279.842 45.1372 280.301 45.3794 280.552 45.8296 cv280.57 45.8296 li280.57 43.6431 licpf282.492 45.3618 mo284.056 45.272 li284.056 47.8462 li284.056 48.0161 284.056 48.1782 284.064 48.3501 cv284.082 48.8179 284.406 49.0435 284.855 49.0435 cv285.287 49.0435 285.646 48.8267 285.835 48.4399 cv286.032 48.0259 286.006 47.7378 286.023 47.2876 cv286.023 46.0181 li286.006 45.8481 285.987 45.7935 285.808 45.7661 cv285.592 45.731 285.367 45.7485 285.152 45.7397 cv285.152 45.3618 li286.85 45.272 li286.85 48.4487 li286.85 48.5845 286.85 48.7729 286.949 48.8716 cv286.984 48.9165 287.029 48.9438 287.084 48.9526 cv287.209 48.9614 287.326 48.9614 287.452 48.9712 cv287.641 48.9712 li287.641 49.3579 li286.023 49.4478 li286.023 48.7456 li286.006 48.7456 li285.727 49.2495 285.224 49.5825 284.64 49.5825 cv284.406 49.5825 283.453 49.4653 283.311 48.7456 cv283.238 48.6372 283.229 48.2153 283.229 47.981 cv283.229 46.0454 li283.229 45.9731 283.229 45.8931 283.166 45.8384 cv283.031 45.7134 282.834 45.7397 282.672 45.7397 cv282.492 45.7397 li282.492 45.3618 licpf291.621 48.2778 mo291.424 48.8091 291.117 49.3218 290.543 49.4839 cv290.363 49.5376 290.121 49.5825 289.932 49.5825 cv288.8 49.5825 288.1 48.5659 288.1 47.5044 cv288.1 46.1802 288.764 45.1372 290.174 45.1372 cv290.57 45.1372 290.866 45.2358 291.162 45.4878 cv291.352 45.6499 291.514 45.8833 291.514 46.145 cv291.514 46.4868 291.369 46.7935 290.982 46.7935 cv290.687 46.7935 290.443 46.6128 290.443 46.2974 cv290.443 46.1274 290.516 46.0454 290.605 45.9204 cv290.623 45.9019 290.687 45.8032 290.687 45.7847 cv290.687 45.5776 290.291 45.4966 290.166 45.4966 cv289.268 45.4966 289.016 46.5679 289.016 47.2876 cv289.016 48.1069 289.249 49.0435 290.246 49.0435 cv290.795 49.0435 291.117 48.6196 291.297 48.1431 cv291.621 48.2778 licpf293.059 48.4302 mo293.059 48.8628 293.408 49.1333 293.813 49.1333 cv294.19 49.1333 294.576 48.9165 294.801 48.6196 cv295.044 48.3052 295.008 47.9985 295.018 47.6206 cv295.018 47.2251 li294.307 47.3599 293.059 47.4585 293.059 48.4302 cvcp295.808 48.1968 mo295.808 48.3228 295.808 48.4487 295.816 48.5845 cv295.826 48.7095 295.871 48.8892 295.996 48.9526 cv296.077 49.0161 296.194 49.0249 296.293 48.9976 cv296.383 48.9712 296.464 48.9341 296.545 48.9077 cv296.635 48.9263 296.661 48.9526 296.661 49.0435 cv296.563 49.3481 296.167 49.5288 295.861 49.5288 cv295.403 49.5288 295.179 49.2954 295.063 48.8628 cv294.666 49.3403 294.056 49.5825 293.445 49.5825 cv292.762 49.5825 292.178 49.2681 292.178 48.5122 cv292.178 47.3237 294.127 46.9907 295.018 46.8647 cv295.035 46.6577 295.018 46.4419 295.008 46.2251 cv294.98 45.6763 294.531 45.5415 294.047 45.5415 cv293.795 45.5415 293.463 45.5591 293.273 45.731 cv293.176 45.8208 293.211 45.8931 293.273 45.9917 cv293.328 46.1001 293.408 46.2173 293.408 46.3608 cv293.408 46.6763 293.193 46.8013 292.906 46.8013 cv292.582 46.8013 292.43 46.5405 292.43 46.2349 cv292.43 45.8384 292.753 45.5239 293.086 45.3706 cv293.472 45.1909 293.768 45.1372 294.182 45.1372 cv294.469 45.1372 294.774 45.1724 295.044 45.2622 cv295.763 45.5239 295.834 45.9468 295.834 46.6392 cv295.808 48.1968 licpf296.939 45.272 mo297.901 45.2085 298.09 44.2095 298.145 43.4536 cv298.504 43.4536 li298.504 45.272 li299.842 45.272 li299.842 45.6685 li298.504 45.6685 li298.504 48.3589 li298.504 48.6196 298.521 49.0513 299.088 49.0513 cv299.653 49.0513 299.779 48.2866 299.779 47.8276 cv300.139 47.8276 li300.147 48.7642 299.833 49.5825 298.781 49.5825 cv298.162 49.5825 297.677 49.1782 297.677 48.6108 cv297.677 45.6685 li296.939 45.6685 li296.939 45.272 licpf301.648 44.0659 mo301.36 44.0659 301.127 43.7954 301.127 43.5161 cv301.127 43.2378 301.387 43.0044 301.656 43.0044 cv301.944 43.0044 302.188 43.2466 302.188 43.5347 cv302.188 43.813 301.926 44.0659 301.648 44.0659 cvcp300.507 49.4478 mo300.507 49.1333 li300.75 49.1333 li300.902 49.1147 301.082 49.1333 301.217 49.061 cv301.307 48.8716 301.289 48.647 301.289 48.4399 cv301.289 46.3696 li301.289 46.1987 301.297 46.0278 301.244 45.8657 cv301.181 45.7661 301.072 45.7759 300.975 45.7583 cv300.436 45.7397 li300.436 45.3618 li302.115 45.272 li302.115 48.7271 li302.115 49.0063 302.079 49.0962 302.375 49.1147 cv302.537 49.1235 302.708 49.1411 302.869 49.1333 cv302.869 49.4478 li300.507 49.4478 licpf304.325 47.4048 mo304.325 48.0347 304.46 49.2407 305.313 49.2407 cv306.266 49.2407 306.374 48.1245 306.374 47.4048 cv306.374 46.936 306.374 46.5864 306.212 46.1538 cv306.059 45.7661 305.799 45.4966 305.358 45.4966 cv304.415 45.4966 304.325 46.6938 304.325 47.4048 cvcp303.408 47.395 mo303.408 46.7563 303.535 46.3247 303.93 45.8296 cv304.262 45.4155 304.756 45.1372 305.305 45.1372 cv306.58 45.1372 307.29 46.2075 307.29 47.4048 cv307.29 48.6021 306.58 49.5825 305.322 49.5825 cv304.101 49.5825 303.408 48.5386 303.408 47.395 cvcpf307.838 49.1333 mo308.063 49.1333 li308.207 49.1147 308.377 49.1333 308.504 49.061 cv308.557 49.0337 308.575 48.9438 308.575 48.8813 cv308.575 46.3696 li308.575 46.1987 308.584 46.0278 308.53 45.8657 cv308.485 45.7661 308.387 45.7759 308.297 45.7583 cv307.838 45.7397 li307.838 45.3618 li309.384 45.272 li309.384 46.0366 li309.402 46.0366 li309.824 45.2896 310.363 45.1372 310.776 45.1372 cv311.162 45.1372 311.836 45.3257 312.088 46.0366 cv312.16 46.2349 312.205 46.4868 312.205 46.8911 cv312.205 48.8267 li312.205 48.8716 312.214 48.9165 312.214 48.9614 cv312.223 49.0435 312.304 49.0962 312.375 49.106 cv312.502 49.1147 312.627 49.1147 312.762 49.1235 cv312.924 49.1333 li312.924 49.4478 li310.65 49.4478 li310.65 49.1333 li310.803 49.1411 310.947 49.1235 311.1 49.1147 cv311.162 49.1147 311.271 49.0962 311.315 49.0435 cv311.342 49.0249 311.352 48.979 311.369 48.9526 cv311.379 48.9077 311.379 48.8628 311.379 48.8179 cv311.379 46.8647 li311.379 46.5405 311.352 46.3872 311.334 46.2622 cv311.279 45.9019 310.902 45.6685 310.516 45.6685 cv310.129 45.6685 309.779 45.9282 309.59 46.2622 cv309.402 46.604 309.402 46.9282 309.402 47.3052 cv309.402 48.8091 li309.41 48.854 309.41 48.9077 309.42 48.9614 cv309.438 49.1685 309.814 49.1147 309.959 49.1235 cv310.129 49.1333 li310.129 49.4478 li307.838 49.4478 li307.838 49.1333 licpf3.99072 57.9478 mo3.36133 57.9478 li3.36133 55.686 li1.14209 55.686 li1.14209 57.9478 li0.512695 57.9478 li0.512695 53.3979 li1.14209 53.3979 li1.14209 55.231 li3.36133 55.231 li3.36133 53.3979 li3.99072 53.3979 li3.99072 57.9478 licpf6.21045 56.2056 mo5.69775 56.3618 5.43164 56.6089 5.43164 57.0181 cv5.43164 57.356 5.66504 57.5708 5.89893 57.5708 cv6.31396 57.5708 6.84619 57.0571 6.76807 56.0435 cv6.21045 56.2056 licp6.56055 57.5962 mo6.3335 57.8247 6.04785 58.0259 5.74951 58.0259 cv5.20459 58.0259 4.82813 57.6353 4.82813 57.0249 cv4.82813 56.4595 5.30811 56.1021 5.98291 55.9009 cv6.76807 55.6528 li6.74219 55.2563 6.4375 55.0034 6.11914 55.0034 cv5.74316 55.0034 5.50293 55.1587 5.26904 55.354 cv5.04199 55.061 li5.3667 54.7495 5.69775 54.6196 6.15186 54.6196 cv6.63867 54.6196 7.35205 54.7759 7.35205 55.7251 cv7.35205 57.1548 li7.35205 57.4019 7.38477 57.7134 7.49512 57.9478 cv6.85889 57.9478 li6.78125 57.811 6.76807 57.603 6.76807 57.395 cv6.56055 57.5962 licpf8.89648 55.1001 mo9.13037 54.854 li9.2666 54.7173 9.48047 54.6196 9.61719 54.6196 cv9.75977 54.6196 9.97412 54.7231 10.1558 54.938 cv9.88965 55.3149 li9.74658 55.2437 9.604 55.1782 9.45459 55.1782 cv9.15625 55.1782 8.90967 55.4771 8.90967 56.1997 cv8.90967 57.9478 li8.32568 57.9478 li8.32568 54.6978 li8.89648 54.6978 li8.89648 55.1001 licpf10.6162 57.9478 mo10.6162 53.1704 li11.2002 53.1704 li11.2002 57.9478 li10.6162 57.9478 licpf12.6021 56.2837 mo12.6021 56.895 12.8096 57.6099 13.5688 57.6099 cv14.3345 57.6099 14.542 56.895 14.542 56.2837 cv14.542 55.6987 14.3018 55.0356 13.5688 55.0356 cv12.8418 55.0356 12.6021 55.6987 12.6021 56.2837 cvcp11.9722 56.2837 mo11.9722 55.231 12.751 54.6196 13.5688 54.6196 cv14.3862 54.6196 15.1714 55.231 15.1714 56.2837 cv15.1714 57.2915 14.5293 58.0259 13.5688 58.0259 cv12.6147 58.0259 11.9722 57.2915 11.9722 56.2837 cvcpf18.2085 54.6978 mo18.5264 55.4712 18.8442 56.2515 19.1558 57.1802 cv19.1689 57.1802 li19.4219 56.2251 19.688 55.4321 19.9473 54.6333 cv20.4858 54.7231 li19.3438 57.9478 li18.9351 57.9478 li18.6108 57.1411 18.2798 56.3364 17.9619 55.4126 cv17.9487 55.4126 li17.6372 56.3364 17.3193 57.1411 17.0015 57.9478 cv16.6187 57.9478 li15.4961 54.7759 li16.0669 54.6333 li16.333 55.4321 16.6055 56.2251 16.8652 57.1802 cv16.8779 57.1802 li17.1895 56.2515 17.5073 55.4712 17.8257 54.6978 cv18.2085 54.6978 licpf20.168 58.9497 mo20.5967 57.8052 li20.7651 57.3364 20.8364 57.1938 21.0898 57.1938 cv21.2324 57.1938 21.5566 57.3306 21.2324 57.8765 cv20.5249 59.0923 li20.168 58.9497 licpf26.644 53.8521 mo25.0347 53.8521 li25.0347 55.3218 li26.6118 55.3218 li26.6118 55.7769 li25.0347 55.7769 li25.0347 57.4927 li26.9233 57.4927 li26.9233 57.9478 li24.4053 57.9478 li24.4053 53.3979 li26.644 53.3979 li26.644 53.8521 licpf28.1753 55.1001 mo28.4805 54.7759 28.9478 54.6196 29.2852 54.6196 cv30.0313 54.6196 30.4336 55.0356 30.4336 55.855 cv30.4336 57.9478 li29.8496 57.9478 li29.8496 55.978 li29.8496 55.3677 29.5903 55.0493 29.0645 55.0493 cv28.604 55.0493 28.1821 55.3677 28.1821 55.9907 cv28.1821 57.9478 li27.5981 57.9478 li27.5981 54.6978 li28.1753 54.6978 li28.1753 55.1001 licpf33.7559 56.2192 mo33.7559 55.6079 33.4253 55.0356 32.7891 55.0356 cv32.1143 55.0356 31.8354 55.5688 31.8354 56.2583 cv31.8354 56.9536 32.1338 57.6099 32.7505 57.6099 cv33.4575 57.6099 33.7559 56.9399 33.7559 56.2192 cvcp34.3398 57.8306 mo34.3398 59.0728 33.5679 59.5728 32.6919 59.5728 cv32.2114 59.5728 31.7314 59.481 31.355 59.2485 cv31.5176 58.8638 li31.9131 59.0923 32.2764 59.1567 32.6787 59.1567 cv33.3472 59.1567 33.7559 58.7271 33.7559 57.8765 cv33.7559 57.4341 li33.7432 57.4341 li33.5161 57.7524 33.1719 58.0259 32.6597 58.0259 cv31.7642 58.0259 31.2061 57.3237 31.2061 56.2837 cv31.2061 55.439 31.8286 54.6196 32.7568 54.6196 cv33.146 54.6196 33.5615 54.8149 33.7432 55.147 cv33.7559 55.147 li33.7559 54.6978 li34.3398 54.6978 li34.3398 57.8306 licpf35.3198 57.9478 mo35.3198 53.1704 li35.9038 53.1704 li35.9038 57.9478 li35.3198 57.9478 licpf38.0581 56.2056 mo37.5454 56.3618 37.2793 56.6089 37.2793 57.0181 cv37.2793 57.356 37.5132 57.5708 37.7466 57.5708 cv38.1621 57.5708 38.6943 57.0571 38.6162 56.0435 cv38.0581 56.2056 licp38.4087 57.5962 mo38.1816 57.8247 37.896 58.0259 37.5977 58.0259 cv37.0522 58.0259 36.6758 57.6353 36.6758 57.0249 cv36.6758 56.4595 37.1563 56.1021 37.8311 55.9009 cv38.6162 55.6528 li38.5903 55.2563 38.2852 55.0034 37.9673 55.0034 cv37.5908 55.0034 37.3511 55.1587 37.1172 55.354 cv36.8901 55.061 li37.2144 54.7495 37.5454 54.6196 38 54.6196 cv38.4863 54.6196 39.2002 54.7759 39.2002 55.7251 cv39.2002 57.1548 li39.2002 57.4019 39.2329 57.7134 39.3428 57.9478 cv38.707 57.9478 li38.6294 57.811 38.6162 57.603 38.6162 57.395 cv38.4087 57.5962 licpf40.751 55.1001 mo41.0562 54.7759 41.5234 54.6196 41.8608 54.6196 cv42.6069 54.6196 43.0093 55.0356 43.0093 55.855 cv43.0093 57.9478 li42.4253 57.9478 li42.4253 55.978 li42.4253 55.3677 42.1655 55.0493 41.6401 55.0493 cv41.1792 55.0493 40.7578 55.3677 40.7578 55.9907 cv40.7578 57.9478 li40.1738 57.9478 li40.1738 54.6978 li40.751 54.6978 li40.751 55.1001 licpf46.3315 56.2192 mo46.3315 55.6079 46.001 55.0356 45.3647 55.0356 cv44.6899 55.0356 44.4111 55.5688 44.4111 56.2583 cv44.4111 56.9536 44.7095 57.6099 45.3257 57.6099 cv46.0332 57.6099 46.3315 56.9399 46.3315 56.2192 cvcp46.3315 57.4341 mo46.3188 57.4341 li46.0918 57.7524 45.7476 58.0259 45.2153 58.0259 cv44.3394 58.0259 43.7817 57.3237 43.7817 56.2837 cv43.7817 55.439 44.3916 54.6196 45.2803 54.6196 cv45.7217 54.6196 46.1177 54.7886 46.3188 55.1001 cv46.3315 55.1001 li46.3315 53.1704 li46.9155 53.1704 li46.9155 57.9478 li46.3315 57.9478 li46.3315 57.4341 licpf50.5581 57.0728 mo50.0737 57.0728 49.6846 56.688 49.6846 56.1978 cv49.6792 55.7134 50.0688 55.3228 50.5581 55.3228 cv51.042 55.3228 51.4316 55.7134 51.4316 56.1978 cv51.4316 56.6821 51.042 57.0728 50.5581 57.0728 cvcpf54.2705 53.3979 mo54.8999 53.3979 li54.8999 57.4927 li56.7886 57.4927 li56.7886 57.9478 li54.2705 57.9478 li54.2705 53.3979 licpf57.7681 56.2837 mo57.7681 56.895 57.9756 57.6099 58.7349 57.6099 cv59.5005 57.6099 59.7085 56.895 59.7085 56.2837 cv59.7085 55.6987 59.4683 55.0356 58.7349 55.0356 cv58.0083 55.0356 57.7681 55.6987 57.7681 56.2837 cvcp57.1387 56.2837 mo57.1387 55.231 57.9175 54.6196 58.7349 54.6196 cv59.5527 54.6196 60.3379 55.231 60.3379 56.2837 cv60.3379 57.2915 59.6953 58.0259 58.7349 58.0259 cv57.7813 58.0259 57.1387 57.2915 57.1387 56.2837 cvcpf61.6875 55.1001 mo61.9927 54.7759 62.4595 54.6196 62.7974 54.6196 cv63.5435 54.6196 63.9458 55.0356 63.9458 55.855 cv63.9458 57.9478 li63.3618 57.9478 li63.3618 55.978 li63.3618 55.3677 63.1021 55.0493 62.5767 55.0493 cv62.1157 55.0493 61.6938 55.3677 61.6938 55.9907 cv61.6938 57.9478 li61.1099 57.9478 li61.1099 54.6978 li61.6875 54.6978 li61.6875 55.1001 licpf67.2681 56.2192 mo67.2681 55.6079 66.937 55.0356 66.3013 55.0356 cv65.6265 55.0356 65.3472 55.5688 65.3472 56.2583 cv65.3472 56.9536 65.646 57.6099 66.2622 57.6099 cv66.9697 57.6099 67.2681 56.9399 67.2681 56.2192 cvcp67.2681 57.4341 mo67.2549 57.4341 li67.0278 57.7524 66.6841 58.0259 66.1519 58.0259 cv65.2759 58.0259 64.7178 57.3237 64.7178 56.2837 cv64.7178 55.439 65.3276 54.6196 66.2168 54.6196 cv66.6582 54.6196 67.0537 54.7886 67.2549 55.1001 cv67.2681 55.1001 li67.2681 53.1704 li67.8521 53.1704 li67.8521 57.9478 li67.2681 57.9478 li67.2681 57.4341 licpf69.2407 56.2837 mo69.2407 56.895 69.4482 57.6099 70.2075 57.6099 cv70.9731 57.6099 71.1807 56.895 71.1807 56.2837 cv71.1807 55.6987 70.9409 55.0356 70.2075 55.0356 cv69.481 55.0356 69.2407 55.6987 69.2407 56.2837 cvcp68.6113 56.2837 mo68.6113 55.231 69.3901 54.6196 70.2075 54.6196 cv71.0249 54.6196 71.8101 55.231 71.8101 56.2837 cv71.8101 57.2915 71.168 58.0259 70.2075 58.0259 cv69.2534 58.0259 68.6113 57.2915 68.6113 56.2837 cvcpf73.1602 55.1001 mo73.4648 54.7759 73.9321 54.6196 74.2695 54.6196 cv75.0161 54.6196 75.4185 55.0356 75.4185 55.855 cv75.4185 57.9478 li74.834 57.9478 li74.834 55.978 li74.834 55.3677 74.5747 55.0493 74.0488 55.0493 cv73.5884 55.0493 73.1665 55.3677 73.1665 55.9907 cv73.1665 57.9478 li72.5825 57.9478 li72.5825 54.6978 li73.1602 54.6978 li73.1602 55.1001 licpf79.0732 57.0728 mo78.5894 57.0728 78.1997 56.688 78.1997 56.1978 cv78.1948 55.7134 78.5845 55.3228 79.0732 55.3228 cv79.5576 55.3228 79.9468 55.7134 79.9468 56.1978 cv79.9468 56.6821 79.5576 57.0728 79.0732 57.0728 cvcpf86.7637 57.9478 mo86.2705 57.9478 li85.2842 56.7642 83.5908 54.7231 83.3184 54.3267 cv83.3052 54.3267 li83.3052 57.9478 li82.7861 57.9478 li82.7861 53.3979 li83.2534 53.3979 li84.2524 54.5806 85.9268 56.5698 86.2319 57.0249 cv86.2446 57.0249 li86.2446 53.3979 li86.7637 53.3979 li86.7637 57.9478 licpf89.8594 55.9712 mo89.8594 55.4653 89.645 55.0356 89.1323 55.0356 cv88.5093 55.0356 88.2627 55.5552 88.2432 55.9712 cv89.8594 55.9712 licp88.2046 56.3618 mo88.1978 57.0122 88.6587 57.6099 89.3013 57.6099 cv89.5996 57.6099 89.9629 57.4985 90.1899 57.3306 cv90.3589 57.6489 li90.0215 57.8892 89.6191 58.0259 89.2817 58.0259 cv88.2695 58.0259 87.6011 57.4019 87.6011 56.2583 cv87.6011 55.1333 88.4058 54.6196 89.1387 54.6196 cv90.125 54.6196 90.4561 55.5103 90.3911 56.3618 cv88.2046 56.3618 licpf93.4087 54.6978 mo93.7266 55.4712 94.0444 56.2515 94.356 57.1802 cv94.3691 57.1802 li94.6221 56.2251 94.8882 55.4321 95.1475 54.6333 cv95.686 54.7231 li94.5439 57.9478 li94.1353 57.9478 li93.811 57.1411 93.48 56.3364 93.1621 55.4126 cv93.1489 55.4126 li92.8374 56.3364 92.5195 57.1411 92.2017 57.9478 cv91.8188 57.9478 li90.6963 54.7759 li91.2671 54.6333 li91.5332 55.4321 91.8057 56.2251 92.0654 57.1802 cv92.0781 57.1802 li92.3896 56.2515 92.708 55.4712 93.0259 54.6978 cv93.4087 54.6978 licpf98.9956 57.9478 mo98.9956 55.978 li97.6265 53.4634 li98.3076 53.3325 li99.4043 55.4907 li100.598 53.3325 li101.156 53.4106 li99.625 55.978 li99.625 57.9478 li98.9956 57.9478 licpf101.748 56.2837 mo101.748 56.895 101.956 57.6099 102.715 57.6099 cv103.48 57.6099 103.688 56.895 103.688 56.2837 cv103.688 55.6987 103.448 55.0356 102.715 55.0356 cv101.988 55.0356 101.748 55.6987 101.748 56.2837 cvcp101.119 56.2837 mo101.119 55.231 101.897 54.6196 102.715 54.6196 cv103.532 54.6196 104.317 55.231 104.317 56.2837 cv104.317 57.2915 103.675 58.0259 102.715 58.0259 cv101.761 58.0259 101.119 57.2915 101.119 56.2837 cvcpf105.661 55.1001 mo105.895 54.854 li106.031 54.7173 106.245 54.6196 106.381 54.6196 cv106.524 54.6196 106.738 54.7231 106.919 54.938 cv106.654 55.3149 li106.511 55.2437 106.368 55.1782 106.219 55.1782 cv105.92 55.1782 105.674 55.4771 105.674 56.1997 cv105.674 57.9478 li105.09 57.9478 li105.09 54.6978 li105.661 54.6978 li105.661 55.1001 licpf107.38 53.1704 mo107.964 53.1704 li107.964 56.0103 li108.062 56.0103 li109.333 54.6333 li109.768 54.8794 li108.613 56.0884 li109.982 57.7466 li109.405 58.0122 li107.978 56.1733 li107.964 56.1733 li107.964 57.9478 li107.38 57.9478 li107.38 53.1704 licpf114.044 56.1978 mo114.044 55.7134 113.655 55.3228 113.17 55.3228 cv112.681 55.3228 112.292 55.7134 112.297 56.1978 cv112.297 56.688 112.686 57.0728 113.17 57.0728 cv113.655 57.0728 114.044 56.6821 114.044 56.1978 cvcpf117.513 57.4927 mo118.123 57.4927 li118.635 57.4927 119.076 57.2134 119.076 56.6675 cv119.076 56.0298 118.531 55.8032 118.019 55.8032 cv117.513 55.8032 li117.513 57.4927 licp117.513 55.3481 mo117.824 55.3481 li118.369 55.3481 118.843 54.9712 118.843 54.4829 cv118.843 54.0806 118.564 53.8521 118.044 53.8521 cv117.513 53.8521 li117.513 55.3481 licp116.883 57.9478 mo116.883 53.3979 li118.291 53.3979 li118.966 53.3979 119.472 53.7358 119.472 54.3267 cv119.472 55.0688 118.895 55.4194 118.544 55.4849 cv118.544 55.4966 li119.141 55.5161 119.751 55.8872 119.751 56.6284 cv119.751 57.3892 119.103 57.9478 118.162 57.9478 cv116.883 57.9478 licpf120.984 56.2837 mo120.984 56.895 121.192 57.6099 121.951 57.6099 cv122.717 57.6099 122.924 56.895 122.924 56.2837 cv122.924 55.6987 122.684 55.0356 121.951 55.0356 cv121.224 55.0356 120.984 55.6987 120.984 56.2837 cvcp120.354 56.2837 mo120.354 55.231 121.133 54.6196 121.951 54.6196 cv122.769 54.6196 123.554 55.231 123.554 56.2837 cv123.554 57.2915 122.912 58.0259 121.951 58.0259 cv120.997 58.0259 120.354 57.2915 120.354 56.2837 cvcpf125.851 55.2173 mo125.617 55.061 125.429 55.0103 125.254 55.0103 cv125.046 55.0103 124.78 55.1079 124.78 55.3804 cv124.78 55.6528 125.079 55.7896 125.449 56.0688 cv125.864 56.3872 126.136 56.6548 126.136 57.1099 cv126.136 57.6548 125.598 58.0259 125.001 58.0259 cv124.631 58.0259 124.216 57.8638 124.001 57.6157 cv124.287 57.2847 li124.475 57.4604 124.729 57.6099 124.988 57.6099 cv125.26 57.6099 125.54 57.4673 125.54 57.1489 cv125.54 56.772 125.202 56.6089 124.897 56.3872 cv124.527 56.1216 124.203 55.9009 124.203 55.4575 cv124.203 54.9448 124.709 54.6196 125.28 54.6196 cv125.598 54.6196 125.909 54.7495 126.078 54.9185 cv125.851 55.2173 licpf127.603 53.7231 mo127.019 53.9185 li127.019 54.6978 li126.564 54.6978 li126.564 55.0356 li127.019 55.0356 li127.019 56.9858 li127.019 57.6489 127.331 58.0259 127.979 58.0259 cv128.2 58.0259 128.44 57.9478 128.641 57.8179 cv128.499 57.4927 li128.388 57.5513 128.265 57.603 128.051 57.603 cv127.694 57.603 127.603 57.3306 127.603 56.8755 cv127.603 55.0356 li128.453 55.0356 li128.453 54.6978 li127.603 54.6978 li127.603 53.7231 licpf129.563 56.2837 mo129.563 56.895 129.77 57.6099 130.529 57.6099 cv131.295 57.6099 131.503 56.895 131.503 56.2837 cv131.503 55.6987 131.263 55.0356 130.529 55.0356 cv129.803 55.0356 129.563 55.6987 129.563 56.2837 cvcp128.933 56.2837 mo128.933 55.231 129.712 54.6196 130.529 54.6196 cv131.347 54.6196 132.132 55.231 132.132 56.2837 cv132.132 57.2915 131.49 58.0259 130.529 58.0259 cv129.576 58.0259 128.933 57.2915 128.933 56.2837 cvcpf133.482 55.1001 mo133.787 54.7759 134.254 54.6196 134.591 54.6196 cv135.338 54.6196 135.74 55.0356 135.74 55.855 cv135.74 57.9478 li135.156 57.9478 li135.156 55.978 li135.156 55.3677 134.896 55.0493 134.371 55.0493 cv133.91 55.0493 133.488 55.3677 133.488 55.9907 cv133.488 57.9478 li132.904 57.9478 li132.904 54.6978 li133.482 54.6978 li133.482 55.1001 licpf139.396 57.0728 mo138.911 57.0728 138.522 56.688 138.522 56.1978 cv138.517 55.7134 138.906 55.3228 139.396 55.3228 cv139.879 55.3228 140.269 55.7134 140.269 56.1978 cv140.269 56.6821 139.879 57.0728 139.396 57.0728 cvcpf145.236 54.1001 mo145.016 53.937 144.724 53.7749 144.451 53.7749 cv143.997 53.7749 143.744 54.0415 143.744 54.3921 cv143.744 54.7173 144.023 54.9575 144.607 55.3804 cv145.23 55.8354 145.593 56.2515 145.593 56.8364 cv145.593 57.5571 144.912 58.0259 144.185 58.0259 cv143.75 58.0259 143.231 57.8696 142.907 57.5513 cv143.186 57.1743 li143.452 57.3628 143.744 57.5708 144.172 57.5708 cv144.62 57.5708 144.964 57.3306 144.964 56.8228 cv144.964 56.2515 144.283 55.8813 143.913 55.6079 cv143.536 55.3149 143.115 55.0356 143.115 54.3921 cv143.115 53.7817 143.705 53.3198 144.412 53.3198 cv144.886 53.3198 145.282 53.4888 145.535 53.7749 cv145.236 54.1001 licpf147.611 56.2056 mo147.099 56.3618 146.833 56.6089 146.833 57.0181 cv146.833 57.356 147.066 57.5708 147.3 57.5708 cv147.715 57.5708 148.248 57.0571 148.169 56.0435 cv147.611 56.2056 licp147.961 57.5962 mo147.735 57.8247 147.449 58.0259 147.151 58.0259 cv146.605 58.0259 146.229 57.6353 146.229 57.0249 cv146.229 56.4595 146.709 56.1021 147.384 55.9009 cv148.169 55.6528 li148.143 55.2563 147.838 55.0034 147.521 55.0034 cv147.144 55.0034 146.904 55.1587 146.67 55.354 cv146.443 55.061 li146.768 54.7495 147.099 54.6196 147.553 54.6196 cv148.04 54.6196 148.753 54.7759 148.753 55.7251 cv148.753 57.1548 li148.753 57.4019 148.786 57.7134 148.896 57.9478 cv148.26 57.9478 li148.182 57.811 148.169 57.603 148.169 57.395 cv147.961 57.5962 licpf150.304 54.6978 mo149.727 54.6978 li149.727 57.9478 li150.311 57.9478 li150.311 55.9907 li150.311 55.3677 150.733 55.0493 151.193 55.0493 cv151.719 55.0493 151.978 55.3677 151.978 55.978 cv151.978 57.9478 li152.563 57.9478 li152.563 55.855 li152.563 55.0356 152.161 54.6196 151.414 54.6196 cv151.077 54.6196 150.609 54.7759 150.304 55.1001 cv150.304 54.6978 licpf157.753 53.8521 mo156.144 53.8521 li156.144 55.5815 li157.721 55.5815 li157.721 56.0366 li156.144 56.0366 li156.144 57.9478 li155.515 57.9478 li155.515 53.3979 li157.753 53.3979 li157.753 53.8521 licpf159.174 55.1001 mo159.409 54.854 li159.544 54.7173 159.758 54.6196 159.895 54.6196 cv160.038 54.6196 160.251 54.7231 160.433 54.938 cv160.167 55.3149 li160.025 55.2437 159.882 55.1782 159.733 55.1782 cv159.434 55.1782 159.188 55.4771 159.188 56.1997 cv159.188 57.9478 li158.604 57.9478 li158.604 54.6978 li159.174 54.6978 li159.174 55.1001 licpf162.614 56.0435 mo162.692 57.0571 162.16 57.5708 161.745 57.5708 cv161.51 57.5708 161.277 57.356 161.277 57.0181 cv161.277 56.6089 161.543 56.3618 162.056 56.2056 cv162.614 56.0435 licp162.614 57.395 mo162.614 57.603 162.626 57.811 162.705 57.9478 cv163.34 57.9478 li163.23 57.7134 163.198 57.4019 163.198 57.1548 cv163.198 55.7251 li163.198 54.7759 162.484 54.6196 161.998 54.6196 cv161.543 54.6196 161.212 54.7495 160.888 55.061 cv161.115 55.354 li161.348 55.1587 161.588 55.0034 161.965 55.0034 cv162.283 55.0034 162.587 55.2563 162.614 55.6528 cv161.829 55.9009 li161.154 56.1021 160.673 56.4595 160.673 57.0249 cv160.673 57.6353 161.05 58.0259 161.595 58.0259 cv161.893 58.0259 162.179 57.8247 162.406 57.5962 cv162.614 57.395 licpf164.749 55.1001 mo165.053 54.7759 165.521 54.6196 165.858 54.6196 cv166.605 54.6196 167.007 55.0356 167.007 55.855 cv167.007 57.9478 li166.423 57.9478 li166.423 55.978 li166.423 55.3677 166.164 55.0493 165.638 55.0493 cv165.177 55.0493 164.755 55.3677 164.755 55.9907 cv164.755 57.9478 li164.171 57.9478 li164.171 54.6978 li164.749 54.6978 li164.749 55.1001 licpf170.491 57.688 mo170.173 57.9146 169.79 58.0259 169.511 58.0259 cv167.974 58.0259 167.778 56.7642 167.778 56.3169 cv167.778 55.5044 168.317 54.6196 169.538 54.6196 cv169.868 54.6196 170.167 54.7036 170.407 54.8862 cv170.212 55.2173 li170.024 55.1274 169.784 55.0493 169.544 55.0493 cv169.013 55.0493 168.409 55.3999 168.409 56.2837 cv168.409 56.9595 168.753 57.5962 169.538 57.5962 cv169.817 57.5962 170.077 57.5259 170.329 57.3628 cv170.491 57.688 licpf171.737 54.6978 mo171.737 57.9478 li171.153 57.9478 li171.153 54.6978 li171.737 54.6978 licp171.075 53.6255 mo171.075 53.4634 171.212 53.2808 171.444 53.2808 cv171.679 53.2808 171.815 53.4634 171.815 53.6255 cv171.815 53.8013 171.731 54.022 171.444 54.022 cv171.159 54.022 171.075 53.8013 171.075 53.6255 cvcpf174.481 54.9185 mo174.313 54.7495 174.001 54.6196 173.685 54.6196 cv173.112 54.6196 172.606 54.9448 172.606 55.4575 cv172.606 55.9009 172.931 56.1216 173.302 56.3872 cv173.606 56.6089 173.944 56.772 173.944 57.1489 cv173.944 57.4673 173.665 57.6099 173.392 57.6099 cv173.132 57.6099 172.88 57.4604 172.69 57.2847 cv172.405 57.6157 li172.62 57.8638 173.034 58.0259 173.405 58.0259 cv174.001 58.0259 174.54 57.6548 174.54 57.1099 cv174.54 56.6548 174.269 56.3872 173.853 56.0688 cv173.483 55.7896 173.185 55.6528 173.185 55.3804 cv173.185 55.1079 173.45 55.0103 173.657 55.0103 cv173.833 55.0103 174.021 55.061 174.255 55.2173 cv174.481 54.9185 licpf177.778 57.688 mo177.46 57.9146 177.077 58.0259 176.798 58.0259 cv175.261 58.0259 175.065 56.7642 175.065 56.3169 cv175.065 55.5044 175.604 54.6196 176.825 54.6196 cv177.155 54.6196 177.454 54.7036 177.694 54.8862 cv177.499 55.2173 li177.312 55.1274 177.071 55.0493 176.831 55.0493 cv176.3 55.0493 175.696 55.3999 175.696 56.2837 cv175.696 56.9595 176.04 57.5962 176.825 57.5962 cv177.104 57.5962 177.362 57.5259 177.616 57.3628 cv177.778 57.688 licpf178.849 56.2837 mo178.849 56.895 179.058 57.6099 179.815 57.6099 cv180.581 57.6099 180.79 56.895 180.79 56.2837 cv180.79 55.6987 180.55 55.0356 179.815 55.0356 cv179.089 55.0356 178.849 55.6987 178.849 56.2837 cvcp178.22 56.2837 mo178.22 55.231 178.999 54.6196 179.815 54.6196 cv180.634 54.6196 181.419 55.231 181.419 56.2837 cv181.419 57.2915 180.776 58.0259 179.815 58.0259 cv178.862 58.0259 178.22 57.2915 178.22 56.2837 cvcpf184.853 57.0728 mo184.37 57.0728 183.979 56.688 183.979 56.1978 cv183.976 55.7134 184.364 55.3228 184.853 55.3228 cv185.337 55.3228 185.728 55.7134 185.728 56.1978 cv185.728 56.6821 185.337 57.0728 184.853 57.0728 cvcpf189.507 57.9478 mo189.507 53.8521 li188.054 53.8521 li188.054 53.3979 li191.597 53.3979 li191.597 53.8521 li190.136 53.8521 li190.136 57.9478 li189.507 57.9478 licpf192.085 56.2837 mo192.085 56.895 192.292 57.6099 193.052 57.6099 cv193.817 57.6099 194.024 56.895 194.024 56.2837 cv194.024 55.6987 193.784 55.0356 193.052 55.0356 cv192.325 55.0356 192.085 55.6987 192.085 56.2837 cvcp191.456 56.2837 mo191.456 55.231 192.233 54.6196 193.052 54.6196 cv193.868 54.6196 194.655 55.231 194.655 56.2837 cv194.655 57.2915 194.013 58.0259 193.052 58.0259 cv192.097 58.0259 191.456 57.2915 191.456 56.2837 cvcpf195.997 55.1001 mo196.231 54.854 li196.368 54.7173 196.581 54.6196 196.718 54.6196 cv196.86 54.6196 197.075 54.7231 197.257 54.938 cv196.991 55.3149 li196.847 55.2437 196.704 55.1782 196.556 55.1782 cv196.257 55.1782 196.011 55.4771 196.011 56.1997 cv196.011 57.9478 li195.427 57.9478 li195.427 54.6978 li195.997 54.6978 li195.997 55.1001 licpf198.126 56.2837 mo198.126 56.895 198.333 57.6099 199.093 57.6099 cv199.858 57.6099 200.065 56.895 200.065 56.2837 cv200.065 55.6987 199.825 55.0356 199.093 55.0356 cv198.366 55.0356 198.126 55.6987 198.126 56.2837 cvcp197.497 56.2837 mo197.497 55.231 198.274 54.6196 199.093 54.6196 cv199.911 54.6196 200.696 55.231 200.696 56.2837 cv200.696 57.2915 200.054 58.0259 199.093 58.0259 cv198.14 58.0259 197.497 57.2915 197.497 56.2837 cvcpf202.046 55.1001 mo202.351 54.7759 202.817 54.6196 203.155 54.6196 cv203.901 54.6196 204.304 55.0356 204.304 55.855 cv204.304 57.9478 li203.72 57.9478 li203.72 55.978 li203.72 55.3677 203.46 55.0493 202.935 55.0493 cv202.474 55.0493 202.052 55.3677 202.052 55.9907 cv202.052 57.9478 li201.468 57.9478 li201.468 54.6978 li202.046 54.6978 li202.046 55.1001 licpf206.017 54.6978 mo206.866 54.6978 li206.866 55.0356 li206.017 55.0356 li206.017 56.8755 li206.017 57.3306 206.106 57.603 206.464 57.603 cv206.679 57.603 206.802 57.5513 206.911 57.4927 cv207.056 57.8179 li206.854 57.9478 206.614 58.0259 206.394 58.0259 cv205.743 58.0259 205.433 57.6489 205.433 56.9858 cv205.433 55.0356 li204.978 55.0356 li204.978 54.6978 li205.433 54.6978 li205.433 53.9185 li206.017 53.7231 li206.017 54.6978 licpf207.976 56.2837 mo207.976 56.895 208.185 57.6099 208.942 57.6099 cv209.708 57.6099 209.917 56.895 209.917 56.2837 cv209.917 55.6987 209.677 55.0356 208.942 55.0356 cv208.216 55.0356 207.976 55.6987 207.976 56.2837 cvcp207.347 56.2837 mo207.347 55.231 208.126 54.6196 208.942 54.6196 cv209.761 54.6196 210.546 55.231 210.546 56.2837 cv210.546 57.2915 209.903 58.0259 208.942 58.0259 cv207.989 58.0259 207.347 57.2915 207.347 56.2837 cvcpf214.854 56.1978 mo214.854 55.7134 214.464 55.3228 213.981 55.3228 cv213.491 55.3228 213.103 55.7134 213.106 56.1978 cv213.106 56.688 213.497 57.0728 213.981 57.0728 cv214.464 57.0728 214.854 56.6821 214.854 56.1978 cvcpf219.821 54.1001 mo219.601 53.937 219.31 53.7749 219.036 53.7749 cv218.583 53.7749 218.329 54.0415 218.329 54.3921 cv218.329 54.7173 218.608 54.9575 219.192 55.3804 cv219.815 55.8354 220.179 56.2515 220.179 56.8364 cv220.179 57.5571 219.497 58.0259 218.771 58.0259 cv218.335 58.0259 217.817 57.8696 217.491 57.5513 cv217.771 57.1743 li218.036 57.3628 218.329 57.5708 218.757 57.5708 cv219.206 57.5708 219.55 57.3306 219.55 56.8228 cv219.55 56.2515 218.868 55.8813 218.497 55.6079 cv218.122 55.3149 217.7 55.0356 217.7 54.3921 cv217.7 53.7817 218.29 53.3198 218.997 53.3198 cv219.472 53.3198 219.866 53.4888 220.12 53.7749 cv219.821 54.1001 licpf221.196 54.6333 mo221.528 55.4575 221.866 56.2896 222.19 57.272 cv222.202 57.272 li222.54 56.2896 222.878 55.4575 223.222 54.6333 cv223.735 54.7563 li222.067 58.52 li221.761 59.2095 221.36 59.5728 220.802 59.5728 cv220.509 59.5728 li220.509 59.1567 li220.737 59.1567 li221.14 59.1567 221.425 59.0532 221.886 57.7661 cv220.612 54.7954 li221.196 54.6333 licpf226.608 56.2192 mo226.608 55.6079 226.278 55.0356 225.642 55.0356 cv224.968 55.0356 224.688 55.5688 224.688 56.2583 cv224.688 56.9536 224.987 57.6099 225.603 57.6099 cv226.31 57.6099 226.608 56.9399 226.608 56.2192 cvcp226.608 57.4341 mo226.597 57.4341 li226.368 57.7524 226.024 58.0259 225.493 58.0259 cv224.616 58.0259 224.06 57.3237 224.06 56.2837 cv224.06 55.439 224.669 54.6196 225.558 54.6196 cv225.999 54.6196 226.396 54.7886 226.597 55.1001 cv226.608 55.1001 li226.608 53.1704 li227.192 53.1704 li227.192 57.9478 li226.608 57.9478 li226.608 57.4341 licpf228.751 54.6978 mo228.173 54.6978 li228.173 57.9478 li228.757 57.9478 li228.757 55.9907 li228.757 55.3677 229.179 55.0493 229.64 55.0493 cv230.165 55.0493 230.425 55.3677 230.425 55.978 cv230.425 57.9478 li231.009 57.9478 li231.009 55.855 li231.009 55.0356 230.606 54.6196 229.86 54.6196 cv229.522 54.6196 229.056 54.7759 228.751 55.1001 cv228.751 54.6978 licpf234.038 55.9712 mo234.038 55.4653 233.825 55.0356 233.312 55.0356 cv232.688 55.0356 232.442 55.5552 232.423 55.9712 cv234.038 55.9712 licp232.384 56.3618 mo232.378 57.0122 232.839 57.6099 233.481 57.6099 cv233.778 57.6099 234.144 57.4985 234.37 57.3306 cv234.538 57.6489 li234.2 57.8892 233.798 58.0259 233.462 58.0259 cv232.448 58.0259 231.78 57.4019 231.78 56.2583 cv231.78 55.1333 232.585 54.6196 233.319 54.6196 cv234.306 54.6196 234.636 55.5103 234.571 56.3618 cv232.384 56.3618 licpf235.485 54.6333 mo235.817 55.4575 236.153 56.2896 236.479 57.272 cv236.491 57.272 li236.829 56.2896 237.167 55.4575 237.511 54.6333 cv238.022 54.7563 li236.354 58.52 li236.05 59.2095 235.647 59.5728 235.091 59.5728 cv234.798 59.5728 li234.798 59.1567 li235.024 59.1567 li235.427 59.1567 235.714 59.0532 236.173 57.7661 cv234.901 54.7954 li235.485 54.6333 licpf242.104 56.1978 mo242.104 55.7134 241.714 55.3228 241.231 55.3228 cv240.741 55.3228 240.353 55.7134 240.356 56.1978 cv240.356 56.688 240.747 57.0728 241.231 57.0728 cv241.714 57.0728 242.104 56.6821 242.104 56.1978 cvcpf247.071 54.1001 mo246.851 53.937 246.56 53.7749 246.286 53.7749 cv245.833 53.7749 245.579 54.0415 245.579 54.3921 cv245.579 54.7173 245.858 54.9575 246.442 55.3804 cv247.065 55.8354 247.429 56.2515 247.429 56.8364 cv247.429 57.5571 246.747 58.0259 246.021 58.0259 cv245.585 58.0259 245.067 57.8696 244.741 57.5513 cv245.021 57.1743 li245.288 57.3628 245.579 57.5708 246.007 57.5708 cv246.456 57.5708 246.8 57.3306 246.8 56.8228 cv246.8 56.2515 246.118 55.8813 245.747 55.6079 cv245.372 55.3149 244.95 55.0356 244.95 54.3921 cv244.95 53.7817 245.54 53.3198 246.247 53.3198 cv246.722 53.3198 247.116 53.4888 247.37 53.7749 cv247.071 54.1001 licpf248.868 54.6978 mo248.868 57.9478 li248.284 57.9478 li248.284 54.6978 li248.868 54.6978 licp248.208 53.6255 mo248.208 53.4634 248.343 53.2808 248.577 53.2808 cv248.812 53.2808 248.946 53.4634 248.946 53.6255 cv248.946 53.8013 248.862 54.022 248.577 54.022 cv248.292 54.022 248.208 53.8013 248.208 53.6255 cvcpf250.438 55.1001 mo250.745 54.7759 251.212 54.6196 251.55 54.6196 cv252.296 54.6196 252.698 55.0356 252.698 55.855 cv252.698 57.9478 li252.114 57.9478 li252.114 55.978 li252.114 55.3677 251.854 55.0493 251.329 55.0493 cv250.868 55.0493 250.446 55.3677 250.446 55.9907 cv250.446 57.9478 li249.862 57.9478 li249.862 54.6978 li250.438 54.6978 li250.438 55.1001 licpf256.021 56.2192 mo256.021 55.6079 255.688 55.0356 255.054 55.0356 cv254.378 55.0356 254.099 55.5688 254.099 56.2583 cv254.099 56.9536 254.397 57.6099 255.015 57.6099 cv255.722 57.6099 256.021 56.9399 256.021 56.2192 cvcp256.604 57.8306 mo256.604 59.0728 255.831 59.5728 254.956 59.5728 cv254.476 59.5728 253.995 59.481 253.618 59.2485 cv253.78 58.8638 li254.177 59.0923 254.54 59.1567 254.942 59.1567 cv255.61 59.1567 256.021 58.7271 256.021 57.8765 cv256.021 57.4341 li256.007 57.4341 li255.78 57.7524 255.437 58.0259 254.923 58.0259 cv254.028 58.0259 253.47 57.3237 253.47 56.2837 cv253.47 55.439 254.093 54.6196 255.021 54.6196 cv255.409 54.6196 255.825 54.8149 256.007 55.147 cv256.021 55.147 li256.021 54.6978 li256.604 54.6978 li256.604 57.8306 licpf258.745 56.2056 mo258.233 56.3618 257.966 56.6089 257.966 57.0181 cv257.966 57.356 258.2 57.5708 258.435 57.5708 cv258.849 57.5708 259.382 57.0571 259.304 56.0435 cv258.745 56.2056 licp259.095 57.5962 mo258.868 57.8247 258.583 58.0259 258.284 58.0259 cv257.739 58.0259 257.362 57.6353 257.362 57.0249 cv257.362 56.4595 257.843 56.1021 258.519 55.9009 cv259.304 55.6528 li259.276 55.2563 258.972 55.0034 258.655 55.0034 cv258.278 55.0034 258.038 55.1587 257.804 55.354 cv257.577 55.061 li257.901 54.7495 258.233 54.6196 258.687 54.6196 cv259.173 54.6196 259.888 54.7759 259.888 55.7251 cv259.888 57.1548 li259.888 57.4019 259.919 57.7134 260.03 57.9478 cv259.394 57.9478 li259.315 57.811 259.304 57.603 259.304 57.395 cv259.095 57.5962 licpf263.366 56.2319 mo263.366 55.6401 263.067 55.0356 262.464 55.0356 cv261.802 55.0356 261.444 55.5493 261.444 56.3872 cv261.444 57.0122 261.729 57.6099 262.456 57.6099 cv263.157 57.6099 263.366 56.8228 263.366 56.2319 cvcp261.444 55.2046 mo261.458 55.2046 li261.698 54.8149 262.159 54.6196 262.522 54.6196 cv263.788 54.6196 263.995 55.7573 263.995 56.2251 cv263.995 57.2134 263.411 58.0259 262.456 58.0259 cv262.048 58.0259 261.698 57.8306 261.458 57.5181 cv261.444 57.5181 li261.444 59.5728 li260.86 59.5728 li260.86 54.6978 li261.444 54.6978 li261.444 55.2046 licpf265.177 56.2837 mo265.177 56.895 265.384 57.6099 266.144 57.6099 cv266.909 57.6099 267.116 56.895 267.116 56.2837 cv267.116 55.6987 266.876 55.0356 266.144 55.0356 cv265.415 55.0356 265.177 55.6987 265.177 56.2837 cvcp264.546 56.2837 mo264.546 55.231 265.325 54.6196 266.144 54.6196 cv266.96 54.6196 267.745 55.231 267.745 56.2837 cv267.745 57.2915 267.103 58.0259 266.144 58.0259 cv265.188 58.0259 264.546 57.2915 264.546 56.2837 cvcpf269.089 55.1001 mo269.323 54.854 li269.458 54.7173 269.673 54.6196 269.81 54.6196 cv269.952 54.6196 270.165 54.7231 270.347 54.938 cv270.081 55.3149 li269.938 55.2437 269.796 55.1782 269.647 55.1782 cv269.349 55.1782 269.103 55.4771 269.103 56.1997 cv269.103 57.9478 li268.519 57.9478 li268.519 54.6978 li269.089 54.6978 li269.089 55.1001 licpf272.847 55.9712 mo272.847 55.4653 272.632 55.0356 272.118 55.0356 cv271.495 55.0356 271.249 55.5552 271.229 55.9712 cv272.847 55.9712 licp271.19 56.3618 mo271.185 57.0122 271.646 57.6099 272.288 57.6099 cv272.587 57.6099 272.95 57.4985 273.177 57.3306 cv273.345 57.6489 li273.009 57.8892 272.606 58.0259 272.269 58.0259 cv271.257 58.0259 270.587 57.4019 270.587 56.2583 cv270.587 55.1333 271.392 54.6196 272.126 54.6196 cv273.112 54.6196 273.442 55.5103 273.378 56.3618 cv271.19 56.3618 licpf276.794 57.0728 mo276.31 57.0728 275.919 56.688 275.919 56.1978 cv275.915 55.7134 276.304 55.3228 276.794 55.3228 cv277.276 55.3228 277.667 55.7134 277.667 56.1978 cv277.667 56.6821 277.276 57.0728 276.794 57.0728 cvcpf283.983 57.9478 mo283.354 57.9478 li283.354 55.686 li281.136 55.686 li281.136 57.9478 li280.505 57.9478 li280.505 53.3979 li281.136 53.3979 li281.136 55.231 li283.354 55.231 li283.354 53.3979 li283.983 53.3979 li283.983 57.9478 licpf285.45 56.2837 mo285.45 56.895 285.657 57.6099 286.417 57.6099 cv287.183 57.6099 287.39 56.895 287.39 56.2837 cv287.39 55.6987 287.149 55.0356 286.417 55.0356 cv285.69 55.0356 285.45 55.6987 285.45 56.2837 cvcp284.821 56.2837 mo284.821 55.231 285.599 54.6196 286.417 54.6196 cv287.235 54.6196 288.021 55.231 288.021 56.2837 cv288.021 57.2915 287.378 58.0259 286.417 58.0259 cv285.464 58.0259 284.821 57.2915 284.821 56.2837 cvcpf289.37 55.1001 mo289.675 54.7759 290.142 54.6196 290.479 54.6196 cv291.226 54.6196 291.628 55.0356 291.628 55.855 cv291.628 57.9478 li291.044 57.9478 li291.044 55.978 li291.044 55.3677 290.784 55.0493 290.259 55.0493 cv289.798 55.0493 289.376 55.3677 289.376 55.9907 cv289.376 57.9478 li288.792 57.9478 li288.792 54.6978 li289.37 54.6978 li289.37 55.1001 licpf294.95 56.2192 mo294.95 55.6079 294.62 55.0356 293.983 55.0356 cv293.308 55.0356 293.03 55.5688 293.03 56.2583 cv293.03 56.9536 293.327 57.6099 293.944 57.6099 cv294.651 57.6099 294.95 56.9399 294.95 56.2192 cvcp295.534 57.8306 mo295.534 59.0728 294.763 59.5728 293.886 59.5728 cv293.405 59.5728 292.925 59.481 292.55 59.2485 cv292.712 58.8638 li293.106 59.0923 293.47 59.1567 293.872 59.1567 cv294.542 59.1567 294.95 58.7271 294.95 57.8765 cv294.95 57.4341 li294.937 57.4341 li294.71 57.7524 294.366 58.0259 293.854 58.0259 cv292.958 58.0259 292.399 57.3237 292.399 56.2837 cv292.399 55.439 293.022 54.6196 293.95 54.6196 cv294.341 54.6196 294.755 54.8149 294.937 55.147 cv294.95 55.147 li294.95 54.6978 li295.534 54.6978 li295.534 57.8306 licpf299.103 55.4321 mo301.069 53.3325 li301.497 53.6118 li299.739 55.4653 li301.731 57.772 li301.114 58.0122 li299.116 55.5884 li299.103 55.5884 li299.103 57.9478 li298.474 57.9478 li298.474 53.3979 li299.103 53.3979 li299.103 55.4321 licpf302.698 56.2837 mo302.698 56.895 302.905 57.6099 303.665 57.6099 cv304.431 57.6099 304.638 56.895 304.638 56.2837 cv304.638 55.6987 304.397 55.0356 303.665 55.0356 cv302.938 55.0356 302.698 55.6987 302.698 56.2837 cvcp302.069 56.2837 mo302.069 55.231 302.847 54.6196 303.665 54.6196 cv304.481 54.6196 305.267 55.231 305.267 56.2837 cv305.267 57.2915 304.626 58.0259 303.665 58.0259 cv302.71 58.0259 302.069 57.2915 302.069 56.2837 cvcpf306.618 55.1001 mo306.923 54.7759 307.39 54.6196 307.728 54.6196 cv308.474 54.6196 308.876 55.0356 308.876 55.855 cv308.876 57.9478 li308.292 57.9478 li308.292 55.978 li308.292 55.3677 308.032 55.0493 307.507 55.0493 cv307.046 55.0493 306.624 55.3677 306.624 55.9907 cv306.624 57.9478 li306.04 57.9478 li306.04 54.6978 li306.618 54.6978 li306.618 55.1001 licpf312.198 56.2192 mo312.198 55.6079 311.866 55.0356 311.231 55.0356 cv310.556 55.0356 310.276 55.5688 310.276 56.2583 cv310.276 56.9536 310.575 57.6099 311.192 57.6099 cv311.899 57.6099 312.198 56.9399 312.198 56.2192 cvcp312.782 57.8306 mo312.782 59.0728 312.009 59.5728 311.134 59.5728 cv310.653 59.5728 310.173 59.481 309.796 59.2485 cv309.96 58.8638 li310.354 59.0923 310.718 59.1567 311.12 59.1567 cv311.788 59.1567 312.198 58.7271 312.198 57.8765 cv312.198 57.4341 li312.185 57.4341 li311.958 57.7524 311.614 58.0259 311.101 58.0259 cv310.206 58.0259 309.647 57.3237 309.647 56.2837 cv309.647 55.439 310.271 54.6196 311.198 54.6196 cv311.587 54.6196 312.003 54.8149 312.185 55.147 cv312.198 55.147 li312.198 54.6978 li312.782 54.6978 li312.782 57.8306 licpf1.45361 66.9478 mo1.45361 62.8521 li0 62.8521 li0 62.397 li3.54346 62.397 li3.54346 62.8521 li2.08301 62.8521 li2.08301 66.9478 li1.45361 66.9478 licpf3.99902 65.2837 mo3.99902 65.895 4.20654 66.6099 4.96582 66.6099 cv5.73145 66.6099 5.93896 65.895 5.93896 65.2837 cv5.93896 64.6997 5.69922 64.0356 4.96582 64.0356 cv4.23877 64.0356 3.99902 64.6997 3.99902 65.2837 cvcp3.36963 65.2837 mo3.36963 64.231 4.14795 63.6196 4.96582 63.6196 cv5.7832 63.6196 6.56836 64.231 6.56836 65.2837 cv6.56836 66.2915 5.92627 67.0259 4.96582 67.0259 cv4.01172 67.0259 3.36963 66.2915 3.36963 65.2837 cvcpf7.30811 62.1704 mo7.89258 62.1704 li7.89258 65.0103 li7.98975 65.0103 li9.26172 63.6333 li9.69629 63.8794 li8.5415 65.0884 li9.91064 66.7466 li9.33301 67.0122 li7.90527 65.1724 li7.89258 65.1724 li7.89258 66.9478 li7.30811 66.9478 li7.30811 62.1704 licpf10.5659 63.6333 mo10.8965 64.4575 11.2344 65.2896 11.5586 66.272 cv11.5718 66.272 li11.9092 65.2896 12.2466 64.4575 12.5903 63.6333 cv13.103 63.7563 li11.4351 67.52 li11.1304 68.2095 10.728 68.5728 10.1699 68.5728 cv9.87793 68.5728 li9.87793 68.1567 li10.105 68.1567 li10.5073 68.1567 10.793 68.0532 11.2534 66.7661 cv9.98193 63.7954 li10.5659 63.6333 licpf14.0244 65.2837 mo14.0244 65.895 14.2319 66.6099 14.9912 66.6099 cv15.7568 66.6099 15.9648 65.895 15.9648 65.2837 cv15.9648 64.6997 15.7246 64.0356 14.9912 64.0356 cv14.2646 64.0356 14.0244 64.6997 14.0244 65.2837 cvcp13.395 65.2837 mo13.395 64.231 14.1738 63.6196 14.9912 63.6196 cv15.8091 63.6196 16.5942 64.231 16.5942 65.2837 cv16.5942 66.2915 15.9517 67.0259 14.9912 67.0259 cv14.0376 67.0259 13.395 66.2915 13.395 65.2837 cvcpf19.9639 66.0728 mo19.4795 66.0728 19.0903 65.688 19.0903 65.1978 cv19.0854 64.7134 19.4746 64.3228 19.9639 64.3228 cv20.4482 64.3228 20.8374 64.7134 20.8374 65.1978 cv20.8374 65.6821 20.4482 66.0728 19.9639 66.0728 cvcpf25.7476 63.1001 mo25.5269 62.938 25.2349 62.7739 24.9624 62.7739 cv24.5083 62.7739 24.2549 63.0415 24.2549 63.3931 cv24.2549 63.7173 24.5342 63.9575 25.1182 64.3794 cv25.7412 64.8345 26.1045 65.2505 26.1045 65.8364 cv26.1045 66.5571 25.4229 67.0259 24.6963 67.0259 cv24.2617 67.0259 23.7422 66.8696 23.418 66.5513 cv23.6968 66.1743 li23.9629 66.3618 24.2549 66.5708 24.6831 66.5708 cv25.1309 66.5708 25.4751 66.3306 25.4751 65.8228 cv25.4751 65.2505 24.7935 64.8813 24.4238 64.6079 cv24.0474 64.3149 23.6255 64.0356 23.6255 63.3931 cv23.6255 62.7817 24.2163 62.3188 24.9233 62.3188 cv25.397 62.3188 25.793 62.4888 26.0459 62.7739 cv25.7476 63.1001 licpf28.9658 64.9712 mo28.9658 64.4653 28.752 64.0356 28.2393 64.0356 cv27.6162 64.0356 27.3696 64.5552 27.3501 64.9712 cv28.9658 64.9712 licp27.3115 65.3618 mo27.3047 66.0122 27.7656 66.6099 28.4082 66.6099 cv28.7065 66.6099 29.0698 66.4985 29.2969 66.3306 cv29.4658 66.6489 li29.1284 66.8892 28.7261 67.0259 28.3887 67.0259 cv27.376 67.0259 26.708 66.4009 26.708 65.2583 cv26.708 64.1333 27.5127 63.6196 28.2456 63.6196 cv29.2319 63.6196 29.563 64.5103 29.498 65.3618 cv27.3115 65.3618 licpf30.627 65.2837 mo30.627 65.895 30.835 66.6099 31.5942 66.6099 cv32.3599 66.6099 32.5674 65.895 32.5674 65.2837 cv32.5674 64.6997 32.3271 64.0356 31.5942 64.0356 cv30.8672 64.0356 30.627 64.6997 30.627 65.2837 cvcp29.9976 65.2837 mo29.9976 64.231 30.7764 63.6196 31.5942 63.6196 cv32.4116 63.6196 33.1968 64.231 33.1968 65.2837 cv33.1968 66.2915 32.5542 67.0259 31.5942 67.0259 cv30.6401 67.0259 29.9976 66.2915 29.9976 65.2837 cvcpf36.104 66.5708 mo35.7729 66.856 35.481 67.0259 35.0591 67.0259 cv34.313 67.0259 33.9106 66.6099 33.9106 65.7915 cv33.9106 63.6978 li34.4946 63.6978 li34.4946 65.6606 li34.4946 66.272 34.7544 66.5962 35.2798 66.5962 cv35.7275 66.5962 36.0977 66.2271 36.0977 65.5962 cv36.0977 63.6978 li36.6816 63.6978 li36.6816 66.9478 li36.104 66.9478 li36.104 66.5708 licpf37.6416 66.9478 mo37.6416 62.1704 li38.2261 62.1704 li38.2261 66.9478 li37.6416 66.9478 licpf41.8164 66.0728 mo41.332 66.0728 40.9429 65.688 40.9429 65.1978 cv40.9375 64.7134 41.3271 64.3228 41.8164 64.3228 cv42.3003 64.3228 42.6899 64.7134 42.6899 65.1978 cv42.6899 65.6821 42.3003 66.0728 41.8164 66.0728 cvcpf46.4121 66.9478 mo46.4121 62.8521 li44.959 62.8521 li44.959 62.397 li48.502 62.397 li48.502 62.8521 li47.042 62.8521 li47.042 66.9478 li46.4121 66.9478 licpf49.7104 65.2056 mo49.1978 65.3618 48.9316 65.6079 48.9316 66.0181 cv48.9316 66.356 49.165 66.5708 49.3989 66.5708 cv49.814 66.5708 50.3462 66.0571 50.2681 65.0435 cv49.7104 65.2056 licp50.0605 66.5962 mo49.8335 66.8247 49.5479 67.0259 49.2495 67.0259 cv48.7046 67.0259 48.3281 66.6353 48.3281 66.0239 cv48.3281 65.4595 48.8081 65.1021 49.4829 64.9009 cv50.2681 64.6528 li50.2422 64.2563 49.9375 64.0024 49.6196 64.0024 cv49.2432 64.0024 49.0029 64.1587 48.7695 64.354 cv48.542 64.061 li48.8667 63.7505 49.1978 63.6196 49.6519 63.6196 cv50.1387 63.6196 50.8525 63.7759 50.8525 64.7251 cv50.8525 66.1548 li50.8525 66.4009 50.8848 66.7134 50.9951 66.9478 cv50.3594 66.9478 li50.2813 66.811 50.2681 66.604 50.2681 66.395 cv50.0605 66.5962 licpf52.3774 63.6978 mo52.3774 66.9478 li51.7935 66.9478 li51.7935 63.6978 li52.3774 63.6978 licp51.7153 62.6255 mo51.7153 62.4634 51.8516 62.2798 52.0854 62.2798 cv52.3188 62.2798 52.4551 62.4634 52.4551 62.6255 cv52.4551 62.8013 52.3706 63.022 52.0854 63.022 cv51.7998 63.022 51.7153 62.8013 51.7153 62.6255 cvcpf55.8423 65.231 mo55.8423 64.6411 55.5439 64.0356 54.9404 64.0356 cv54.2783 64.0356 53.9214 64.5493 53.9214 65.3872 cv53.9214 66.0122 54.207 66.6099 54.9341 66.6099 cv55.6348 66.6099 55.8423 65.8228 55.8423 65.231 cvcp53.9214 64.2056 mo53.9346 64.2056 li54.1748 63.8149 54.6353 63.6196 54.9985 63.6196 cv56.2642 63.6196 56.4717 64.7563 56.4717 65.2251 cv56.4717 66.2134 55.8877 67.0259 54.9341 67.0259 cv54.5249 67.0259 54.1748 66.8306 53.9346 66.5181 cv53.9214 66.5181 li53.9214 68.5728 li53.3374 68.5728 li53.3374 63.6978 li53.9214 63.6978 li53.9214 64.2056 licpf59.249 64.9712 mo59.249 64.4653 59.0347 64.0356 58.5225 64.0356 cv57.8994 64.0356 57.6528 64.5552 57.6333 64.9712 cv59.249 64.9712 licp57.5942 65.3618 mo57.5879 66.0122 58.0483 66.6099 58.6909 66.6099 cv58.9893 66.6099 59.353 66.4985 59.5801 66.3306 cv59.7485 66.6489 li59.4111 66.8892 59.0088 67.0259 58.6714 67.0259 cv57.6592 67.0259 56.9907 66.4009 56.9907 65.2583 cv56.9907 64.1333 57.7954 63.6196 58.5288 63.6196 cv59.5151 63.6196 59.8462 64.5103 59.7813 65.3618 cv57.5942 65.3618 licpf61.0854 63.6978 mo61.0854 66.9478 li60.5015 66.9478 li60.5015 63.6978 li61.0854 63.6978 licp60.4233 62.6255 mo60.4233 62.4634 60.5596 62.2798 60.7935 62.2798 cv61.0269 62.2798 61.1631 62.4634 61.1631 62.6255 cv61.1631 62.8013 61.0791 63.022 60.7935 63.022 cv60.5078 63.022 60.4233 62.8013 60.4233 62.6255 cvcpf64.6758 66.0728 mo64.1914 66.0728 63.8022 65.688 63.8022 65.1978 cv63.7974 64.7134 64.1865 64.3228 64.6758 64.3228 cv65.1597 64.3228 65.5493 64.7134 65.5493 65.1978 cv65.5493 65.6821 65.1597 66.0728 64.6758 66.0728 cvcpf72.3086 66.9478 mo71.8154 66.9478 li70.8291 65.7642 69.1357 63.7231 68.8633 63.3267 cv68.8501 63.3267 li68.8501 66.9478 li68.3311 66.9478 li68.3311 62.397 li68.7983 62.397 li69.7974 63.5806 71.4717 65.5688 71.7769 66.0239 cv71.7896 66.0239 li71.7896 62.397 li72.3086 62.397 li72.3086 66.9478 licpf75.3716 64.9712 mo75.3716 64.4653 75.1572 64.0356 74.6445 64.0356 cv74.022 64.0356 73.7754 64.5552 73.7559 64.9712 cv75.3716 64.9712 licp73.7168 65.3618 mo73.7104 66.0122 74.1709 66.6099 74.8135 66.6099 cv75.1118 66.6099 75.4756 66.4985 75.7026 66.3306 cv75.8711 66.6489 li75.5337 66.8892 75.1313 67.0259 74.7939 67.0259 cv73.7817 67.0259 73.1133 66.4009 73.1133 65.2583 cv73.1133 64.1333 73.918 63.6196 74.6514 63.6196 cv75.6377 63.6196 75.9688 64.5103 75.9038 65.3618 cv73.7168 65.3618 licpf78.8887 63.6978 mo79.2065 64.4712 79.5244 65.2505 79.8359 66.1802 cv79.8491 66.1802 li80.1021 65.2251 80.3682 64.4321 80.6274 63.6333 cv81.166 63.7231 li80.0239 66.9478 li79.6152 66.9478 li79.291 66.1411 78.96 65.3364 78.6421 64.4126 cv78.6289 64.4126 li78.3174 65.3364 77.9995 66.1411 77.6816 66.9478 cv77.2988 66.9478 li76.1763 63.7759 li76.7471 63.6333 li77.0132 64.4321 77.2856 65.2251 77.5454 66.1802 cv77.5581 66.1802 li77.8696 65.2505 78.1875 64.4712 78.5059 63.6978 cv78.8887 63.6978 licpf84.2354 66.4927 mo84.936 66.4927 li86.2144 66.4927 86.8311 65.856 86.8311 64.5239 cv86.8311 63.5083 86.2666 62.8521 85.0723 62.8521 cv84.2354 62.8521 li84.2354 66.4927 licp85.0596 62.397 mo86.8896 62.397 87.5254 63.4438 87.5254 64.5356 cv87.5254 66.0435 86.5649 66.9478 84.9556 66.9478 cv83.606 66.9478 li83.606 62.397 li85.0596 62.397 licpf90.3545 64.9712 mo90.3545 64.4653 90.1406 64.0356 89.6279 64.0356 cv89.0049 64.0356 88.7583 64.5552 88.7388 64.9712 cv90.3545 64.9712 licp88.6997 65.3618 mo88.6934 66.0122 89.1543 66.6099 89.7964 66.6099 cv90.0952 66.6099 90.4585 66.4985 90.6855 66.3306 cv90.854 66.6489 li90.5166 66.8892 90.1143 67.0259 89.7769 67.0259 cv88.7646 67.0259 88.0962 66.4009 88.0962 65.2583 cv88.0962 64.1333 88.9009 63.6196 89.6343 63.6196 cv90.6206 63.6196 90.9517 64.5103 90.8867 65.3618 cv88.6997 65.3618 licpf91.6069 66.9478 mo91.6069 62.1704 li92.1909 62.1704 li92.1909 66.9478 li91.6069 66.9478 licpf93.7285 64.1001 mo94.0337 63.7759 94.501 63.6196 94.8384 63.6196 cv95.5845 63.6196 95.9868 64.0356 95.9868 64.854 cv95.9868 66.9478 li95.4028 66.9478 li95.4028 64.979 li95.4028 64.3677 95.1436 64.0493 94.6177 64.0493 cv94.1572 64.0493 93.7354 64.3677 93.7354 64.9907 cv93.7354 66.9478 li93.1514 66.9478 li93.1514 62.1704 li93.7285 62.1704 li93.7285 64.1001 licpf97.5313 63.6978 mo97.5313 66.9478 li96.9473 66.9478 li96.9473 63.6978 li97.5313 63.6978 licp96.8696 62.6255 mo96.8696 62.4634 97.0059 62.2798 97.2393 62.2798 cv97.4731 62.2798 97.6094 62.4634 97.6094 62.6255 cv97.6094 62.8013 97.5249 63.022 97.2393 63.022 cv96.9536 63.022 96.8696 62.8013 96.8696 62.6255 cvcpf101.122 66.0728 mo100.637 66.0728 100.248 65.688 100.248 65.1978 cv100.243 64.7134 100.632 64.3228 101.122 64.3228 cv101.606 64.3228 101.995 64.7134 101.995 65.1978 cv101.995 65.6821 101.606 66.0728 101.122 66.0728 cvcpf108.209 63.1704 mo107.996 62.9966 107.509 62.7739 107.022 62.7739 cv105.899 62.7739 105.238 63.5806 105.238 64.647 cv105.238 65.7974 106.029 66.5708 107.022 66.5708 cv107.515 66.5708 107.905 66.4146 108.17 66.2329 cv108.417 66.6099 li108.112 66.8169 107.574 67.0259 106.99 67.0259 cv105.367 67.0259 104.543 65.9146 104.543 64.6606 cv104.543 63.5161 105.439 62.3188 107.067 62.3188 cv107.716 62.3188 108.17 62.5474 108.469 62.7817 cv108.209 63.1704 licpf110.312 65.2056 mo109.799 65.3618 109.533 65.6079 109.533 66.0181 cv109.533 66.356 109.767 66.5708 110 66.5708 cv110.416 66.5708 110.948 66.0571 110.87 65.0435 cv110.312 65.2056 licp110.663 66.5962 mo110.435 66.8247 110.15 67.0259 109.851 67.0259 cv109.306 67.0259 108.93 66.6353 108.93 66.0239 cv108.93 65.4595 109.41 65.1021 110.085 64.9009 cv110.87 64.6528 li110.844 64.2563 110.539 64.0024 110.221 64.0024 cv109.845 64.0024 109.604 64.1587 109.371 64.354 cv109.144 64.061 li109.468 63.7505 109.799 63.6196 110.253 63.6196 cv110.74 63.6196 111.454 63.7759 111.454 64.7251 cv111.454 66.1548 li111.454 66.4009 111.486 66.7134 111.597 66.9478 cv110.961 66.9478 li110.883 66.811 110.87 66.604 110.87 66.395 cv110.663 66.5962 licpf114.9 65.231 mo114.9 64.6411 114.601 64.0356 113.998 64.0356 cv113.336 64.0356 112.979 64.5493 112.979 65.3872 cv112.979 66.0122 113.265 66.6099 113.991 66.6099 cv114.692 66.6099 114.9 65.8228 114.9 65.231 cvcp112.979 64.2056 mo112.992 64.2056 li113.232 63.8149 113.693 63.6196 114.056 63.6196 cv115.322 63.6196 115.529 64.7563 115.529 65.2251 cv115.529 66.2134 114.945 67.0259 113.991 67.0259 cv113.583 67.0259 113.232 66.8306 112.992 66.5181 cv112.979 66.5181 li112.979 68.5728 li112.395 68.5728 li112.395 63.6978 li112.979 63.6978 li112.979 64.2056 licpf118.307 64.9712 mo118.307 64.4653 118.092 64.0356 117.58 64.0356 cv116.957 64.0356 116.71 64.5552 116.69 64.9712 cv118.307 64.9712 licp116.652 65.3618 mo116.645 66.0122 117.106 66.6099 117.749 66.6099 cv118.047 66.6099 118.41 66.4985 118.637 66.3306 cv118.806 66.6489 li118.469 66.8892 118.066 67.0259 117.729 67.0259 cv116.717 67.0259 116.048 66.4009 116.048 65.2583 cv116.048 64.1333 116.853 63.6196 117.586 63.6196 cv118.572 63.6196 118.903 64.5103 118.838 65.3618 cv116.652 65.3618 licpf122.427 66.9478 mo122.427 62.8521 li120.973 62.8521 li120.973 62.397 li124.516 62.397 li124.516 62.8521 li123.056 62.8521 li123.056 66.9478 li122.427 66.9478 licpf124.972 65.2837 mo124.972 65.895 125.18 66.6099 125.939 66.6099 cv126.705 66.6099 126.912 65.895 126.912 65.2837 cv126.912 64.6997 126.672 64.0356 125.939 64.0356 cv125.212 64.0356 124.972 64.6997 124.972 65.2837 cvcp124.343 65.2837 mo124.343 64.231 125.121 63.6196 125.939 63.6196 cv126.756 63.6196 127.542 64.231 127.542 65.2837 cv127.542 66.2915 126.899 67.0259 125.939 67.0259 cv124.985 67.0259 124.343 66.2915 124.343 65.2837 cvcpf130.546 63.6978 mo130.864 64.4712 131.182 65.2505 131.494 66.1802 cv131.506 66.1802 li131.76 65.2251 132.025 64.4321 132.285 63.6333 cv132.824 63.7231 li131.682 66.9478 li131.273 66.9478 li130.948 66.1411 130.618 65.3364 130.299 64.4126 cv130.287 64.4126 li129.975 65.3364 129.657 66.1411 129.339 66.9478 cv128.956 66.9478 li127.833 63.7759 li128.405 63.6333 li128.671 64.4321 128.943 65.2251 129.203 66.1802 cv129.216 66.1802 li129.527 65.2505 129.845 64.4712 130.163 63.6978 cv130.546 63.6978 licpf133.914 64.1001 mo134.219 63.7759 134.686 63.6196 135.023 63.6196 cv135.77 63.6196 136.172 64.0356 136.172 64.854 cv136.172 66.9478 li135.588 66.9478 li135.588 64.979 li135.588 64.3677 135.329 64.0493 134.803 64.0493 cv134.342 64.0493 133.92 64.3677 133.92 64.9907 cv133.92 66.9478 li133.336 66.9478 li133.336 63.6978 li133.914 63.6978 li133.914 64.1001 licpf139.762 66.0728 mo139.278 66.0728 138.889 65.688 138.889 65.1978 cv138.884 64.7134 139.273 64.3228 139.762 64.3228 cv140.247 64.3228 140.636 64.7134 140.636 65.1978 cv140.636 65.6821 140.247 66.0728 139.762 66.0728 cvcpf148.349 66.9478 mo147.72 66.9478 li147.72 63.2427 li147.707 63.2427 li147.525 63.7759 146.494 65.7837 145.883 66.9478 cv145.63 66.9478 li145.066 65.7837 144.125 63.8403 143.95 63.2427 cv143.937 63.2427 li143.937 66.9478 li143.417 66.9478 li143.417 62.397 li144.093 62.397 li144.677 63.606 145.261 64.8228 145.838 66.1021 cv146.48 64.8228 147.123 63.606 147.759 62.397 cv148.349 62.397 li148.349 66.9478 licpf150.537 65.2056 mo150.024 65.3618 149.757 65.6079 149.757 66.0181 cv149.757 66.356 149.991 66.5708 150.225 66.5708 cv150.64 66.5708 151.172 66.0571 151.094 65.0435 cv150.537 65.2056 licp150.886 66.5962 mo150.66 66.8247 150.374 67.0259 150.076 67.0259 cv149.531 67.0259 149.154 66.6353 149.154 66.0239 cv149.154 65.4595 149.634 65.1021 150.309 64.9009 cv151.094 64.6528 li151.068 64.2563 150.763 64.0024 150.446 64.0024 cv150.069 64.0024 149.829 64.1587 149.595 64.354 cv149.368 64.061 li149.693 63.7505 150.024 63.6196 150.478 63.6196 cv150.964 63.6196 151.678 63.7759 151.678 64.7251 cv151.678 66.1548 li151.678 66.4009 151.71 66.7134 151.821 66.9478 cv151.185 66.9478 li151.107 66.811 151.094 66.604 151.094 66.395 cv150.886 66.5962 licpf154.949 65.2192 mo154.949 64.6079 154.618 64.0356 153.982 64.0356 cv153.307 64.0356 153.028 64.5688 153.028 65.2583 cv153.028 65.9536 153.327 66.6099 153.943 66.6099 cv154.65 66.6099 154.949 65.9399 154.949 65.2192 cvcp154.949 66.4341 mo154.936 66.4341 li154.708 66.7524 154.365 67.0259 153.833 67.0259 cv152.957 67.0259 152.399 66.3247 152.399 65.2837 cv152.399 64.438 153.008 63.6196 153.898 63.6196 cv154.338 63.6196 154.735 63.7896 154.936 64.1001 cv154.949 64.1001 li154.949 62.1704 li155.533 62.1704 li155.533 66.9478 li154.949 66.9478 li154.949 66.4341 licpf157.051 64.1001 mo157.285 63.854 li157.421 63.7173 157.635 63.6196 157.771 63.6196 cv157.915 63.6196 158.128 63.7231 158.31 63.938 cv158.043 64.3149 li157.901 64.2446 157.758 64.1782 157.609 64.1782 cv157.311 64.1782 157.064 64.4771 157.064 65.1997 cv157.064 66.9478 li156.48 66.9478 li156.48 63.6978 li157.051 63.6978 li157.051 64.1001 licpf159.322 63.6978 mo159.322 66.9478 li158.738 66.9478 li158.738 63.6978 li159.322 63.6978 licp158.661 62.6255 mo158.661 62.4634 158.796 62.2798 159.03 62.2798 cv159.264 62.2798 159.4 62.4634 159.4 62.6255 cv159.4 62.8013 159.316 63.022 159.03 63.022 cv158.745 63.022 158.661 62.8013 158.661 62.6255 cvcpf162.612 65.2192 mo162.612 64.6079 162.281 64.0356 161.645 64.0356 cv160.97 64.0356 160.691 64.5688 160.691 65.2583 cv160.691 65.9536 160.99 66.6099 161.606 66.6099 cv162.314 66.6099 162.612 65.9399 162.612 65.2192 cvcp162.612 66.4341 mo162.599 66.4341 li162.372 66.7524 162.028 67.0259 161.496 67.0259 cv160.62 67.0259 160.062 66.3247 160.062 65.2837 cv160.062 64.438 160.672 63.6196 161.561 63.6196 cv162.002 63.6196 162.398 63.7896 162.599 64.1001 cv162.612 64.1001 li162.612 62.1704 li163.196 62.1704 li163.196 66.9478 li162.612 66.9478 li162.612 66.4341 licpf166.774 66.0728 mo166.29 66.0728 165.9 65.688 165.9 65.1978 cv165.895 64.7134 166.285 64.3228 166.774 64.3228 cv167.257 64.3228 167.647 64.7134 167.647 65.1978 cv167.647 65.6821 167.257 66.0728 166.774 66.0728 cvcpf175.36 66.9478 mo174.731 66.9478 li174.731 63.2427 li174.718 63.2427 li174.536 63.7759 173.505 65.7837 172.896 66.9478 cv172.642 66.9478 li172.077 65.7837 171.136 63.8403 170.96 63.2427 cv170.948 63.2427 li170.948 66.9478 li170.429 66.9478 li170.429 62.397 li171.104 62.397 li171.688 63.606 172.272 64.8228 172.849 66.1021 cv173.491 64.8228 174.134 63.606 174.771 62.397 cv175.36 62.397 li175.36 66.9478 licpf178.423 64.9712 mo178.423 64.4653 178.21 64.0356 177.696 64.0356 cv177.073 64.0356 176.827 64.5552 176.808 64.9712 cv178.423 64.9712 licp176.769 65.3618 mo176.763 66.0122 177.224 66.6099 177.864 66.6099 cv178.163 66.6099 178.526 66.4985 178.755 66.3306 cv178.923 66.6489 li178.585 66.8892 178.183 67.0259 177.847 67.0259 cv176.833 67.0259 176.165 66.4009 176.165 65.2583 cv176.165 64.1333 176.97 63.6196 177.702 63.6196 cv178.688 63.6196 179.021 64.5103 178.956 65.3618 cv176.769 65.3618 licpf181.843 67.0122 mo180.823 65.5825 li179.817 67.0122 li179.358 66.7388 li180.552 65.2114 li179.54 63.8931 li180.097 63.6333 li180.929 64.8228 li181.784 63.6333 li182.239 63.8345 li181.2 65.186 li182.401 66.7524 li181.843 67.0122 licpf183.044 63.6978 mo183.044 66.9478 li183.628 66.9478 li183.628 63.6978 li183.044 63.6978 licp183.335 63.022 mo183.62 63.022 183.706 62.8013 183.706 62.6255 cv183.706 62.4634 183.569 62.2798 183.335 62.2798 cv183.103 62.2798 182.966 62.4634 182.966 62.6255 cv182.966 62.8013 183.05 63.022 183.335 63.022 cvcpf187.079 66.688 mo186.761 66.9146 186.378 67.0259 186.101 67.0259 cv184.562 67.0259 184.366 65.7642 184.366 65.3169 cv184.366 64.5044 184.905 63.6196 186.126 63.6196 cv186.456 63.6196 186.755 63.7036 186.995 63.8872 cv186.8 64.2173 li186.612 64.1274 186.372 64.0493 186.132 64.0493 cv185.601 64.0493 184.997 64.3989 184.997 65.2837 cv184.997 65.9595 185.341 66.5962 186.126 66.5962 cv186.405 66.5962 186.665 66.5259 186.917 66.3618 cv187.079 66.688 licpf188.118 65.2837 mo188.118 65.895 188.325 66.6099 189.085 66.6099 cv189.851 66.6099 190.058 65.895 190.058 65.2837 cv190.058 64.6997 189.817 64.0356 189.085 64.0356 cv188.358 64.0356 188.118 64.6997 188.118 65.2837 cvcp187.487 65.2837 mo187.487 64.231 188.267 63.6196 189.085 63.6196 cv189.901 63.6196 190.687 64.231 190.687 65.2837 cv190.687 66.2915 190.046 67.0259 189.085 67.0259 cv188.13 67.0259 187.487 66.2915 187.487 65.2837 cvcpf196.786 63.1704 mo196.573 62.9966 196.087 62.7739 195.599 62.7739 cv194.478 62.7739 193.815 63.5806 193.815 64.647 cv193.815 65.7974 194.606 66.5708 195.599 66.5708 cv196.093 66.5708 196.481 66.4146 196.749 66.2329 cv196.995 66.6099 li196.69 66.8169 196.151 67.0259 195.567 67.0259 cv193.944 67.0259 193.12 65.9146 193.12 64.6606 cv193.12 63.5161 194.017 62.3188 195.646 62.3188 cv196.294 62.3188 196.749 62.5474 197.046 62.7817 cv196.786 63.1704 licpf197.728 63.6978 mo197.728 66.9478 li198.312 66.9478 li198.312 63.6978 li197.728 63.6978 licp198.021 63.022 mo198.306 63.022 198.39 62.8013 198.39 62.6255 cv198.39 62.4634 198.253 62.2798 198.021 62.2798 cv197.786 62.2798 197.649 62.4634 197.649 62.6255 cv197.649 62.8013 197.733 63.022 198.021 63.022 cvcpf199.993 63.6978 mo200.843 63.6978 li200.843 64.0356 li199.993 64.0356 li199.993 65.8755 li199.993 66.3306 200.083 66.604 200.44 66.604 cv200.655 66.604 200.778 66.5513 200.888 66.4927 cv201.03 66.8169 li200.829 66.9478 200.589 67.0259 200.368 67.0259 cv199.72 67.0259 199.409 66.6489 199.409 65.9849 cv199.409 64.0356 li198.954 64.0356 li198.954 63.6978 li199.409 63.6978 li199.409 62.9185 li199.993 62.7231 li199.993 63.6978 licpf201.673 63.6333 mo202.005 64.4575 202.341 65.2896 202.665 66.272 cv202.679 66.272 li203.017 65.2896 203.354 64.4575 203.698 63.6333 cv204.21 63.7563 li202.542 67.52 li202.237 68.2095 201.835 68.5728 201.276 68.5728 cv200.985 68.5728 li200.985 68.1567 li201.212 68.1567 li201.614 68.1567 201.899 68.0532 202.36 66.7661 cv201.089 63.7954 li201.673 63.6333 licpf207.353 66.0728 mo206.868 66.0728 206.479 65.688 206.479 65.1978 cv206.474 64.7134 206.864 64.3228 207.353 64.3228 cv207.837 64.3228 208.226 64.7134 208.226 65.1978 cv208.226 65.6821 207.837 66.0728 207.353 66.0728 cvcpf213.116 65.1528 mo212.89 64.5239 212.669 63.8931 212.442 63.0747 cv212.429 63.0747 li212.196 63.8931 211.956 64.5239 211.71 65.1528 cv213.116 65.1528 licp212.767 62.397 mo214.46 66.9478 li213.733 66.9478 li213.267 65.6079 li211.534 65.6079 li211.048 66.9478 li210.437 66.9478 li212.286 62.397 li212.767 62.397 licpf215.491 63.6978 mo214.915 63.6978 li214.915 66.9478 li215.499 66.9478 li215.499 65.0181 li215.499 64.3931 215.817 64.0747 216.31 64.0747 cv216.784 64.0747 217.044 64.3989 217.044 65.0103 cv217.044 66.9478 li217.628 66.9478 li217.628 64.9907 li217.628 64.3345 217.964 64.0747 218.458 64.0747 cv219.054 64.0747 219.171 64.5435 219.171 65.0103 cv219.171 66.9478 li219.755 66.9478 li219.755 64.7759 li219.735 64.0884 219.372 63.6196 218.651 63.6196 cv218.288 63.6196 217.849 63.8149 217.536 64.1001 cv217.335 63.8345 217.017 63.6196 216.505 63.6196 cv216.147 63.6196 215.759 63.7896 215.491 64.1001 cv215.491 63.6978 licpf222.468 63.9185 mo222.3 63.7505 221.987 63.6196 221.669 63.6196 cv221.099 63.6196 220.593 63.9438 220.593 64.4575 cv220.593 64.9009 220.917 65.1216 221.286 65.3872 cv221.593 65.6079 221.929 65.772 221.929 66.1489 cv221.929 66.4673 221.649 66.6099 221.378 66.6099 cv221.118 66.6099 220.864 66.4595 220.677 66.2856 cv220.392 66.6157 li220.606 66.8638 221.021 67.0259 221.392 67.0259 cv221.987 67.0259 222.526 66.6548 222.526 66.1099 cv222.526 65.6548 222.253 65.3872 221.839 65.0688 cv221.468 64.7896 221.171 64.6528 221.171 64.3794 cv221.171 64.1079 221.437 64.0103 221.644 64.0103 cv221.819 64.0103 222.007 64.061 222.241 64.2173 cv222.468 63.9185 licpf223.96 63.6978 mo224.81 63.6978 li224.81 64.0356 li223.96 64.0356 li223.96 65.8755 li223.96 66.3306 224.052 66.604 224.407 66.604 cv224.622 66.604 224.745 66.5513 224.856 66.4927 cv224.999 66.8169 li224.798 66.9478 224.558 67.0259 224.337 67.0259 cv223.688 67.0259 223.376 66.6489 223.376 65.9849 cv223.376 64.0356 li222.923 64.0356 li222.923 63.6978 li223.376 63.6978 li223.376 62.9185 li223.96 62.7231 li223.96 63.6978 licpf227.517 64.9712 mo227.517 64.4653 227.302 64.0356 226.79 64.0356 cv226.167 64.0356 225.921 64.5552 225.901 64.9712 cv227.517 64.9712 licp225.862 65.3618 mo225.854 66.0122 226.315 66.6099 226.958 66.6099 cv227.257 66.6099 227.62 66.4985 227.847 66.3306 cv228.017 66.6489 li227.679 66.8892 227.276 67.0259 226.938 67.0259 cv225.927 67.0259 225.259 66.4009 225.259 65.2583 cv225.259 64.1333 226.063 63.6196 226.796 63.6196 cv227.782 63.6196 228.112 64.5103 228.048 65.3618 cv225.862 65.3618 licpf229.339 64.1001 mo229.573 63.854 li229.71 63.7173 229.923 63.6196 230.06 63.6196 cv230.202 63.6196 230.417 63.7231 230.599 63.938 cv230.333 64.3149 li230.19 64.2446 230.048 64.1782 229.897 64.1782 cv229.599 64.1782 229.353 64.4771 229.353 65.1997 cv229.353 66.9478 li228.769 66.9478 li228.769 63.6978 li229.339 63.6978 li229.339 64.1001 licpf233.356 65.2192 mo233.356 64.6079 233.024 64.0356 232.39 64.0356 cv231.714 64.0356 231.437 64.5688 231.437 65.2583 cv231.437 65.9536 231.733 66.6099 232.351 66.6099 cv233.058 66.6099 233.356 65.9399 233.356 65.2192 cvcp233.356 66.4341 mo233.343 66.4341 li233.116 66.7524 232.772 67.0259 232.239 67.0259 cv231.364 67.0259 230.806 66.3247 230.806 65.2837 cv230.806 64.438 231.417 63.6196 232.306 63.6196 cv232.747 63.6196 233.142 63.7896 233.343 64.1001 cv233.356 64.1001 li233.356 62.1704 li233.94 62.1704 li233.94 66.9478 li233.356 66.9478 li233.356 66.4341 licpf236.606 65.0435 mo236.685 66.0571 236.153 66.5708 235.737 66.5708 cv235.505 66.5708 235.271 66.356 235.271 66.0181 cv235.271 65.6079 235.536 65.3618 236.05 65.2056 cv236.606 65.0435 licp236.606 66.395 mo236.606 66.604 236.62 66.811 236.698 66.9478 cv237.335 66.9478 li237.224 66.7134 237.19 66.4009 237.19 66.1548 cv237.19 64.7251 li237.19 63.7759 236.478 63.6196 235.991 63.6196 cv235.536 63.6196 235.206 63.7505 234.882 64.061 cv235.108 64.354 li235.343 64.1587 235.581 64.0024 235.958 64.0024 cv236.276 64.0024 236.581 64.2563 236.606 64.6528 cv235.821 64.9009 li235.147 65.1021 234.667 65.4595 234.667 66.0239 cv234.667 66.6353 235.044 67.0259 235.589 67.0259 cv235.888 67.0259 236.173 66.8247 236.399 66.5962 cv236.606 66.395 licpf238.71 64.1001 mo238.976 63.7896 239.364 63.6196 239.722 63.6196 cv240.235 63.6196 240.552 63.8345 240.753 64.1001 cv241.065 63.8149 241.507 63.6196 241.87 63.6196 cv242.591 63.6196 242.954 64.0884 242.974 64.7759 cv242.974 66.9478 li242.39 66.9478 li242.39 65.0103 li242.39 64.5435 242.272 64.0747 241.675 64.0747 cv241.183 64.0747 240.845 64.3345 240.845 64.9907 cv240.845 66.9478 li240.261 66.9478 li240.261 65.0103 li240.261 64.3989 240.001 64.0747 239.526 64.0747 cv239.034 64.0747 238.716 64.3931 238.716 65.0181 cv238.716 66.9478 li238.132 66.9478 li238.132 63.6978 li238.71 63.6978 li238.71 64.1001 licpf247.437 65.1978 mo247.437 64.7134 247.048 64.3228 246.563 64.3228 cv246.075 64.3228 245.685 64.7134 245.69 65.1978 cv245.69 65.688 246.079 66.0728 246.563 66.0728 cv247.048 66.0728 247.437 65.6821 247.437 65.1978 cvcpf255.149 66.9478 mo254.521 66.9478 li254.521 63.2427 li254.509 63.2427 li254.327 63.7759 253.294 65.7837 252.685 66.9478 cv252.431 66.9478 li251.866 65.7837 250.927 63.8403 250.751 63.2427 cv250.737 63.2427 li250.737 66.9478 li250.218 66.9478 li250.218 62.397 li250.894 62.397 li251.478 63.606 252.062 64.8228 252.64 66.1021 cv253.282 64.8228 253.925 63.606 254.56 62.397 cv255.149 62.397 li255.149 66.9478 licpf258.343 66.9478 mo258.921 66.9478 li258.921 63.6978 li258.337 63.6978 li258.337 65.5962 li258.337 66.2271 257.966 66.5962 257.519 66.5962 cv256.993 66.5962 256.733 66.272 256.733 65.6606 cv256.733 63.6978 li256.149 63.6978 li256.149 65.7915 li256.149 66.6099 256.552 67.0259 257.298 67.0259 cv257.72 67.0259 258.013 66.856 258.343 66.5708 cv258.343 66.9478 licpf260.458 64.1001 mo260.763 63.7759 261.231 63.6196 261.567 63.6196 cv262.313 63.6196 262.716 64.0356 262.716 64.854 cv262.716 66.9478 li262.132 66.9478 li262.132 64.979 li262.132 64.3677 261.872 64.0493 261.347 64.0493 cv260.886 64.0493 260.466 64.3677 260.466 64.9907 cv260.466 66.9478 li259.882 66.9478 li259.882 63.6978 li260.458 63.6978 li260.458 64.1001 licpf264.261 63.6978 mo264.261 66.9478 li263.677 66.9478 li263.677 63.6978 li264.261 63.6978 licp263.599 62.6255 mo263.599 62.4634 263.735 62.2798 263.97 62.2798 cv264.202 62.2798 264.339 62.4634 264.339 62.6255 cv264.339 62.8013 264.255 63.022 263.97 63.022 cv263.683 63.022 263.599 62.8013 263.599 62.6255 cvcpf267.714 66.688 mo267.396 66.9146 267.013 67.0259 266.733 67.0259 cv265.196 67.0259 265.001 65.7642 265.001 65.3169 cv265.001 64.5044 265.54 63.6196 266.759 63.6196 cv267.091 63.6196 267.388 63.7036 267.628 63.8872 cv267.435 64.2173 li267.245 64.1274 267.005 64.0493 266.767 64.0493 cv266.233 64.0493 265.63 64.3989 265.63 65.2837 cv265.63 65.9595 265.974 66.5962 266.759 66.5962 cv267.038 66.5962 267.298 66.5259 267.552 66.3618 cv267.714 66.688 licpf268.921 64.1001 mo269.226 63.7759 269.692 63.6196 270.03 63.6196 cv270.776 63.6196 271.179 64.0356 271.179 64.854 cv271.179 66.9478 li270.595 66.9478 li270.595 64.979 li270.595 64.3677 270.335 64.0493 269.81 64.0493 cv269.349 64.0493 268.927 64.3677 268.927 64.9907 cv268.927 66.9478 li268.343 66.9478 li268.343 62.1704 li268.921 62.1704 li268.921 64.1001 licpf274.769 66.0728 mo274.284 66.0728 273.896 65.688 273.896 65.1978 cv273.89 64.7134 274.28 64.3228 274.769 64.3228 cv275.253 64.3228 275.642 64.7134 275.642 65.1978 cv275.642 65.6821 275.253 66.0728 274.769 66.0728 cvcpf279.054 62.8521 mo279.487 62.8521 li280.163 62.8521 280.442 63.2173 280.442 63.7173 cv280.442 64.3931 280.06 64.7173 279.448 64.7505 cv279.241 64.7563 li279.241 65.1724 li279.442 65.1724 li280.462 65.1724 281.116 64.4771 281.116 63.7114 cv281.116 62.8267 280.526 62.397 279.565 62.397 cv278.423 62.397 li278.423 66.9478 li279.054 66.9478 li279.054 62.8521 licpf283.005 65.2056 mo282.493 65.3618 282.226 65.6079 282.226 66.0181 cv282.226 66.356 282.46 66.5708 282.694 66.5708 cv283.108 66.5708 283.642 66.0571 283.563 65.0435 cv283.005 65.2056 licp283.354 66.5962 mo283.128 66.8247 282.843 67.0259 282.544 67.0259 cv281.999 67.0259 281.622 66.6353 281.622 66.0239 cv281.622 65.4595 282.103 65.1021 282.778 64.9009 cv283.563 64.6528 li283.536 64.2563 283.231 64.0024 282.915 64.0024 cv282.538 64.0024 282.298 64.1587 282.063 64.354 cv281.837 64.061 li282.161 63.7505 282.493 63.6196 282.946 63.6196 cv283.433 63.6196 284.147 63.7759 284.147 64.7251 cv284.147 66.1548 li284.147 66.4009 284.179 66.7134 284.29 66.9478 cv283.653 66.9478 li283.575 66.811 283.563 66.604 283.563 66.395 cv283.354 66.5962 licpf285.659 64.1001 mo285.892 63.854 li286.028 63.7173 286.243 63.6196 286.38 63.6196 cv286.522 63.6196 286.735 63.7231 286.917 63.938 cv286.651 64.3149 li286.509 64.2446 286.366 64.1782 286.218 64.1782 cv285.919 64.1782 285.673 64.4771 285.673 65.1997 cv285.673 66.9478 li285.089 66.9478 li285.089 63.6978 li285.659 63.6978 li285.659 64.1001 licpf287.931 63.6978 mo287.931 66.9478 li287.347 66.9478 li287.347 63.6978 li287.931 63.6978 licp287.269 62.6255 mo287.269 62.4634 287.405 62.2798 287.638 62.2798 cv287.872 62.2798 288.009 62.4634 288.009 62.6255 cv288.009 62.8013 287.923 63.022 287.638 63.022 cv287.353 63.022 287.269 62.8013 287.269 62.6255 cvcpf290.415 64.2173 mo290.183 64.061 289.993 64.0103 289.817 64.0103 cv289.61 64.0103 289.345 64.1079 289.345 64.3794 cv289.345 64.6528 289.644 64.7896 290.013 65.0688 cv290.429 65.3872 290.7 65.6548 290.7 66.1099 cv290.7 66.6548 290.163 67.0259 289.565 67.0259 cv289.196 67.0259 288.78 66.8638 288.565 66.6157 cv288.851 66.2856 li289.04 66.4595 289.292 66.6099 289.552 66.6099 cv289.825 66.6099 290.104 66.4673 290.104 66.1489 cv290.104 65.772 289.767 65.6079 289.462 65.3872 cv289.091 65.1216 288.767 64.9009 288.767 64.4575 cv288.767 63.9438 289.272 63.6196 289.845 63.6196 cv290.163 63.6196 290.474 63.7505 290.642 63.9185 cv290.415 64.2173 licpf294.044 66.0728 mo293.56 66.0728 293.171 65.688 293.171 65.1978 cv293.167 64.7134 293.556 64.3228 294.044 64.3228 cv294.528 64.3228 294.919 64.7134 294.919 65.1978 cv294.919 65.6821 294.528 66.0728 294.044 66.0728 cvcpf302.632 66.9478 mo302.003 66.9478 li302.003 63.2427 li301.989 63.2427 li301.808 63.7759 300.776 65.7837 300.165 66.9478 cv299.913 66.9478 li299.349 65.7837 298.407 63.8403 298.231 63.2427 cv298.22 63.2427 li298.22 66.9478 li297.7 66.9478 li297.7 62.397 li298.374 62.397 li298.958 63.606 299.542 64.8228 300.12 66.1021 cv300.763 64.8228 301.405 63.606 302.042 62.397 cv302.632 62.397 li302.632 66.9478 licpf304.241 63.6978 mo304.241 66.9478 li303.657 66.9478 li303.657 63.6978 li304.241 63.6978 licp303.579 62.6255 mo303.579 62.4634 303.716 62.2798 303.948 62.2798 cv304.183 62.2798 304.319 62.4634 304.319 62.6255 cv304.319 62.8013 304.233 63.022 303.948 63.022 cv303.663 63.022 303.579 62.8013 303.579 62.6255 cvcpf305.2 66.9478 mo305.2 62.1704 li305.784 62.1704 li305.784 66.9478 li305.2 66.9478 licpf307.907 65.2056 mo307.394 65.3618 307.128 65.6079 307.128 66.0181 cv307.128 66.356 307.362 66.5708 307.595 66.5708 cv308.011 66.5708 308.542 66.0571 308.466 65.0435 cv307.907 65.2056 licp308.257 66.5962 mo308.03 66.8247 307.745 67.0259 307.446 67.0259 cv306.901 67.0259 306.524 66.6353 306.524 66.0239 cv306.524 65.4595 307.005 65.1021 307.681 64.9009 cv308.466 64.6528 li308.438 64.2563 308.134 64.0024 307.815 64.0024 cv307.44 64.0024 307.2 64.1587 306.966 64.354 cv306.739 64.061 li307.063 63.7505 307.394 63.6196 307.849 63.6196 cv308.335 63.6196 309.05 63.7759 309.05 64.7251 cv309.05 66.1548 li309.05 66.4009 309.081 66.7134 309.192 66.9478 cv308.556 66.9478 li308.478 66.811 308.466 66.604 308.466 66.395 cv308.257 66.5962 licpf310.567 64.1001 mo310.872 63.7759 311.339 63.6196 311.677 63.6196 cv312.423 63.6196 312.825 64.0356 312.825 64.854 cv312.825 66.9478 li312.241 66.9478 li312.241 64.979 li312.241 64.3677 311.981 64.0493 311.456 64.0493 cv310.995 64.0493 310.573 64.3677 310.573 64.9907 cv310.573 66.9478 li309.989 66.9478 li309.989 63.6978 li310.567 63.6978 li310.567 64.1001 licpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.0%%For: (Production) (Pearson Education)%%Title: (T026_FTPH_RR2_FTpinkletter.eps)%%CreationDate: 15/8/06 9:22 am%AI9_DataStream%Gb"-6lZ*ueFWgSboa^q5+uBcC>C"QEVf2dMJbEgf9+r4XD22Ug6")0u(-kW6aO+apr]A`E<)qsF@-"R$'FAlPcH=;QacknZ?[T,.%s68>uDr:M%s8N&tFSDg%?Fd:]B&5O4IIY;VI/Bs'hi/rQR5]$'ErIU)?ZpC0(1Z,[GEu.LnC5GSlVG!.hL5=e_u&aYhgK]nJ+NZW%G<an(rpopAm[mkd!PWimqmSLC2t-dZgY]ZXrmUMYq9QrsO)Jsn*8c7UIJn/PcXqhJqqM(I[l<4Bim[;`hL,+_cBNogpKOZf2r?o$%:b.!,nB]uthgG:_bu[a)Rr<b)$X\C=?_lT-kHEcjr!9udL)=UaiLg/;T+7L-qtU/V.KH,H5Pb%\^%oS#mll2FrUK:PGQ6i!Y56ag%DSNl1rUC>VJI2.r5`]7ir%m(B5b<N:nX(11c9cLg"tf_Y3/=a0_425Zo$1fjk)/=lg;pu'rp?1>rtL4RqX(nUn%\`Ep\Cl!f0!0u%+$P/PpA[GQ6OCBk/OP$\l/p6Ghn4=5OZRjfo>6ReoD<I_h#)8,la+X$f/O<t?)ITZ>i=5;5Q'Kb8!s,H2kP%#I_*_ob[81c>eU-[%Rh+li^\mfM]3i>Qhpbhn*2,]TB?p<Yg_g3b:-S#\Uqod;jQ(0TIj8!G<G:1pB':b4ZX80+qhMZLIeq2("#U-l^2h3N.sPD#n\a+"%g9`3=bP[9EFI'Q=7K7G(U&Q3!^3M)s!'E@@F/rrFc_UPIrt-sRh<VO(G/iYbr'U,5"+InpGl@1*:Nt[,\GMn:rpOb)Q]Hr=1]04f%^B"f%V\K&W3%,L;i:&[SlPtB>*.N;tim[g)N*$F5)=]YOM@iM#GW]`3V-o]hYY6LU0^p`].KrK(-iAt#%L4P-38g!U"+G;N@%$$e%^HEWX3:SYNIm!9XggY.S[tik^hr9jr]lVX=p_uk7TC=e*_EM[0q)dpTrl-_G,Q*Q"erem'Ytt-6n$#=W)f+GQigR,Bp`'*iIh@Qd%_KYQao)#[+p'Z@[RH"lf3^;8;*b-6[*[Ua/:NFdlp"X_.)o!CtY&gBbp]jH#s6qtu`&#KJk3mQ7n1U*Erojj_W:7.G5Q$LbfK5[S%r66f`#l_hAfK];YZcH7cj3$i22_#;Fb8#MKcFA9bl<&qa9uhs7cE5-QF1_4\>dM]lQd?g*K=t4-`89J%ghZm)qhMqk']V.GO2lpG%`SXc%HT-AHR&t.Z7ulKBfW@-7\>%W1/S@ac>gRVeF3<OgXlE:Ap[Yh&bB6:]DqoLeV/PPNq0Dt2J%4UQ1)ZR,c?X69L*QXNrjLA&%cV.^0C2GIoa/S#]A%1HG_`rO[iK1572Tn/(D'#oM3g08[)\$Yb[TDA0p%"<dbk-O;R49-NZ'N.=J,.-3^2JMsBDNeTL:"_nP7lc^%^\j9Ohrh*0cLQ%*cJQ"Dr3P;PIJ_2Pdh`f:$u(4ekOOf)gL'rJlOVHcS3-Yno?-fRa+'e4efT9!?6!rI07lD0ca1:nQMtOmS+,ll%5$fKOm;udcnRD1m2K\n.0@Ro1_A[e?C8&C#*Qko!2V@VSs3FENJA2u:_pZoK4dVcS_p1&Ee1dhdC9kl)n/!Mon?(=Ur-WCB);h!Y%[DCi]r1*c,2JPqqL+PG-Yq5U<hgt11GF[hVS/Z9Q3^>-1Mm3Rr)=,.`?pERRqMV,G:i&).Te<:A62<J6(#OT0`.#M61Y*#6A?dK^%^#4?I)6OA5iOZCnF"2C*Z/saS/cdg?rSUP^QT.mi=1IUnp4M3R@m`%l0h8llm?P4B[Qa@IR(e)7>iIiMmMW`Nm,/rW1U-NoR$tW[%>Qi)'JJ`sE5X!1N;uH:X_X&!j#S/`#"'.2U`I#N1DKYi;/Jjp\I0[/#kl$piN;=iMH0"JZ&Hd:/FjBLjY65cC"64s8,/D^OG'COt%MSm>=S2"38QUf"IGgCqR8D8Q0(ln!GHQ#Tu29$[ihu7Y!SkH5aiAC9:>H[pYG6Z$A>(U>e5;OYGR.23KL@8/JDU0HVF7$W3R=<N:%\Bs]Th]Zu(CuIBYY%I)Ps5eOfq]=A?USDf-gqN$r$a'q]pCq5O<ZQCWCVIX^ZMj.@nr)s]ICH]F)HA8bj(OWcSPhnq5^YLRit\RR%c4Is!XohnLV0I0NY&QPuH!^A1B5MO3r-EbLVtEWa?ftZKR9RK,q)K<7fh7X@K&>1JV6rr5Eod8S1EL2#Yn"*OXgcuLRCM/iNMG4#%qQsX5rGFX]6OcO+)ohJuhpRY7Z:`%(RoU3q&4S8#.Uq\jepcomfA0%Ibu)'LUTP;flY*nkI]GPqm(&^#9\6Y3JC:m?-e^'+%iS._%WDIqJnVm@JGc*'DGG9taQ*U'"VS256W8X$8]4#dXguBfc%t6iLa8<>0c-J;jcL%D*N3JnoM(#%"`mF2RD3a?6<sg>82h%rTNpl%o%]qbkU^E(:dGHY`$Z8B:@Ue%_b[N/J[Xo"\qHj`aCP\EujI7)cT^US[c%;I?ee)C6W.[IeIrP_h[hVZ!G"+OB:dl1XKq=s2Y<m/kg%Dh%9u9##e0g6(V9oM,>P=#Zc0X+1':rmS>@J+rj7dne9(H2kK8]<>Ojr8V[EoB+jfhgN$K(uOcV$%Q?qrVd8Dc<e9ap<,P`qt13D%J,NgMbMW9=S*Q.)YQ3CTY<T`!pu_R5^:m'jc\L?U_l)u&\GPsrpG]L.j&`XV![]=]s)G^3.sg.00Al:jYMUT/Q>\hanF9$C(+=V-%%IiJ?\b<r,S"$m:q!e.75JFhfHGRVqohGA?,@5Q+H2Z\rH_,-JmfUr-0=S]CJ+NBGgP1\.jK$lS5/+_EH1U]9^AI]fpAWbuhYdBO%LYH_!#^Z=7q_pJ&^[2qB+g9dOZhp*@+25FhC7M0Y^O>hcX:SR]D&D0fIZ)d4h:I.(rTtP=m`.O5WT;YA5i\?cmp:Lr&\M/$j9P/j%kh/Li(fi-r^BML,PJ1,%m\#EVmIp"[n,MpqlYkV]\c(d\-Y232qq]$b&c/p4'nBZKHoZ%1G@kK3qer?]T7/[!c+bNh_#AS-/B<-3%a*8"_Irn2-1roF_G^4R[EI#(L?_1VjbC#^1j(5amQgW:.R`cRl^WVOnMo3O5ir#NUj9[`rGS)S+KtFQ*"pLC3jl,3<3:%1=LN:Ik%FGP]kn-=0A#BQ:,a8P-!@Xm&!pZMFZchk)1qlogA\$p^jT;V;@q;qFkq;H^NIXYU2lUp@14Il:iG7Ht4q-8sAZ<WV]fpD;.8hR*]%&rJ?FfODu3db\QLaG7E`?*E<Ojcj6bfk6Xg2AnE^FG\_%Zj.2SUmt>?.3tN*0GGkMef?F(76JM:4HCfNQsu!tqWOZ5-I,OLL<BS6%@+^8+:dPX@`"7M2%bLap@%[+Yrk]cThOj])ZVNd]i4X?kHK/X^FI2F4*SfMB]AiDBP)CqPn!p`0\Chohb.k.c]=6t3=Hm,:0GrY-%CTXkJ3LWT^@1Hmfc:p%H,SNm+hDf#)1%R6>7*[J&o6uDpS"\/LS=s@Ie30SlllW*MpVh(F*rm\NC97g;#G>F"?i5'Jh1%B.e\2(r%W+.C3_4g5pU8#5.lo#J`hS/gTqW=:'j^6jEo(I9(T2VNho]%GQY.2'k`g)nB"M`+AFaio8hfVYt@.(WZ*dkfMFSU2Ha&CT3qQ%YD%8&2;7Im)ufhlK.HJj5`\n0lt(7&MCm5]@c>Dl/QQoH^=^3_FRGn.=Dab+l>!W=RE!U-OnR+XBEGLmSlFP-mCa,Y)$]K4KfE'9X[f%:.Ut<5jaD!+dkY`Pp`;,M's.fX?^mN'CBg.^F[bdr0dAD!P=T^6EUDt'@8_PcKeKqQ+JPh<ueBiY)3/QNQ[m&m+p8MS'Sf,J#7)P%kPmY[KnS*o;WniSY-`K9',U$1'E6^qcL8F>Vm!(K4?Vo?3-@rn^Zqsl:tb*47!eYbX[,b[q/9:W+ZAhZaDEut1m-*P/i+/nM<lNE%QcN>SA'&Ou:Yh;0XR,#2R=#DnBt*=&6tAHO,jQ8`=RI\6:R.eq;Y4[UUiurIk]s9%r(_!eP^Mc;q1=tuOHM9\pp<K0:JgQd;=J9g%`1KT6J+OH0YVbjUNl;m7M>eo]W_>#9^WIcW&'[dk,0;Q7,X)DF+]4&;,Y4XXM:YE&jcP5=9/;#>8@709G_lJKLmW--Oton[$knGc%-u>WfM#sRuoJr)eM1XmoGt%'kr+#gB78O[b;%.#%'Lbk57S+Sj80VW5oK_PaPY4k/A_@co;jL3^68aFg8*VgdW@Y!RW(Oql,k<EX%X<b-0eB2e^9<KbVZLl<1X%9H=_l=E_T3.2/+-^;9Q5+,Bb-NSF2ORUB>%'+SA34qND<!LSJD5(64jVeP;brp>4AD))ob;-imT+nJ%j#`aK435'5V+XIdG?aR=U@5a\HqF%&7cB[k+o9Y!^$X=\iA6\5qulU2b`jg)_X%]:3IX#8;PQ3LV4]T_F:1YV:Ko`g@(O<4X:m\;%17:Ss1+j,E*ol6n/#05)[OV!7k[\d47+'6R\fbV4ca;5A/m=^P(;/jG?nG'Z&6N:\Z!I^?$:;K7B__E]:oaLa1cSF3`)/Be<TFGb%,PM!Lp*9"of=4$WlM!oA;6;W&G#jdW>1S<(HG(\E.sM75cVh[0F?J#88tJ,o4<(fEJa'$]HHpR$AiH@XBG7tY`YgpA6]'k\)pbUB%G%^DL$mo!AcD)FI2:3;+\*E_"MrlS#*-MqMP@I\]SY`?t8JG!8dAX29*i!oTea'^5IeWif?V^8-e/#*FoGR:q]ioN(%_ZPZ(7h$a%0A<HqVruEbp5<R0%_ZPjBVst>MtRNj>3\OrZ(/Y?=MTG%,Pf99.u_eu9i%tP</'R^Y3EJHg9*+orL-c;Na2R"=t#B>ou6Z>NR)ql%nPX6%\_:Ngg!UJiUU31()87Hr0O4=3bFQ;-(D<$II>'bc/Tjoj)GMS98#LK"U-EB/8b#%Y!g&->,bb:<fE97*!7Gii;9o4kEBmD'%OHp"pV?!UK"3J(RdW:)$gV=$]J0kGm9aPK4!Eun'J7r3gnN)8XBn2R2+DLq5>66!MJCs7?kZn2Y3s$9b^KCe00`Z2e5U6`A)LJ-G%(I1-EYQ/)rNG\g')M#II+L;6mm2j@:"d%Udi4]54m!pVl+O:A8F9-Eq8,#q)ha]qA"0@Ue\fQC9-_U&7kWQuu#9a#40GlT^"r9*#%&">q>9d7JeE=SJX!B-"^EWfgi^kUiV@gTBUT`8jp=(^*1/c_N)+T3/0Ok^(D;h-GL_,aQDbM'kbFTGTm"=DR4QKDRj$a@Srf]if[%H$e3?/c`5=^m>tt:`\n^!VXS;HY%akF$IM'Gld,W"GYODVWu7Z'?P]%BH\B%pQ(!3Q>eAd>%CM6_OG7W4,q):YD83rB;[ik)5Qsj%B6SXD(-3)kqsA6uXqM#P47.BU^QoVk[7*4ARNDFK>rrg,dsVB@HVL()k;+_;bjKb[+*E:5.@ik8qJ=cEX[8K.Vhe,QdaRh&nS(XB%R[t]eD+ROP;oGRcl"PI$pp;>19hu@njt[Q[fYn1_p[IPRPWB]kbd)o_T>bM=Vc^(Ijg:m`XOcQT>14p$lZ5(gknL2k\X_5mMUf;1%dpc'e]a`l.e)/?Hgs7(ua.bH?&BOA()qY(\lYu]hjMSr"fB#.sQ)pjH,1h7_UD#jjrFGB-elrq&ieMF7ccVP9JT6!pd(FY[`@F.-%-`akV]>a?]s#a2@n#lm,538JYlItfLl)s9b!r$#jHE_$^XSlOQY\2C>h(P9]?@5]gRqL,D.sj-:QZcQcX6I1%e&kukc_[15p1en+%mBj0#drT6$<B34Ii-SL`9;=(OSeL3-ak=NQ@$\GD7!dbGH]#)A-H4=H0dURsgf8H/.B[;9paUN^VcO&"-":6-?)>%P)Zl;ooKnmZ%$/a?U="1/)4"F%%&_%H%+/$5<EBV>&B)1^bo[V_okV8C&Y<TaHF0jW9ril:qcbH!i>H#]Xq!nBDqXHM2r1?^0Tp"j*V!0m=d_2/-%4blY@Q]n<0:eCD%de"M/l!@,R5#3J!5+fk=hVnr\hFfoc_15e3SL\?W&On@[J.ci7fXdqMP+>D;^3fG`#nDI#3bn:Uo3BrV3DluF%d:YoH]&n]:fBCJEV@A"i+?@Bi4D,?:m\eNW'F]<#_:tPV6QTe2meuHXoH\obH4jK^]rklt2Jag#[WE7>;=uUP>)"W:_-.ARcn*W\%oU<]e2bNj6,$`TteEabRHasXZ\u6F(a2BU#SY90!AQtAPO/nV6/(?*?2%b<'Q0VH23j7/L?AEi4eE^#8j&F:Q:#p/De=*0t^0]m\%\CR!/>d\QLfs"KuD#HKOJA5g*J%2b4_`C#Q0[QFKb26iiT=2u5GJnE97r395(t1Xq)#$Ecn9UX>'d:;k+sbZ\X/kp+Y"Vjl*UD/&%"ij7e:9q*G0qHpm,KiO,LTUt3,b;2I&\_6:VT::-Ajp)r>$"QX'#A4DO$k)3rgk*H0?=1a8E>7I8mj#5D,:$oT_P`Z^5I^="5FK-%:Z,O;P.WV`g)G9\_#;)JHF,(o@\1Y.nsoC\hCUA$e,)[_#4EJ?D`I;>%^LF,ni8>0L[ZpJqZuU8QP1Ol9XMpiQ@bS5D_$rKYgMUM%gC%mQ#P*42pK9bnI[d2,XQs(l]K5p3CP:H="@R3*"CFc)c>2':@=R>hnSbBr9Z0Q?Pc3h.D2k6N3/SUp-P:AtNN'FdjE9@6b@uVu%W?aNIEHB=U3St7/qU2JW\l1n:bGYg&V:\(oF\U3HCP\_>oUNXMaE1/&l"c*R1-MP=+cbX%gaB/jQ=TbC+"LR/a\Q6,\sf8*mStRj%X-(,'1OcM?r]]HD,<QlT@qMWip9PKeZS<:9=(gBX(-tOj[5KCLR@k<RX6G:UdDHrF2V$XpMelQeURh`iRPl@@=J&PM8tA_VBpG,n%8Ms.8\(%cX,5/uN_k]>jVIeJ*iAuBlJuRJ$VJdZ<dtE(`&<^G$.U"]*qo?W"9T,P`0*H,R,!cMSP;X_)I8iO5=>Q(L18fec8R3F*%e&Nj.YrQ*3c88(_I>A@`YZdDh$e->?fELRp;;BWl?R?(dBE@-3\3j5YkbJD=BF'ZRO!E3)=Mm]-#Wt'Y#o-ZS^Ll$B-e2Uk=@9uX%Uj$c`JCkDY`\B/G(Fs[.),ht,VF?KLVLak)UW52^7K[3IP"]B-<"#Cg#`U?u(n)@MVD2[$;5:C.N4ahZ'*XqHN/bj1BE4J*TkPWQ%&01Frl)k5fBlFtq;l)Ru#V30]rRI6ME`lQekH[WN%;"Q2T#?PA@sKo>/P(PaQ\D6%Z9jg2l%i[-eu+Nn?e"C<YL]6CVfZ#.Y(Ydt%"gKp;h%G2YLc9gXp14"^r@-u,2Dlo3L'm$[*U7>j$L(EbPp0dDPIf>AXL0LQ:RS4LAZ8QFFfN,UFk!HKbmN]9-;gpFoh),iBe#FG%A5P3We$H'O7<C,FW*<6[67S>%FCDS8QXha@I.>NOrGiG]>/b!7IO>nS'naMu]::MA:?4ZEl7!\LUWhXhPP>f=C=`+=V0h_Wr+WUq%Br2?:kJ82s>7NO>Gl'auRR%HB?7R[u7g*P`j^lon+c;k$'B)Ui9UrYQ9Ls@A@EU!Z)1Yqua^Th:hhQ:X.-*JEk2#.eZ#5;8(/976%Ki:TAI;%/j_:)O&_;_()aHTe+bF&UtVH*GR_VAXoQh8]?-">2US[2tE0"J."GEmK5)<3[EhS$XOo?H\6!r?q@K3fc#?6]>S,5n+L%Zg$Ei:/@nZLPWHKf&6._HCVYIlW!Y,R7!RLWkVSg]o(hr`:G:no-M?H-,fC$`:NfWMPor=s$2%8Y.V\u53@0Jo6cDdr"2p'''K'L%)s@#7O[]"L&$>>me@Kk#Cjb78=0:sV6Tfbd9)Y7P8puQQI>Qg/7V;5um-nNW+oa-hG;h(;:\jf0[>%JhI_:%#'A/MN8,qNo*r?2I%<]lSri[#ZC,p)ru?9C-F`?#eZ4Vg0uRGAUi00FS4H87sZA"XnXW'(ppY8aUWF=u2`\)D@Xd/FH^BAN+@B&i`MmJ'JWn-@e>rrt"O%!Hg(L(&h2_r#CLDqc#@[g="9JN1<NEc"Y5M4EYt=VQ&6hIr4J>VQa2a_5<Tt/eX-'^lDEAU\^HV_nSgoiZ'fEMjQ1cY4puo4-;^^%2*.hfl2>*Fa]^f*BU'ksG4CbB*=lq2R^4R1H7gODpQ37iH-JB2h]n6JLFoHmI$r;P"/J,f(F23e8TA1=0.kjW4o&?h95P=9lp;%'%orUB=F8$u-fTNgZ-D,6-T!j[W`mK],:?5C"::HY`84D=;g&:V03i*4HRu_*QSOpM*`$*`is1;pagkdj_OgIl?1f'OH:IQ7Gfi`Mp%\u:6@mBYd?,s1RQ"7JoE.YHCf9_I[P0E:.-Np@o0f<-!Dk$hPsE([(DgJ_S!1ZC.G&1?IN+6+)Ua*!7rS0e_MHJ8UKQr_Aah?Tc&%&A8:We);oN`)M@]25%;\P7BuIr?B`I@NZ=aZR[(0*MnjjdJY)]@Z2&h,=O%VF<WZ,"hgSeSOe;o4i(Mpn=!l9d0T)DY>dmR`kKh0%_UsuiClsa/GYDo<5p=V`$:7qX7RA"*.0C._1,9.VfqK`]@SN)QG_o%LQ(7IL77bQHi?jPaFED(_>=Ro;,haTd7C+sR.[+VS:8ui9%D&UCXWQmrAjGu/lB[H"4m]salL<D5&U.j$!B?kCe3d]lQ=Zq7XH$uhMIQZVd*fOS"elf]i]gka7`RR&.4\8VY>EY.<6)hG.5FRFT%d@\,9cX-6Vs5ilc0*^VV"8%KPqS`I5@Xrn^5lY6WkT@"6pNcFh6\*@<qt.SRK=mbInTo2IIcU0soQG\'T71dPIW;"ZO];+J_,\.d%OhSbr^;Q/J`0&mspA)Ym-'%W(Pj%Emd[*?T08X#,gJ[VSL$"RM2:#=^'8a_-LrU_ir#t:c9;7d9q=u\7kiL]oaY!;`S<TZ'IJO1f%nU>X?o]L7WItH!thfLpK_pMZ\LlD=HN-6=5IhY@r!f"djrOE_bhSmtbG7fUPs*6TWU-I&"5KR@s_u_j2adM,KMXJ[qEouFM!>;6l%c'#+$>crK<,2aS-3Pb&Vm*6oT"mCdD7ZuKkW>N>j*l,f$Yd[\s@g)QL!BEh]P4JhK9S%iYfr^i'a*PV<*9MQ<M<<9Rc31?&6n+,K%&Pe"WLPek<&>8GHigpdW[`'X-Uo&hpG:cFhKrLn.2$d116DcN]S?0nuXQ&5NX-9Ih=!CsFSV5O(/=!NhOHB,h,\/dl1?HIk8pm-U%<c-4]4I9HVP;4_&jjBgi_R_ooBL[)-[KYGP`1:EsejAdQjt6hn:=L;;>sEK&DAa,JG-g,-fW0UB98]c!ECDH8Z(=D5jf<%5;R8+C%2Fd)RW8Heq*7I6rdJI(:oHV,oNI4p*;/Wnk@u":`L7WT;E]NuM:=Y,Im6Q3&fJ9Pel3k11/Rq&8WB,S[k2_6J\?>$:L]$*%3OjuC%m,ckM'd\^KQUL7:8>G-cmNd*!-)pd<&6C3dqjQC?SEM\+k;:^Gmnnn@YNao7OEr2KF%uO\'X,T9Rf*+,qZlL7;p>?8A]'?^'7>m9%_fZ3hTJ;50des1th;Kk_GOc)ZN;\khrIHKt@4U`<("NQ?,?F;qQ2Z<!G.:.oY_jF#U'^-]klDi:G#;8ToO(t?"&(AH%%+%Qi,SUD%8"3j,COiBVJa%_h!Pg;\qKl88^Ve%_]KUi.@<u7P^N;1nYKn:E71WJ?nGZZoH!TURl2f_Eog:kL5e4q`/U:XoBp*U'Y'aOP-]VW8%L4P=oR&8C_9_BC&bsRkaa"WL.0EH<`2@.7+3eUjV:l49W9I$r9e)D(=mMmRb\jMiS1":2TDpEHQ<^Oa[feID962-[UOU?%51PN_Y%Ndh,PYB*C)H/(n$`SbNu:tCPqJG"_RkUi9@Z'bQ<.7)iqnk%i193^Bp5l9bK3D;dMNZ!k;BnsaunkX9+L9JX'(cgC2o))D2Yor3+%]H1%7BEo'T]BV[;m3nCj0Gu&HrFn%[4IM&)7=V,WGc4:t<i.8$Q4S!^'@rukEB.68P/CjuSj[%24>"hWJ=/mZ%hpg?:@U1>+Z#$d%AshN?5r22XoVe0UO.'2n2R>SbjtI*7U?ot#")!oicEm[dcGp$"VKUrmV(k;@3kD&U73s7.+B9LUe]1fN&*/#";spc<`%+UkB"8c]%[pq$0\(nWZLS1Y]_(aa]<+W*U'ipH`<M#X#^be!6Tc&H]dcqqf%\t<A.LTBP0l(bQaUiCTX"c>O0iNjA+U5D(b9dSZatTmkeRC'%%P`dL0:D+.[/tuG_`]E(gM.AmsSesbbn\c<`KPA=Vr$9ndBba;8&Ei[IN5O+-Vp-b]U8<EcAKkI+kGaYW/i^^bjf6$O'jj^g[J5;^%FHrTl>)Jn4g[V]hIBaQ_:E:q&5EAak5K[-kEW/7b$?UTI[Hh6rr8[H`>LMQV52@*'&&7Nop?"bb^qK7=,JT!a%qG&rWQbiPKZsNn%FW!qg\[Nh+pWb._UcePBlkR9\(sN0*5)C6%>Kg1jNfO.`1Bcl9g2$8NS08a7U%,$U&58YUf4;WCrAFB][Y`Z,Imso+>Fln'3a',;%Jk[/"nmInIOg#.G9e:+4@3!T%m+Am4d:&.JVbTWr6=LTAS"SD%`?m,oENolalRhm+BP_-f'-*M*fPLB.RP4C48N<tF*r;e3JFUuN%Q-'ktri&9>j,a*W%fBhmlMA<2mGn2q_lc5hY<2)H:\pP=Nqs\*qV+3p:XAt[:\^]uNWkaJGe`cf^Q!mE2U:rqkP7j.EINh@r8\\Z%og'SDmi,'jld"gcl=#**bUIt4HUcm!NbNg@al,Eb]'5p&F:WMjRi^ifpJ=r&l(Ph5%s=_<e<fTKO4Ck_U%raIQTMlpme08`e$\9.%3Jo\hnA#.u*ZR^14nQ7sHNOP?_1F>>UAngMFgq9Z21#!R.K>A&Sj&(&h_F<C*<c=^B)ONBqAh@VSTL"n]Xddcj4pFH7cW%sCIIW$%9eCS#^.qH61g4!cVWS:D;JXJJI)/:r3_p-9bEKf&d&JhVirT%-6jr8]Mb\eNNgQHPGV9"u4dR60N;`+GV9^48orPE7pT]@CQ0%2f%atL2(\"@fmeA^]6XKMMH:%[UrFd:Lb%TQ[;2SkiL(4f<JTW,%9X*%*:2:#%jj#Yt2`DpfoP&4_[=@]>R/H5Q8kk699Y^SK1J!d&k%bfU`6E.mb6&ZTo(R6')IZ]"8WMc<ih^FYp_#1o25XAbI<Fm@<k\snho)7Z/MHfa`P%K7tQ1NkQ^2rf%e=uUeN[8eHp58.V&fd-D^%q@KB!Ub8;\7`1kpp`M?gYtmXp4=0h[0@&@cXAc9c>(d,P<BI"&+k6k'6L\)W5cXa54_X,&5-"(N\t5a]L]'a3fmS2kIZfY6KRAs1%dN)Ha@,6OMN/,fSJ2WqMi7;,f\B2-qY2AGNX.*e+;a+dbb43/V(>$X+U;#qEmm3Rn?bmB\IW$9HITNKjjEP`0R=.&\I<DRc*G%te%hnFB+q;(/(Ui\7o9(t(hh)AD;?ELG?I;Q&<<N5,[Y,m(Pd>E8BHE+%1%[Le>PEW[iorQ^)>7BKqM`=`)I`3SHW':3X<?HX`ZF,:'%@:EJTq:=gm;9M[dAo:9'[SF]I89[C%%?"ofAuT+I?DUukp"Bqm.P5$sJl\a4Ei"\#R9P;[ql(Waia:lL^RYS9`(?\,;A\*9i`f#t%j#aH)I2_@uU0Us@$a,IXfSbEsaOQ`T5;c&e3O!Y3ZA7TX4.0Sec+7fk4?TCUAep)UB2:LLF8Fj`&g!,S@G8k^+P0e53FBofEci#A%<'RP),mlE\)SGdmlqO?LQsT,SZ*)b(FF%:qj^mW'Aa4j\a"EAHb+4%6^+L>onrgDSlbQZh:L/'qAC6tOV_9P%S'L7g;ee6%YYmip%%P;Rm#!'L80\$0)d!::U%C`?W<YlZY<MQQN!_PVo=BCq=E>(D]9;,tTf)48["*[JjhgEGnPDFDpoc1T6C06Kc?**X;Nu>LIQ&J'a%qJGr5e*nQ'?uR%P*;r?8W_AZrV2\<':l3oi2QUFc7@DG:GZm[CVqd$ukVg*C)Ql9Ae(SXUfcc424a-BuPK>H,CtqTo<BB/2Gh+9+%VeQ]!F4531k)eu!Sl7M%W%pN6C5t,lb_NJ2kbP6>jL(7&Vd@i<,3<.=arO*?X^"*bVkq$b"6P$2r#Uu4:Gueo7Pc:'pXdu(Cg<N&%F;bq8GceZe[LBPOZgMoZfuo]GG\q3Pe0_?KO:TOj[5gQ2o"?EETBURM9L$es;q199=b'7o?8Y*%D_CgU"2;A(kG`dbqc+'SdecXr%$__XPn,9GGP"j1)9?>fMK;CtQoYP(c2Y^^[-^H+BAg59+:'mIu\CR^LVYA0sIBko3qK[&(l<U`bpc5q70:h?-Tin6S?0OjLqVIKd%<*RB)8O'K*no8PP@FL4ZDS'nf,M0nI3-$TU\L*:a?at-IEopQ:F'U?Q\YeN:[GfK?FQmO8>t_Z0lI[sG4M-W==C*PK]9_kj-X=<]%'7O9Ql/hXs@&ln&B'Jeb?,#6c3Wa`7nGVYN^XN@%oE3R((qn9:N*IZY.'Ki[k?(sQ:Gt'YdtS4kDVq[FZ33iO7EW%p_-322eu![U%?7$,4`D*1Lg7s,HX"<fE9Zog)S&+>`aeEO9k%(-R(=BN`6`PZp+]X%5]^)=4L,+L_2\19*Z(G.NI9n9WqtX!!GFAf8HbJD,97_1\%rh?;OYn'TAO%s?&ja]7K[gu/GItoi6.`MA(mF?EX\0$\M)likQ[W1=(PA:+lUW2-OILrj*>rJ+9IH)K):De(0boCqmHAn!H?iKio%j.!g@m;H<<s67^@]S1ZIA1(O90?B$"rYu7CVL.@u+6aOs4X>d^0s^QG:nOV?b21Ub4IR<DHVY1BB6oO'4[$`QBftj!@mMd,Lt;55%X<D,"K\hEk!;Pq7hS8sQ_qTAWhnK!*X&g<"pKpV/p_LVar68<H5CS"Oi>nTeq>^?aiQ^dl:uXRPo)<N>@FakNOQ@:cm1ZnRck;^i%s8!PCrEo'a561KAS_sD;mbe&j]_dHAs8"8@e*=Ko40%cWmV:#6NXB##cf*\AWpj*&a>nnmd*pH'rDRR^XDK_*.I@$B+8i3Y\CEYO%GJNPf=n$km3s*igkgMCQ%X4T`#5IU(YI.df]SRLU!NN(oUo9R+-S2.`+TU&k&%0Dc\aQnVFg1(iC@7Qq>J"^Q_"<1]:tnT"FD]jt%pb4&e9-7o&LUPX7g/^.nD/F>rT@B4Z0'G+*D[29n4>s[B7ia@5%fpo3kH;A']'fi.]@B!6<I/?BFW6Ef2-0:pfFkdEH.@](N)sQ:%<tTtSeq[H+L)*j$TKA_!g>^iEAUF)II:A]MqOgbKoPs6s0J_,ZIAf#@BPtco/j,3>D9,bMe<dZ<ksH\-no2obMn=8\M\`e\e;%49%D/l%u>J8M=V-+ZshJb9SL.eM`d#rCJk7/f:84<i5'`mNb51BoM/ZpKfG<3RJ`O3P*p1eY!JJ]_C>jZq]a6jH_6S6Z?>2tA"<g;OZ%o@Vj,N*8kp:Ek+r1*Ynki,aYdj''l4[:.[B>5P\G^R6^"UP,1<[`QdRoC2VMrMSQ1]`,effJgD]g>J0IJ"O,OimYC/([AeaO/gW(%L-?IMb?NsZBhJTF*8,[H=cf=0`)"\pp:rn0m#>--D-'T:\\5)Ys7]L+VsKq6g%8f(713+4?q<G2[77^gl?k]eg"F?8^7d^ChIAO[%VVu?aRV('&`%NpNoc'r!,^95=)%[e1R76AYT&jdYhSJgc5=gtg&-FM.+Skdgkf%f,c>ms:r?*5RTiM:hTh]6CDp?s?!97`o;j]eE%*i$fAQZped&9Y?BJmd]M3<@R""ZqLiD*4:NYW>2'"B<[pCgl<3oFlPZ]_Cj<KugGo:cb(5N&t^$`+;$e_FafGRtjO#rli\2/qpV7%Ekpru_t2_WUBhPC7uI2M(dV&*h?Fh*=iZdnjid`!^XFWbHY9XfpOEn^,l%aC!88bJU:4;EaMSF&I]]a/G;$$OBbS_,cpk_;HW=M&%E?!1s#]>(J%@t@XFJ4_25kJ=;\+rm_:*DIEJFKhXn$&J%"ArttF2`pbI?/+X`lJF85\eHBgCBVdV?h*Kkp%OWm^j34@Bu]%%Zldh%lFpJb$Bc^9djs`eD[iC,>Pa=]#^NXF*ie9s3Jil#GX29CKN?/'<fP9C7LQ"gIW;O"?.0Ke#m=..^N&/[%#)eO_)jpg[]B:SUaqBO%"0a$HlrUYQRu@@Tiu*o6/KeMhomMTQ'h4QZAJ2"JQM2D?<fl7C%ko+PY3u0E:gpY)4;)\%U=F\$eeD/!`dAP=0'iD+LaYsJ]hGSl%"h>?d&dk:"W4S)H6=FdA:c$/b->5o#M:MJ?c_>tK'9uL`7?pqB?!##L[Ch:+!>ji8K`U#$/TtcuOa&KrTpIe2Laro/(uqlFQt!se%of]O!B'-R%fF2[kfRRF0>2Hi4B!YBOKfS(W?ipa$*+H:UHWu"[l.2U`5cGI.o`b)rjZT90';D6Uf]?UtFW2m5Fkfo^pArp2aNmhQ%3HGu$Ku$AFRalh<l&S,cR6V7lP.]8cot3]bQ75A$#>.6&bj!rrs7<kYq8\Pt#omhk;ksUBdTNC>T>gG:-+E^gW5o]4H$No0rLs,D%Z[kd_l/c-.?TOr"Yfr.!/Q;mX$;H0Uq>ml&NfoY<362tNX7ZOMh(u<:7oPF!4>[[al:rD*:+G97`0JDjjK$cne2?^+&p[3a::alu%(*FN[EW427W`2:be5J'945b>`3X/AFPuu$]+raqUMYHasD8iVX`TdaTSL#E88TCDWbRJ#!^7g_\)MUcrjO'ZT?"^Tdq>Z;)?u/T&%m_BjE5M.fKoY^6U\/W;(_2>#U,TTSr`KGYsYN`1^;&tm7.kcPU(jN&X*d-GC<_T->2keh9!#m9r[<?_ag+j$5M&U)am>sn[1/?]g%KTdGimeS`u6,?%7'hOQ&i\,q+NaQm/Q!Zf]L2*b"&f,Jh'qsnC#pRWV#J7FQSh9Vo1fI6Up6KV*&fFIJe6<Us7)m3tX+5+%QQZ@B%6_CZYVU61-D;^lT.@[.tbM0,4$/r.TY3fuK=(05iS=&));V'G(hR6YH3kQ[u?KOf&%56#B*sLn[8TG6t[Ao;0ST\1S@J>@*C0.#X%Xj5?O48ch0_p^d"[BoNVe*.E\7M8Qi8*'WW!ao.8gfY22/W:/L&9%m](TF_,[.W>nk,^^22c?3@%IV*ano3&FJJ?=++lCArd*!7M%/X&\[G-2+@@0)tGdboRc_<ac0(]Xi&Jj%o6(9rJJA,$_F+i=*hIhBu;#@sOolK*Ac\X!O<5=DiT("T3[?cHGo6hJd?SNX)"H6A*%%N\%t&'/+6K'9YEZHlsYfnVK4D**G`T\Ilu77\TZA^U66W\'40f462-PJFfOr^f%S@c*"79n$SSSFD^[Qa>n1(0NbnP#p9:JjbU_R%hNhf/,UA`KL,B\kZ8*QSVm9>oHSU_/#F.ho7uBI4b#L6P]Z>r\O&;2a)k,EA]TId7NjfE4UA+p"'p<1'9m'#B)Deq9k!^,hl^"&'%LS(*p.AGl3m')^s4C;!QCBu6T&r8As+0?!"^j]gabdc"+\YiA3*)6jbB+f=Sn=146*m66FGc[s03^pMCYHTL%b-r:;X\iHG&2QF]%(6rpT>d:Bb$`;@d=LX>q]n7mM#67j_Pb3c/]"5in4VL7$hO@^*FPDQomYoX?U/[=;XH!M8D4)?mZ>nO>A1jqk]=Lh5;Dp2GBltmT%`)Q7P>>+]KihWrB@eMM_Ms8iJ#Hg7npQ^N9&D4ITV,q^IYe`;HZ)\t#Nq</@CMf\-54mb6\ED%kHZCc1KMls14mto%"8)&eDg9]q%"oac.On;6&e_<nsh^[ND:R6d1TXP"5nuX#Lat*u0bCG>oRtc\NeS"A]`?Mr,o[<;2CMLdRZ'!oqjh#\!G^ba4[f-+(a[.0r"(g_4%*_-.a:Cffts.J[mD6j=D3oHM#6.=G$\r,UWqYg3YU?XgBUU9*@7`K+B,!?HQd4AO"`tYA4-\?LN4HZl->a_SGRD+G"g]W&4Dr?6s%GZk[JOac%WD!Td`D1Zs0,H\CH\nQC.kr,ZP-4fF36rY5!1LluFRqh6^eC8?7@G"GD)li/sdoi<2FmkfB7l8+i]%fnF^QYO4,Lo8c%BXd0SYC]TT2[<mR,>;!INCAO)@)<JYZ>`JYpoTtH\3uR?jBf?KfqCg0AUs_Q\Z8*djZUc<$4N\UGI7ntD&^(\aLr-&jo)\_CHpFU%k`>H:Tt6r$rpo%@mFuR+GG]g7$R"o@jYL1SRMCqL\Iu_oH$@[T==$0G>`gnp4a>Eo8<qTgAi5I"h9GH7Ro]$U,"NCNajG6\n-$Kj%[3feB$h.2H=/0795g0.W<gX-a#Q.Lb.dQB22KmXH69TO/)/uruSQVa<Ii<WW]'gTUn/1fmeXLK#?[r"Cp00?dG;m%R))?VpcU/7m%Sk1umTuPj\$,4*QjVIho/!4DdIk$ZVPf%(PKZ`7$*.Y473<6gCrO\OXf/N._r_Wln"4.EQ;<U5[)"?coq?qG-M9pI=B)44)hgU"3%9V54G_FBfe;YY4]f,iZOq<I]:<:U0,9c8s@:G6>JmSiioY"fqW,FACfgo+6'2q3%p<SG/2eBH)$lO2E>LB6XHhf/sum+&T!Z%GE1%j@ap%X`(V*%^pS$\N;kn[AI)bcE6^*K,k0OecE8'G4q[b]R-#gOB:M>;;Z*.=%2pS?5`EqEA8HN!5s4336Fe4nSLWp@R&.8LH-tn%f>a+KSXA,6hDYt9lME=1Dk$E:o@To9MRp%[Qr%(R\cUp]matN)0=pQ*d9>,o\34e_niYV>2Y/m)&"gT5UXo%#?bH4+:2Y7;bA#h(%_uG5boCQ`8Lr;2O,+A-Rc_qsFZeo?HL%,g/c<%"+F;?ut<<HTf@#m?91/e[JS,g#jhGNln3MB(Z:'6r(!SJ\Rc'toH`O][2"Si>]%kg*Yg:AbG!Rptk%&XbAP&qQIqJIDZ9:k/S!#REC+@)WUTJOf#;JY>Z_Po[6*\?e1AHl8qO9C`A,5/]\qF20b[1t6Ml1YV^+Ck;OA%>W/;JBs\PhqJQ#n0HlVWO7Nl(0A^#bI/Ep!lOSKur=hL]ETeAWMYhGg5B%EfpP7R#pA=IIlVG")HN3Lm(B&:JpJCAZKE$1p5p-@=%q2`r7ADg4iJY[1Fj@\g1@7YQ(N3Qp[6mNrPhkh!A_OcmAU"ISnJ7GrH2i!U<,2grqMZQOPT[QbCo\fSV#)jDE."`l,[@1G@Y74ah%`1#-lQ9,eOIGk23p>;.N6WP`lP!%ff:$`"C(1[kjJH^/X!J@p5jqKR7bL$0!._D=#\bk!._,-UX&kcm\RQ.TAS4G=dT%#.oNkiV<%Cj32S[R,V"4u(#Q=`]m[j!Gn)K[F?`C!ctNH=ChJ3AB*N63HLLSca7nJ2))H!)1?8BgEjrLhVjjhD!UZS9>>5_$[D+)g;Ba8tP,E%XoSD$\6dZq`2G>Y5u>Q0'I[E+l'HK8HiA+=6UN."%.Y@]0U5((L*e_nXri2ZA(0Wc<IePMF-49[4YIXC]ceMWYn>n6\CSTn_%hL5%*,,rb$mV*_%.pbj&K#MHMZBlWC!;\c%^#eu06c$S7u``:&r&Z0Mpt<+6EjE%(/r=1Lk_EY&=a(5l;ADK9sQO[C%aBh#49-]ju23H%*CSCX7)P3eU1$HAfba!qgtb[u7,ia^(m64_OC*UK0Y:p,N/Ma.ZE'YeR&;7"YT$Ir.R]5[p"G-8hU:E?`pq=(YgHb[4+'^ue=q-m%"8toWNl[aV.$,3p8&6Pt/V$9!K!_rh(O9N/Jb2^QTgZmi5^h-,'@<ICAohWr+N[L*AbdY4\9cos[+R?S7*8YEe"cd@<tU#1+Y]Fs%`*;pAF9""Lq_C,FhQ-]jF,UNd-"I#p1`d5_@Fl!HOMT+LG9mH2(g:a$CVp15;<r@=Q>$`jNjdX""-&<qKOIH%naIA\(dg)$,1$1h%J.jT0+<'RjEW<N4j;`$^k!mgE%tTFnI1*Oo"m(t(h@LNIDHPH=ARlWia1uLSe[t7&+9YM;[#8%Ml6#HfqN\O6TI,]*2mSZ7'El4r%FV_:NJrhFS[$Jgjk>.Ac'Ohgh/;k!h5T9inC^#jJcU0O]j[_L<5Q[IW$kXCi9k:I@CB+ES,A"udOFbeU(ID#t3!@,S84:.!jLf'2%RaD;!Lc,%XiE!]R@Z4?/Eh:cZV"*A-baoO=<s7(Sp^C2913;B*o"$rc"=-3#@Sb'V'7la'?E%p&VoW*]e=1kW%*l(,QqKfT-PFFm%F'O_ol:p,<ITaZH:cB>:(EoBtfK`uo(O32^p)_9Z<rtJo1fXeeYXrH(<Zpu;CL*%Q>M@K//?f&a6NgLJhTL:3aW1(qTJ+(a.I0u<%0Zudb2bW;.=@.1p?2\hg8%*0iCr`M5Hf"W#$r^Ob01f7ZR3r<C!R-=,"bDIH+<dUL&<_f\F^c/>@nJ0E#4j;=L)BHqWO7:SRQHY,%/qd6^Y$a*cmaG]i(G'F%C>o`A">6_D.\GBFM*P0EQMK:PY*HYek+]X/pcRerBA4"tJ0p7,67%3kDoA'#f3Q1s!Zk_d94n[>0$,oA%L8o[b"*6ZeOLE7WBu?Of-!;Ht&s*\U";!Q/_H^!DF\=d'X/2Tp:q'8sFfs.RfTa,-fE"q'TSo;T4,G94%GmP9DBQ3sq>n^[hu./U%$2<T?=D]1qA217.a6b<<AhkA]quPN-C3Nun1L_eM5d26Om'GWNnUq[^QDiYU_/8L0HGaSU-`4)g\Bt#G4#O5o]?T;BU:[/=3dB_'%b,Z4f)l]QB=jIe/^b74#KT.,&+ZCr^^m!lOjZ2W&Egc/<3fPk12./c>E2G)>XSo-AI*iU6k*s'@*1s@<g`6&e1UKHCn"=)>MPm6Z%3#^V4]hj42[lmYfkY>Obm*m)+JfiY'***I1nAp=THP"4hqfhl(RmHfC+I1mJlNF7:X?nF32,4>HKaPO4_6EZZ@q=nCQ(.i`8ubX*%a*@e)h[FRGm<M]*-FCD$Ca8I-b;K>]dplHh@Dja.?a%JLLQ3(e0A8(jdX@%/\m+F5+mW2#/?2V0$1hl[kKRWhYiE]iW!<>+&RUnd%3`eBii2[Gpk&,9E,q$L1P0Ng@i$6X5_Q9,6Gs5ZkK+TGLUgXBC83=eS0^+G9cN(m836UU]'OLu><7%!T7EOd5J[gDt1l=_1`unbZ%)9an`cAA1fW++ggAWbjNRrC$YNR6]T)sR=KT>>\&m3ce3.YuFh(IU8B-VNODTcCk#@dF$K%Ca]?CDh#.U@<n'.^2[U=TKCSB2oD(%89#B+Assq!"Rm?ITgcoNbe1?HlptC^iW[PHcn7:.PfL9V@h<5mDQEho2[pQ1jLW/moh":r\/8Bm+CJ<SJEAB*XogM>?A9+4G^UiT%[ig7r1>Dnt?EV('e[QaSV]o\@&B=6,mV>3LgeOrM'aQ;u0-`o[e-a)=/O4<*'+M.SZ1A1NmI1;Ie;.K?ZpeLSXPe#A)qkZ=hVru=%PBpe*>hh'dC=)GcShIpL&T;Y.@O:f"\<n;9n<c/Q`Qd'+O>Xtqc#%'8AWO>%rG,(H&JpQrACZFE\2.^^QA?L,0@uWrikeB$)]"7!%O`bh?`/V:_a#"uX%+RDc&/WmVH%i^>)+hj<L:=s3o):i2/VkE\-!K:[b%ebRG`*5QEZXa/@%;kU9>!]48Tr&,J-o?s8%cggc6Y%3%(?[$a4Q7s$5l.n._s;13>i@7C)0TtU\'\3%fC1],(H/pc.)f`'`*36)3%kgZbKdPTL^QJ']]]E:@=j%Db9Q"9'khp372nh&EJ_2=%h'9cl+>+d%@LfOa/d>iI[5BeZ`OJJJ2'!5El8R#L&TK%1U.SZ7/n->#57`R.dM%?o%u?.t>o3&EF6P->N>q",dE2oc)_oFPjsB.Z%*)9Q(1sABE>iZYWb`1g\f+C]m>Qjp`+ta@,1k%ht!*Z;]V]dZ2[7lB$iaN!^oXdgc]\^ZS(#kr3&BXnQEQLJaoWB?TC+jCZRf`&6%$cE3&EFo=4-Bo]J*YB3'D**/5>Z>=%ZsXWA=\LMr`.]h*:2YWmW$Fl5dX\h>UK5Tj<C"/r?D;;RLrPTIZj!*P<#XHl0VaQ\&oB((%g5fp:6'1/QCfm0(JaZY32PL&fe?6\m&9>kChIA.;/S8S&)V+uB0S26Z`T]iS(m$Y$%L-8_/V8o,,Lup82TCbZMaO&qMG:mCM8>6T%M_4F,_'UQG?>h(O$>X(k.*d-i[<\pnY$l0b05Oa[*IE&aYSP#c_;/SBR;KkOB=$n^q1c3nNDA9fL9o6-VNj<iAoS2\i%0C1d?G\b%d4,f4f@=gU'jrr'YVr8W4)8dSen0DDD-h/fW.M?10<mEJ9ET!!X9F0uMmB4RX\'uL[)EAKXYlb'aGB?)Jka=;4n/cQKkA;3b)!GZ%KK1r\@B>.p8@Uo$=IVn>Pt%k"PV6jh,\.6W?Qs@,Hl@1E,@CVL;emYkhT!g0VoYZSG1NuL(YE>g\<fo:n%jh&-ljmNnni?L>eo][%k9%Y.-ub&@au4p-868cGLu&=ja];&SNjf(uF-I+f,\@H).`'f9_ssnP5d@No5=u(T0PuEF'J,ak3Z6#U-p0f>.9g+r!!J<QluCE4%d<i"3<s#7P"72HhP1H*h&H9fP/%"'t0^A]P7<PV#I7B[.f&,".D[#J7),<Iu<.?F*N(;oNMYn7:k1UR&Vb&T8SB6B+AiBWW<2pcU%M]#!?g[(ucEt-\T(?68"q8I+a7(J_]"W[qZSf?\Qe1JI>/T'Bt;[5@V"Pts?@%>=S1Y0/>X1t1=0$./6od8Mr4E&5;;EX7rqhJju%$aA2TRL(`$Y_IZh!Q'\%c=P"/k7]8K$!("-#u/>nKC29fIqj<U;19I:&_"f`;\rrbZ`f:,2+"bR(.27iaO'oKPhdSgLJnn=lP9:/%NkB%ZEAY#23qC+9f#W'!=/RZ30e/HOi[I"+!Qp5)819A_Op3)Wiq8*_G0.p)K&Hp*@=a:q0-r7@o20a..qd/5Ef.">(R&gm_1h[Z%<Jh1?WGRI@\4RCdMM^(?4*d>?+.K&17Mk`S<.U+HWFl]Z-hs^mYSC8!+.&K'MGT;@!RYRN@Tla,cWUAGZiD<oorc)33c0o5[q9dt%PYSI/:R4[QRhMlJ0s_*0kDrB#6;N]Gs(T)0N#)N"XDiYe1ceC7W09]j1iEfH_(5O*9HBuBWmb%^g0Rc#V^Z%$[BR2a%9..JK<N;2%l`h:,nCb!qX&7RRfClLY#R=NZI@QHCN4KU<fHY#D&L//ZN+2a'KgOe5[tTNs2YH8GVPBD(/$JP`ILJ/_02C6NF#N`Zb)6W%C'<Qj%T\]-QXQ0Mo<Ut%Fe:WW$>/()8d"nST>(YGsl!`0TXY?/6Bqiu2JCaVd`>UPE.'CE4)DKO_[*CAG'H.Cp(L+7Z4!I/Y(=qt@]d]+=%*e6X^^))E:AnrImk969=&C>,<3p9H$%LqI(-rX6o9`lpu;O5c&%II`-B.7<JUd.3M(A=L51CGMdMfDski6Xe%fGH<;YZlb_7PaJH%=?!RE@N>hRXIFb[8O/C3XHWmSLi(,l67b%G"r,rG/R'cOX?-!pA+/,3Eqgj[J[fqR$\[+E4`F_Thq=-IG97;acVcZ@VGmPjF==S3%kYRqce=fFsS<S^6Y[k&Z"mD=F1p]5E/)kt16=XGN+?FQj<^UAG#u=KN*!=pJ^DH&qEBc`l28c6FL`9&r&J&AH`<69.(mDbNKJ"S.%:Eqi#InfLO+U/;VWCq(HL,dJ57lU^VrqGFON%#s.FL[uU/rZ"ICA"1-bs`!?c!^1$FP,Xe\f')8&Z68^Q8"&I5`UA^ILd+\HnVWT%il&afTn<'^6q=P`o=PpNCqplpWcf/GS311EM@lL;XuW?&R@IQE)C#E5`I<B^X]s:e(bU^6U+FW(%:"##5u<6Y$sG6.&CC(1jqt&4%a9i&&)g*+hF*6li,V4aS"S=.pT&J?]9SbOH"B0q-1P8g90UJu/[E4;I)J)Y`7_t#?T/N#e'Jr%74?LUpaKrS]j%43VrEc!@`VBO7%(J0$RJPEID%-p@k<Ji4u=UO^)+J,H="EU^(OCLV+U7e\\4[VdmgPYc4fS@[[*[[2o1RH'3Q*^O"FL+bp39\puHl*.o\i"hX7$/YE%2O$mEKF_'F!MBh'7q`qJ<&1H_P`f?,0HhLD=gD#f/Y%*K4m?S3OO5^.X4LWLX)[@e0l!Mc]'YV2b%5@T].(1e0abdM3d&/gSR*LM%Ht:QJ@A@k//W?3L^)+4ES4>a-Gre@r&RI^7"2#hEmIVLa<aM"r&[*.4'6,bYBhPb^(t$\C:q]tm)Yhs>JU*W5X'*fcW'lEtbD<B[%]s(Fk.EP5e5n>J:#T!js@`g]N2a\m!&C!.JaX_cRNV9I(c8^&//rS#X`Z6B!+1iEb@H=tn"OY_Y*$^tMh=CMrog!i]PS[Hk,N#hn%2kuLq>F%qlW(JJ#M*240H-lUG(5pOK#p8tc3NMQkc:j]F-q#tX3c>-RZW_u1h']ZSH<.F!2AgI;f3*`i@hX<7lBDtps1Oc)\2T_j%9s[FV[A`f@X7f`i^W#iAa`FO!7R_9!,f@K!@DIXi1.NC"-NZ+#\V[^*pGspq=S^70,Q7`nE<$1DST$Cc`h4.ng,!CY)i5N\O=uD*%p#:B/.j6u+g)M97hcprmS1Ms!]F,BL<.+f3Z.7u7auIFWV:qnsk?8!BXk,<!87V_=H7itj=q(@$0W-Rh`N65`#r-oK=U0qb'pLG+%8N0PNiN8$li,Wdql5XnT\Aa\+Lk2:d+jnuR>(qPAHO+]A5h+(AApE7:Pf<R5<X+p.!sXX`?R-,U(0/mo2jq'W>]!MC>AF:0%uN@K%Fnr])kR;OcRIemJbI@^0@[Z8ed$Fgo.!Ql@o(bi?/_g3NEksdFFC9[V8D0prA`s=DbWjM^B,"I)"0?-J]PQ>;/<=72@E(Au/SbRb%,&t,4b``[&!,fr@7Bmr_"AqY@&I?!V8ZoM<(I`'Kh]cHc4RIja9C83PKg#$:4:WK_Wt?=SXma65@sB6;Vhidqj+%l;2F?/f=mpt]%lm+b4NYscVcc2^P!g8pRgg(n0"/:]P(RTqfD9.h4>0CeaU]M1l#D9iU>Saj>frHKm@k/Y4<>K0NA5Q0+Nj4_Sil.gS4E=-SiD&Od%c"1lZ8U7*L37=m(dP9?3GZN,-JBSX@JaU`GpF+9t*HJAN38)kU5aXEKF=1s"LFa`pg_MMqlW'!hfI<!VbAl_O12\%&SHR%'`-n[l%m\Uiq'!KRk2@4ZFh*)H-N'7u%:1>Rbs*7T4U@*WV8k)U"j[L"(JJ](kni-2q>\UnggY3^SciIT3&Em+m%S-l\>cH0fH+Q\TBG.;T%ZP_NGDg[R^(tb^;`4<*,+71JUCAV:BR6UnUAWp+`$Xc`O03:sSAiE8oQmk+SEnFAqL."06qGc0cN,bnmLefi73O0"lB&&1u3ZeL\%[+/WD$)XQ6Q17+GNfe%tMgYO-("3!_@pZ>'oNXP5?038p#/2"l(5LE9C:06t:4QOpkZOq]"#Q]IU-&L2PJ)68)"jd5F2t5:l(9:)%I5&;5&B(i16cTO\0]'q^,((n1CneZ+AcrA/c+FoE_;,7Mn8Gc$^6sFo+t!1%Wq#WBU%.E<AB9jh"FXb6M(-?30io+tW/FuU!=!UQ%hhY3]-tn_25XcuM4-*/Omt+p?9'^r???nGI36kd!2us_arj_/-q>mA+a.cdEfT_jeHFq`,c+9ON>FHCddbCI&'%q4X[$245Pj2$^%=K/"q;p%C:G43,TX1'&8hlQ_N\olVV;j#u17\e^l`=4D/[YT5=\!/.M6F)L+LnZVLildHM6&XIAG27YMV,^-cB=0(o0L$X]@0cC@%;\[W#HOdMsA[Cgfld^inKUY>V3t="5jX;liD7B%M]15rW=F%<f#-YHacIFfn^"T?pMjBH7?jt5%UPi!ri.a*5?#>YEeR+(MClS=$%g%`>m>rQudh$,3Cf)8hZep@ojc&ZON_SCR^NrN5#W[o>uLaffMQ>%U?K"K*im5Pq;?B$s#LFNoX)J-kF3hronaU]#[V3r>(k/:rU%M'-8%=ldQ2ddh_4=Of/GEBn-^Ct9/e,V4>/:jL7r+O7`i`?2)[<LAJOp;1)N4Y0Zb!r6)Lns%T-`lm+A.hL5OC-5a$U*f'A_:5=7%W;=51.7o3lT\=&p1s,'kB^,Y/N&X(h,QZ;\4UcT^2fJ#tZp>TW3=7ImO<eVkqO!R$^_Ho_QGKan&+$fB7OOC%rOna6?\[p5DRX`[%Qe6X$fOR>)Wr*k--?qe0.l,e]O(T::,N"PWPIIITGX87B3HW\0^Y2/2-UeMGl5H:c\t[T<[6t,1Cg^NZ=50e=%dNoT*hmPc>uj@s%[:p#m[^Cl(orSsd8HeT8k(jmB>AhDV@]F=B#!\g@.;0-HXhJ_R+=aI6\/*[%d;pTY_ES(?dXpoK[V-/NQ4h:CN>o6f?@l!S/$K?Y%;@<RY78HdeLl:78#IGMOgPtE:&3\EK.);d7,GqQ^,4SDq'sKR0k%Z(T$*QBIpkJ&Y2Y/(A]K/UNh+%>cA%RaXmD6:Fgmj`+FTO\P%8lL-e]>RBVEq2ZI4TSE[Bd1P7k56OK4au4DgZ`7([ta%p0Q%Brk2`&&aGidK6B;eYF:.Ed#^QQ?[h4+*M/3Xpabe]>_Y&!m[Y`=)%V&:GI#1HNi;q^9O$nk3A;i,Ks&ECeDAD,$^6u3';:nM0!-fp<?*h5G(*aN/TFZ7IQ51XPO-a8ToG4AV#PEO1rq@d8=AD+s0mLmm*%_JSG*n#A,E3CmVD-s5JP!QN'78^t_c-hjG?MlhfL\Y))N,F=S3%>E"D)*";3Es`DaAZu@@m=l6@LJ$p3nQ7A:1JmFD>a4p.F>)TL%Ub!@6M::U,"V"_SK`g$_H$pAj8;nKq$HJ_QMW_RB7]8:C0T]bMkZ(bZX-D+cChX7+&J0_t^+@QmQe3s7HQ%Di"'bl^\7drXf:$N?%*k2b^0M3afc]_L_^`9^Q5g*V`.Q*)qBE/(@!Wf(FXT\Naq5j.-2JT@_aDkg=9H=1Ad\8:#`iR[^,FQKKjEq3^$A?LnAJ7Qu&hk5a%)=N*1On<s'JiP=g:KZ'/*cc7^(<H=aTT4U"FgnYn*GBY._:Ub##;Jh/Q3P&A_-)2c(`:nXFKTUb&Mr1*q%^N2I'3-?Ft[`#i[cj%%dGcQF[,(f$k`+nB#n7LM8EYsZouVDH>EpN2_m-*%>&9<JP4>M)CG9!A/Sa[(XT:Sl[ah=^VXKdIDpE>*N;AP,ULcDuGT><B*2gfT%F8%XO7^J'HZYNEVlPFg(eGE[i))PM$%0l4B8t8e7M$'tjD$Oqq*Z\l(*nCD$^j<=l2gBAF9m0ALNMa[SWtBohmlRQb\=a_S]!?M1%JPga?JE,9codK+h%),Ep7N4c?:E't5e8#$lTo6?_GT0'k)UPEq#B#ba=sXCo9ucEi`\6R87VUVI(M,tqV:r*!!P8dDNQ"3*YO491%4FQ%i.<VkDs6@C:Y=$$#(uhtS@S:4tJNAB,ch1kO\k$u@16.XPo"$EcXb1N#Dl^<V$Q<iKJUZ,]phBhqF.sOC.7C*<PXoJX_FS!3%'siS>&(S,pdpZ5$K(?:-5gSYk'f9lb79V5<\gtKnqcN;q40kPRJE7&ETn^E:(q.KqPVWW";UQKeZ\GdHGWO?3\MlJbC1mY9_6YK.%Q,_f!bc/Ll?4F\.!Zee1<``uSf8_ZNVZ<'5ac"he)dPD+rU*1X3c+DX2k7/@mll`"HlY-TALjU1IbZnk2*1ihET8/s:7Tmp)[BI6%NhPK&0MQhkj0esQ\.)gd\"Q\?2\$R5+/Cf4gt#Fk5Ao7,hHB-R%DXl>*;%62bhKXe?s/^6T-o5kY$Q!HdUpTfkL_Z;Cfb<P#JYtW%HKr=d4O3&NdZ?F?Nno+dFI!6IVdBP1dCK?0A<EY7,gj!I:O5ru\I>9WJ1=QbR%q2>leJOKP8e4!LZE%4`j4D?[Le-&fOu;k"6O$$%(aot9\qM_D]%aLT+N7c%Pb?]\D-8b^pY-`opLXJ)dYViXk>uX=[Vj,%j[J^?ZJpRFq$7nVP'kT3W-0aJs#ZOS3=MG%!,Pod!j!7J%EPdCZ<aLYf^n1KFh^,O++cg3h3iLi("L%*Nh$mi.lBEIY_3Lp/TN+IF\PE^DAbX6*;^HDRZgG<WIaM3qG6&CYGl\?mj_Qf'X7G/#%lTjL\[g6_=DaelcJtB%:D$"@NfboI\cXg]1_k+afJ]cr4:uUmM=OBMrHiu?YWcImeJDu1Fa-^(2atObt:hT2=/[4U7WSe]r2j$]l%r*0Z"I<r%:JWqL+jR=t&O>ap.aoZdU<1jg5Ifrd^^B[gM++^kpM/_k3JfK+[=(#d=k"o*Q72jd<5Y[HjEVKg*FP;/r-L+S@^B=0L%5)knQrRf9939tVFn.F;rXifU`@-6qjV?qAqLHd\ins;MLEqhHoZGfkISYiG/<)G[R>TA':qF+Pj3nVI2pV=f-,IE7AYB'EK1h2qo%pcY_=n9]-9n?Gl2<,Pr&[ZjZoN#Y#)%%jrTQSk:SUZ_,\XCQs!*.G@,)Md4Pg</CKY^Qe2<ED3Y*aC]kH<3!Lce)$%@kS-GZcY)@%M%XEGNLCZT[0LmQm0Kjse7r!\);hV8XucQNg0.:T&71lQ`E%o:[<IkAkO:D9l:oICba(nE`c^XgXX?$kR0Arfa*Z56-ZS.^NH`t'%f;`/bCe2&O;m3NR1km("?n#0g*\!42I0Tt7'hsl4F62JA$65Gt>E$go\jr\T$qF\-ZGGn]ZT>'3btW#eMNZK\TZ89Fd5BUCTRGs]%CV49o03]/4QW,hnc>]fQ\S,5h_GC7C^dOic##R>e67]9`(:@jqbYR8E9=(X[aRmb0Qn*$N__'N\AiWnX\mT15S2&&H+3]841_+]H%m,*8XZmZ)Zo!Ll272$Cu#G$O6]h$*V2!m*FQ/qS*K3J1AUktB*ZaRG[44]P-ih4S_<\J+j.7>%S#fh<>lo<si&JdXBfbq[bMVtl(%?_Sr':!@89B[)nNWQ=q0KT<5ar`Xn]'.U\YE+8F?)\KY$8@h#JU5'7u6LSe2lR>k7bsTV*8]&\X7;n\LadJO%`eN!"Tr9/>[9>:u%$7T4F8aB(`>_5GM:urtE2G,#-Wb%jM9s+IS'!!B/OYas,$?r5/G;NX4iAcZ^\Jj#']V]S!=6('+^bmo.EX(O#,3mWYjOGju*Gf+5%,,HNY'r=6c2\K&@c*L<.`!K3OaME<*UhE/u+LA'h-c`J%%Psam(0<*.@l$sRpZ)brjIhE)#uh,W6iDn1;\g-/@"nk49A1MFdc3't%A!S"R7o@@;)R3Lu1s\NKCMX$_lR+\?%YGZ&];+FH,+u83[N]bPIml)&U)BVO?(oPo-E[!CEDar[d/q;PZ"^3V70U%FX[eO=.i.DP%+l=Ma&/:J6#EDXo?7%^X'Ga[K@#7BD%REYSm-A@L^*\Y?mg.O.-8-i+lF%$"2^Oc-'gRd6<7I@V^?2<_CKgsm)^aiN!Pk+!''cn4%!m3e>h,ZgL0s0'0!e;,k_tn'&.KJ]*jL/s,!,tiR@GNE+?ZRUFn5_ij;O-^^<R;Rb-?F=1+J>6);7?l6.ak`,K##4H.L%rU$#8#=%?+1.@)J2BlXTH(1FOiL1K^ND@'+5/qb[(Af]<-\#`1D'TKab&??-7S'!Y(/]la@-%'B@_^'`cGrB3)JK63Hl^CKgs"<fD^C<=!L(%@B1M5oR]Q0:XtdlDQ);>!!qo1=EUi@X<0jnL3b,5DA<;_Q$2CmiG\lSMljifikr`9iDR_%kZ38f)^Os&Ri%3X^hUVt>6Q)2&BBb3%K@eRmUVOr%;;:d`"b>F!c+$VYQq1+tY\k0=Q7Q64^JT5[GGV`FOKW\bj$nTV!D4faNP_AiY&^e9@(9ctD&WX"TjIKT[SaQ16)*1)%5o%<tDA8HpP:^+Y7c>jNf+B'b@@t]Pl:0_e]rI(8NP\0p`:(,A**H_>g/^LRe5b+&[gIXXChC.V?j*I%CtgEn=ZN[QI]L8#'"i^:%>6SH$GN2`_SC6%uWuuO]>&4qP0BT]d>6UlBbLL!$[gGcZiPS[s$RtT`n(h$L[3NcW;(#XE]S*HNBR?'Z"uf&='5fN,==Ul8Y5:hO%Yr^iZdQ^$3*mCWAOgC9'?[EDZPq6-<_%.BKS2nd2U*97lqM\g]jD)<pLCXb^3uWt0lG8>UPaAR:!L??DXf:79:Fs:1"!H.LY/#?g%/Y8QU65cB%PXHc(2&!=s<VRu4-_N-YeTfp%g&n;X>/:8fZN*K%YTI2+q<$hFBUAe'Vm-n@g"+u^f%&,PDi^9]18[d_at?@_c*o4-%m&fIf/YZ7Fl%SYhcTLA#aS]hRg<6X8</kEiBb.!5oCFL%blSmMM7MHS1fa7r/cdG/XaTEU[a''(Xp4$7Hb<l3dA'oD@lKnt^p3$&%R.3uq[?'p$&dR4A)ERQ8(s`:R.%`DQ7BI$OVLAo#ZN;pd%klB80Joj_QD"stfmXWMXfJ/+hB"Bh8ka[Y-Is4c4)gZ9h^$H)Tq&(+%0.5Y(2=pHOK*G9I[5MDWq.oKE$7pGX]rN`8Y$M!8l2&blm0>p->n,$Np38/f5!PN4X.>mNe(QR_,0aK5^X;1LA$r'-]USt;,ocZQ%)1738lVN"=@>MVqZa)b%^)Fi*>;:2(WFnD5JHHuI]57=%\@qG6*jGL6#],`"97o-kE2I?7;GDa\3"<k?8D]W`dh8_eb9^^kand;R%ULVeIW7EWXYNF@1G.D)3R9Np0and=J$7h330d/CbDfJGcYQdKb2WBodaD:EHF[W"W,?>[#FobF4.Tdp.3#]tP3T8_sW4N2XhUUd(%3jY\_e@mJ=OZeU5FiFVbd>i`^6"\$n=;DQpR;0LFHG4b8U$J^B0:je+;,'MCf@4FBW$A5UG\9_UQ?OWt:(o"63V+[NR4Vd>52Msn%B#h^FQ2dbhA]sf]:b,@]VOW"]Iu2uRCfHOrZ6jb1CKX`81Qo.%N7I3'))3Y?e3cAi4\c&9$S$Db!!@<5+tu)'fcqFiYu%>5-lAaD%>I82Se=^X(r;N+:,S[0_,hY`#ZA93gaEGP#.e5hN'anGp@U3-B!m'e@e$t:WmcEF03(uTPi!=_<!,"J-6=(Fc["48A)eKYkd\I?Y%Lm]\lbEpbIND?s!4_LYpHGVRg^-Oh+E`ERMSj7P/oiu#'XL\I1,#KT=@<c/(7-_+W*B5IDOj#)Xl$Ah^%Xq]N=&7+aO;,`]Uq@sm%`<:(AhqL3:YCh!#Bsj3.:C*n3R;n1^B;1dIM&GM!_:BW+1_qsdLnBY.ea,/7rhI3o>YbgnC7Y#sestBOaZ*Q_TEnbk3")D$l5#XV%`Pf3YR7$ES'_L2;*ZAJ+MSt_.QE=Pt2"EX6)8f-ZTqG>5crO.V*1?si"WDo.AjV@=*8(m]RIMPlC'P0K8^RkZlp1\cHntB5"k9Y#%D3_&B"K%Kh/E[5HP-I6C7GLotgF%?@@=m`GK5X]]h=3@B3!Q@f4VXC.FLHfjFQ6GZYCR?.kiu^de<qX`-bO=$L2$%kYmQ8CFd#sl%$kcC$J-r@j,A1!%W?r%n,ECFgNHh:#hB(<,!0<>9c(_J:H<MW:Yfp6L=bDI468EUF/^%24B2HVP`!`h8FMPsY4KY9-kt"hZMAoj@%RBm57A#'0+S6'Y(Y,p5cc8]5F'g2Oim];f`:<b-A]%\fh2MdaA4L\I,i6#7n:9WJ,:*`WAeB-Co=IG8<1h:3jF]]ng3_SU3)1cUi%$Pq3.KcX?O7BF^==]BqWiIbnMAQMSM68bsUM.u-_E#5iEpEII[P(Tg4'EX&q"L!jFOL$%;_5JWt=S]!d92:"Q9CC6!%8TA5I6E4;%Uu;N\8'")%:BZ]l"1rLj]KF[eR<:Js"-Wf7fN"85Ju+%5?gOIW.d']X6\OVJYZ+N1`eE3$[f1*\*FRA3QpDAWGCZM1-hXIW+t-6Z%H'-u:^dCJtA^:i;Q!A1XI323lk%7Z6@oc=Z[Zo*70.KY`R!%85c[''[_(2KQ?-t'YZ`2kOh5;K(T;j7m.m:`3T,KSVc*cuJ[019L%<jJDF@.:cA=`TVf"4J/1QM]k(MMAL?BLl?bL>),odBEcaCrkL31p"O\Q+qg/h?0*l^RdcQ]>WN6Tr0$>U+kdZ\9QucouN-oR#>h@%OFdM0;m$j7[fI&GC??43j7/o4cqRH$oN56.L9_YIN@AiN,j34FW@4VG0/OE#P%CYd/?0%<dS<ai"k-N,%bO_q5-2m64i*fuVC[7`%c_Xq2.aWH->ecc2!`-$W^?I+Fl@97J7:3Lg.PQ@'n5Q3aLoK]V;cYli.P!O)EGSoe"%.3$l]`+cQBro*+kDi.HG9J>#?r]li$=`>%8R8#;I_nS=(+g)*;chJm%)V:k^7lMc;UCP+I>%ZfqMJ=^.OTW(rtONR8USugBXT#:TO3Nc,"Q*@[Z]sN!RXMV=p58Qdts'MeRUhB%.e6,;TeSJ/m.;$,/Bdks;;@?r8k(;022ZdJQMQJXVQ-2qBRQ.*#@KIkD:JsfC&nfbHnN17W_>\EpPXkC(1F2F8F/;]W5Y`oPFR$/%";8F+I74oYbmoZ=f"sq!]FoW]'NH9HC!lPfWjOA)X$0OD)FP7R@uo<'Q4&\`hPR82cU>rVklL._=FQ(ZM*eUIWY%6.Po`ti.Z&'D%.6V:.X#-k-3dRSK)N*]'W@+&uUVhV=<KZ5s/!FWn'r]QcjI#AYAe"Y&CTV6)TG6)_Zbe_c7HqXW/P:X17:$&+a+u?;S!Ef:p;=6?%P=s8^BOaG?VI8Pu4J.n%F4Ipm_FN-q_kJJZ0j2uOPMW(+&gA)d3YA%["YfRO^DbaGfD0"/WH-2%W_FXge:=PqE[I)@=^,$Ra+5fN%'YPgW39JKu>Ena]k*P2.WBZ=QdLM'nAP1G,7!0,]EhoPZD"KcJiuI]44+JdU#QrUM-HTC!g];>6#HTtsMKEt8!<Y\gF[jW&ecWN"%3"7Y1>Dn?POoVi3RRo':>84dYp?PmJ.pEP+_aDD&N.L8S4!7@E4SVZ%B](:)IFdWuL$FUBWIqjp3[sQ%,RY'h)p2nl*mBsDE<W.s%cWYmOnX,CX(>WgXTc:pD:5:k:%8)OU;gQ_ichFPW'^:jb\g!Rem&cd+Q`J"@2^'+PacaYeH9Hb^?acP3obpXg(*raT.iZdH=1Oc)%m9WX,.%T_QaQN4S<II'Br@m?T3a;%q3A$ICaY1K&TfadYb**9RD99,CaWpF2G$FuU:Zu.X#O_4;/+D`c?fGg":4f<ncSAUfWMlg1%Z`V*4FkR$G:6eC@--d8cO]?["LU2_-4.Zs+*hW[WBhJi`HEsYW=D37jg=-27B+qiuY"1%KgK#S6VW<FT8^I;T'hN"9O]3T7f/%O4%3AjWV_c,Y%e3[#7>?km9)Ya>:W&msL?1j7W+naQ]Xte\h?7BuW7Y`%"AlL:P4D7IU%'JTh=9d5jjbeC@DN:"ZlV5)j\];uTChCE`%dYUS"6#UgfC*`/JdhUM<ZEs,*f\4X9D,lTmJWoH\Gl]JOXFjKFU29)Bg3;K19S-i[kBl<KHeX$a4WF;%2"BS`;4qRjWAH9Dlh)aZ%ZG+d"=LS9=cu3FXC1)T6c%nJ[k>@B,aa_k8_H41H\S/3X%NJgDb/#HCe+%M(m6_UKQo)>LPLd&2i(Hr`YgR(p!-%+qdL^)2Ar/$G%G-P&o]?"NjW;"Ro'j#b&S(R4VE73.bWg.q63]_YR"RMfE:Rh:=8Z3Elh2.<7a,2oRJLZuYDG%<Qn'I<c!f4Qd)W!N*.>UCSMq+'Q%;8i`FC]URn'rYF%4geN9(P).D@D2D:C^[R$2Zd?G@.GgHYCbU3c.4+0CG+e;<8PQ9\T2M%Mj6E_g^7Yo*bGDQ#DO[[#G*CnH5Ddp%PSjj$.b;t/?gQIN'Ds')[,r/0n:I?^7R"<AhR]:r6RtsAfuH1UFmK"uFoh"kY>."/"qO$k2bka9.k0_^_UB9IE5,!4WN;5/.VmOg%A3C=T,K0[l-buKCCK:*lXAN't^`(a^HR!<*_#k4t2.dg*#hGrT9@gX/NY9po8-5X.;+dgp@fSDJ1Ot0)@<rumM'S@0@4EAhkiq=O%`d&GuP=cK#(t(r;)bfM_6(Z\u*s1"%??-$Q,N,_A<o'oTc:Xpsh6'R2fAB]]Eqi,=fCZjr?Y\M:%kHk9>BA-3DC6$FMk(GY77F[6%le5t$p01UNN;K`FE`JO?.U$k!m.UrKCi#=fC[O\nhN]o8KQ8'8Sq'"D-NdI2):r?E)p^=ITZaXj^m11*F(Z\r4BKeX4S!,&G5ST*%jf5prch4+uUJ>A2UW-I2Ht9=04WVQ\]?$_hRl4[9@8iMLV=M4."sjb,EKa1%=\::/2;P'IgQ[E;BY)=</PT@M*>dVaCWGmf^g[0<%,pu1qNSl.+:b"X^d:=`!F;*<M19O*UG&e*;L8;M#&lJu$V5XLN+d(@0A2Htb-jHq_So[UiBsJhW6Z`s'X\rUQS&ttADc>,F4Yg%;%1pBIb4RbYmNdVPqp`M(W:i:j9I*eV[)Vd,8M_N40FC:/1ICt1q>48H"$ZODs@Bb)T^%iFgi.JU\3WWP951[AsaVnMNYX]/8%T?Z;%#X:FujI^BVB!9aa8#W)cV"LI':_GIZ]1$)_oltA*qi(KGmWkq<?C&$7,:iPLf=$lI2ICgj:bbZ$Kb4=rde2kHSu\&6k0E4bH.o`[%MpMJqNib#.YjQ&ufNcZHjnm7gQqK\#"e42G4#*;X9>ILH<lCF..,]sE\[oA9)(F1)&?\:DOA1$T/AEZMlqRrf5fX85$kO^rHc=8E%en^SbbZf"T,K^/K`9=k$;6T:Co%=if0IgmDeToeD/XF8lKmNU9HH<9cl>p<X(blEQi<(segF$E0e43F*6<PoTlF&Pj`cf-DaI*9m%RD.s$]*5*4fT5@h/$]@oWn(bU:,HNu3.n[O@hXPkU"^o/DBeTWK\p#SS'1$6P1s65>75]a"&ECl(1+2r^gWaiEG;L$kdb=*3VT6F%<&&ejmt9?kr^\[Ce&h,,/btG@i,SKpe]mt'*QF%Un[T_3$eIU;(6<#j.hU.eceFF]>$#G`^7H_S&l6q4%NaR9\Zd&!&IT\CUc'h=%>jfC/,</8JQeG'5d50oC_2/\Z<n#YOaf`(g_^c2gGh!9-%^3bY%o.0PD1_Z:[D=p*`YUZsG3A29fbepV_p0nCjA7P]nSjf[WCXdH%B[WZ<?8=&bOe0CB=O+)%So*s(l,UC(7f"FJNt'`.pq%I6[:"Y-XYY(&"67Bt%J6Vm2_EsOb6_$0R2$f8Q4(,K$pG'"dL.bg?r2VQ%E]TcIBeZ6oX"1SbOt.rlO@dSqDOq!MD1cPZ<8WNn+=Fs%%N+uA@f91Jq`(!2UWF:LKP=I:M$(JTglbOYZeOE7ppI&)d2a'JC7aC:%\55+,LE/D#5C9G=4,_^`QQ1#/a.'^eSqE0.5aOm[VbCcZ>-FeUeWXVW=>UH8B?hU/DS\UOgpF58^hGgN"/T:n?'M4+bV]DY5h5B:%Tm&?<l/AT96M,B[Q_gW0!0`a+T;r`@dh&42/C%pDmN'>FH's)2g%13X@?T-b>"['])3nCWP`i(ngC#<!04kATL/+X\Ni]6Kn%/?V%nkJ/M(klt;?,[Q1>qis\#$Zi'HSL(]aJupmS9(MtS3?s27imqc`Fae>Z%q^]omN4dS_N=1'6bs7c#)qFGT[$Q)N:.FifS6rC'E[q%HI*"0s7>oN*3,8uKYF&WZYk=&F%I*(0^Y$c]U&WDAJY4S*L:iE@&qSdPTu6?.4"H+FI7)VZX.o#&3e2r#VF.YE2GGp""0cF1H?gS%7#Q;1"jT!F^a*p"5qthYONE\_=omb0oToH.[p!a4O?h\D&OP.qouuI,VQV6Ypm$H+<RtL)2'Xg@_&5+KaJrQp+`_%,W2Ja'X5I/Q%oQ"n+V7%$H3G#3+TN*+;f+1c1WW)m"1LK(k=O5k<&IX.&:4l,?XfW<h)Q&m\8XG$2U_4_TIp9`ajs55t"q&/ifq]49a!`IbbD]8H%bC`b:#;+EkAYJd!g1V%D8O[Dc\q_&:'t@qD%WUi1Op[KA#-]G0c1PIW"@gpLf9hM!:]3pKQ;pm[b$/X:"U*-92<-M0c)Ls'lt7D^%;:hSrk8FN^X3^39<\mbb-0qP2#YmC'?i``(f!V[%MNj+N=$A%0kZ6p5q)dmp*%H[88_kIZLfXp&U3[cT+=N@4r.KWa@i&jYdh<(%%%4I&JC5g`A-l;um\pCB7,k5-Ki*HHfn!!b4R89#6@+"s"3T(?\Ofqa94&ZFsE2Yf5'_oI/Wt>i`Vn33GkAdX^P:li8^mYSNZ_9p?%I[7+-1u&.kb#q-nm13)\OD2T1g1sj^C?Gq%dTRG=&7fp*6ALY(9"%RBMK6%T0p,#7"jLelp-.e>8NBj[W(4cWlBN/hET6%b`HnqV%#B]<P\c^(E__#sX[ab2JWp+N*(/qUlXTCs-H'u5P;tB(q(*(tuc5aG;^leG76PVfuLT)El:SrFT,sC7pl8I#sVch`)Bi#f]V2H*u%5pfU>Wt:'+<OgJ0NO49m)Q;D@VTR0Va;T**1E$@-lf%>6Zt@st.*#]TRINShiIE@T9b\^GYY*c2Y>@GrB`p.]eP!@u>1F8n/FN(T%Js82`a4]$Y8_p6WeP6BAkh3$%0KhWpEu$Q.Nn2@i8[79V;I`<uVY/(D"%gr;F1l7!dt8'C]4R]Q].((f)J`b5krC?;k\1)4]-ghb%B<c"MZG_5.=a4CUXs`N8hcgW7-Jgq-6>Z1Zbl'Pk0'_t7/N5cM\@+Yc<24BJ/?qm*kpuj@-sEZ+lEs-&]N3rg4]Z8,HLAB*1.JG&%ZMkb8(A4IJ19;5+cD&SfU%@cu2:Zm[@mN_i.NOgHaLD\#.mOa1\DEse4HoMsNe3=<eca5BQY_EcPAd6tTEhW_(JJtUE%7WITJlD/%or(`b7SKU7P8P'/=cLd'#RMR+S^al[N>DXYf7CbQ.p]"a:kplM+7b?s$r#4XruS7C2];0l-_N8:CRC]PlI]O"JR4@XEpOUZ^fXCe%E)Cc'fE.rWR>i3Nf'.6<VbZ@]j=Ds+3\lRKC\k.PJ5YID+\2YK.tM[-!qaVr`iN+!id=b!:nm-aYt2/b@0jEYhM_:d-`be_=X]DL%\$]C7DOr.!].+=pjCO.kEFW/AeU^.gACbUa&>rqbiJh'^)o5eUQ?"M>"KQ02k3YJ^,&<,a9qU!06%,/R;WZP"F:d$qalH[E^m5n>%D0Lf4ZM$'N:M@Wk[qqAGG6,9!nS0[EXk1[j+a"9#]<",u"P6M>58bCf!Rsm"N!P5P&(P:R)YYZT5u(LM#qYE!Ne37UfK*7%HIfKZ%Wpc`9=*i:h9=I=W1-oAKkMg?ZTP1HLlAj5j3QV*\.#qOF+Y53&NE/Yh?,Wqp'T,Y#^o2-69<nEpm(M_*?,pqCHj..fr(31G<@Ft0%cUoZO,hRQQ-ZGlEEcP'W'El8c@t7O0T`!MFs/k^<St9)3DbuZdl=<n(>ADCM292;[5!4g.b7]OC(iD`dF@ek?2aCbsUD@gY!1E^\%bR1D+$sAQ`d316rZ+?Z3WK)Ui@(\N^QK6%qa+3Y*Bn-T;/O9Y;.7,.e%BC:T'OkZj@P8+-phcMlGpm50aIoCF$s5#MY%L-^(CMWH%,*WDmR_mG5il^Fm"k9mj'8<I"0oRUu+^581F!rJQTk2JI:U<4J9QlE>;7uXV-rQHAE#&+V&^!T0\1XSeEFdcMp!.C84ih"d'K<hG%,sOrJZqDfY+b5+^.&j6n/5B6&8>T!'%$b[=<R*"!W^pT.U+NQR;7LXj[_j."3K)!P2AOQi(1PPT^eip_5f(:"\,s#[b&`,</cs<k%oOBE:,)[sI.&t.sgLM1pq?0hsP3XH@jfRV<9$$Y%96LGE_/2n?JtV>0[Wrr^Q]JX+K&8h^$.!H2`^I;dVhHp2l:B4"4SH&N>6.el%[/sB>)pHAGr<e,'p1%E2NGBao#pNSIN-W"HQbt:$=eW!=f$,\1f4RLS9[V"4kO?3)G@lp0*uMTBQ*H=YBrj-<Ma<i+-+"/<8\5O8%O77;FS_rG,G>kAj5-P,?dN[#p^`m.Xgkr=L_uR`n?DfJN$t?*=Vba!4/9E+'-kccg_Q7*M`=cuQ5R_HaAnfNcU(3B'/lWMuY%tps%-NK_F&N?r.BUDInr)/UYk.(VK2.8=+SR!Ati7>*;3mfUGk]0R/!(2Mr<^CdJCV0^@KZH>l%dg_gg:?2pF31cQ%X)`R-_j6-!Y84b%\LL-"HGmAEF(%IGiut)S*$-i!kSC//![KP3$SE:uXgOt@>UlJD;$1^c-DHAD`0Gq73fbu1P=;3(1*JeD34#Z9DJ6XRGj;le,IWof%%T))<%!]6!Fsc&%8/2fs("!0oW2?GLBG*T`EdOZE/^8sW\m6Rcq%@2AD/lb.@eYInbn2b,mnPX:R4G8:g1*JPJm0O*E:@@[#K#UG%CEqk'G:t,YQU32@OXI%:1n<\n#F.Ipqq/Cq[$#tPUDY9:b,3ij<2>f-CNU;)V\r]Y9/:@cW-+ape8;9S8_`BYG0&r;M6!WNN'Y<R%?1aggBOsU]o%mUhO_Ok+:m/,FXA$#_FC[5l%td^dln/?ioI=ciX-^-:N9`io;4T^(/HTV(fN][1P;(n#o2WMI?qn;+osMej&b;2g%QAbgt8@DJ\1*@-EZ20QCiP'960FKGN%s0[5^c=M"C?"Z!L,\,='D\5)7QnP%qp-*MfcC=t3sJXCUKh@ab-OO'1NeT8>,&(pF^R9Y%7q43T%kTlV6d@(t$r9.*9t7/%Y9'd^-k6ZQ$k@i5`5u?edOc.]Xra2^<S1?dI9"Sf*%]V3r/>/e:(m*Gm(oq=9At/&,bp*p0J!Tl%S"7fcC4Zf/E8%Umga0)`g&m_@A7T0_[j-_\5K9u\d8d*_1/CL_ih!$,NC\kf1>ppir@$sknXkS/m$9J#+b]+.e8$"q$J^GpD2abg%+_CSr\-0^TZ$f_iGIAo'.UU@1#Egs2pp>SLh2'RRX4aDm2[tO?G&\XK!&pIp(MZ%d(kA]_6jb3A4%qR?T0d\A"#7=T^?F[GVPZ`\%rBbcbH1>Pg.V@To@Yq86`%W%T70(_)#(2s9KF>'Saj]K5&6EnQc62^_Kt"C@niu>pK$."d66*`+8/HoI/E!/'Ne!,`R?8F/^a3..%2QaS]JOXRtZ1$LSnq#F[HC8#g9YXT6=:C@&+DR%laK7$6?USKijW?^BIsd7!at6e[]?Rm"?@c;TdU<TUb$()LAqr8>`ls.`D+D=^%GDK:-@+u/,R/m]?_^pZc8\/1<]WlRjk%3Lm5\9.KgpU8FfMI]:LoIMELEn/7e\":faGdof1-LP<_]+_X!mh1BJLe%\1GGJ=%WjTX%C`du]0CZ9Ed=YC\F<LEPCr/,$RR0Ur:>VQi4I&r\?AQ\*=7t52"0E27_<XNaoB0McD94b1>U9RrS)GegjMId\AR7eL>KHkfH"85N%b\l6W$]@'&f[:j1GU+-`\mg^PWs)<jl1Mj4M]+"'fH;-pg?P^paR6t'<-8">AB@0'@IU`q+)EeBb;lT,OoZP?B\NfFY;4JI[DpLm%?[NLaIJ$Yuc!T%U:7YAs?I78d#i1iG,7$;K_.maLYgBA-QWhHQq_FD4Fq>6qTkfj]GHAcKl<7@/S.I7GbV!7o^0sCR-:o:pJQml&%A2?$4U[B_=p54,APd]C:Pb\X7CICD#'X(-k9=t=te@l+QL11;h*c"L6Z:)-[N#rZfoT(K'0JKc2qAl=to<Hj6Xd!8LiF3GE'NYVr%Bm^l#k/tJ9=\B1*J_.Ac4+\=FVG^qs1)P4Rf]EtjC[Ua*D5d-V/<%ZJD73Zo#@':$.g(Ye=l,X;lbKo&a&F.@A?_V7RN<Tn`O;BO%g04?SXoiF)=TJ_61'^h+-k?,30%i'^Z+EU.9--<i>d6p]UGCR.,,5[aDR2L#A42)PS5J-DVHS:N=0IX-Q!p"X,%[U9!4C1-;CO"O%97jDZXVN=DCCRdLe]lRi>trWFMr9AAj*`VYUA8N/KM:]J8^LTj'F<5G=gZs/o&L'%<Y=^7ii!Y#VkBfTZ$phh-9fG7-bl3\dOK5M%/dMeqjFt<63f'dVP5u+JibFN*0$\eeqnttM]?>80E60#k1Jk+rg@*'sRFt#5Y1ZMuH"&JHNhAkGE:r35VV`mY7$d@DL]%s7J9RHH%<*jDNKAW$"lktrRRg>X@ei%0GLPUO^D3[(ALic>AA$&d&PBF;rJTDM[$m*$\O6o</e[7**8&V><Pme4FUk?)8+Ya:oRm7R(NJR/U%)R\in=?WlI(bDmHh;3,?#[>+VP\au4DG=MN#J*F'1-SSD)Duocb\T`W7'303dQWCG$t`GXYVI)0@=uTK)&Y-_1hA0t8$38kZs%[Z%VMJe[o;WD5MV7;H9Dj(41`>:D8mE\a3]59g/Uc%Ud1Tn3`/I:i18'MiUu&=1W%L(TXQ`?Q@k*m]:'R3!N+9n9%OH&>)2p+$@_+Or%7']_VO'`VV<Cbhf`r6Mi\T#7ip2][a2/8tl;mQk7au-C*e5$],c"W7pj*d-e]?V##]J\VlrSc1^5I?U2J?:e)L`E>N",#/LO["4j%$/)$b<=&@:!p"G+G.70qYM*[[Ch1=0Y&34%N?@2eGVKH:/]*;Q0*lPq14'u4"jFY>\ko%Jap*Q*:u\4<T7&pL=qpr5&biC0*qACq%0>sqpqK%Cg$SjsfLO?qN"Kr3ha&@+H&LA05>8n\PC$;K%3e=A9&WSWlR#h^OWfuWJ;Dhk>#1m3N]JK\cKGCt8oT4MnR*=)Fa5C,E%>K!X7i(/5F8fDQgW1K/X'8c'X"1g:A4k(DW>3igQ(]hC]Kj)S9cg]k(]DKB\#pM]]Zgb\dDBi6RfH2!Sdlk]E&QTHtRG<t2fP?SX%4!LmT/>uTa#Gi%i`1SeX:E:%tl_LFFZ'T-t?E!'S<u)u4-R"cafG-8IOMP,A_")nJTaO8+E<W-/4:>3sPb^K6PE[W/V&Tb\A^"29%M+!d4K#)646>8`''!mk.j:W6J-)Y#)?7(oq.!eYnZrSfRgL5Sl,_F"@&F@NFGTPCEIR5Cu6HuI8Je'+2+tkS)=31g3i*rrB&:%[b%'4j&8=*St,>!/-\$%09\ZX"-RD=9bT3Z='rVr-L'g`fqgV-Fii9^P@,odaHf2L3V-C$&&X:'op(<se!5@%_)hck>I\=\3M9[F!@?%39CU3OjkmC0<S&f.+#C26]nu7S"`0cSeE<C/(Fdhp7+CR3fcj;(^V5LUeAKdm.\T=VP/j71s:6.VB`Z0((5#,HoehWjBQs)eqNfY%W)Yn0[-idV2gQM<3ZM*^l%PhdQkdkdLa9hW,qH=',=%dN!()Vs?q@(gYolM0M$&i3Hh7#4.2?@U<s8%G_5]=oN%=CnL@JHu?t%->%=NW_AFQc41MfeO4X!l[K/TE^#PLj"VA8[#h-OQsb10rQBorSk=1O<$8QqT!WPh+,:QKXOe-1ZfO6nM/8'#s+Q^d'>OSl+K&=o=C;%d/DoeLr<Vq?Kd#T<[i!F9U:u8oC"#;h2Tj=@[^>nBOljrb/\h+Dad#F/OcGH2_81`=!Mbl@fBoC<(9rHgWLd+jARa'.2`j;7?^gl%r@m`WWj82N&!JMqP%bDth(phJWK9D5=ncf7.eLN(YTbE[HJF-QZ:NU`Q9Gm\E%;pi.+'3Jbq(ODkdf<::a!$gXY>#(*`VqN6Lmkt%YCLFbE.+3tH7CGR9K+U-S>)/#CBXA_rc/Qu/>eO24Motl#Bl5%,G*5Wc81Uq<i4:tH%Fq^@#Ja`5pN,^T<)R2@%>#5@#qH3[BckB%C64<-K\0PnKp=G?Y$$)8a%`5S,o/\K=M21=%mp8I`'.*.D_H]qW!'W)'d$mr+NZr7CdVoJ&?SQUbV'LQC7:2(ak$=q#+Cj0O5ZUB%d,AIDQ,qTN!k&](a(;J)<VO@#+Yo^iNUTb]R5!I0GV+ZfllHV$;BK[b#X!ohOYKr`ZCUiMcP`.&iuh`HPt3e%J5-^Q'!C6R=tBM+%iWU&7A0WD_lj;@So)NXT,*ff`(keee;/M@q]*KG[.^`a"R(h.Lat9`"p*.>PZ9o]JO#@b#VQ@l"+?N&sAL#Ns)/>+DTlHM2ik_Oe%P83RuB!d]F+0BQ;0K-&1`hNmElZ)cYUp`epGFZppak+Ts:RT,I-0f_dFee5kC5!tQLb9qjpFK/PQ&7H&r)`E"DTh<RDCRPL^Bqh#%3p810]s<FJD"![$6#*IQoN]#ZR%k%P>n^iX@ipQHW0(pb7dMZ1!)6B6NET/Hd>,pak]N]/*ct)%]O:FPo13QMj6Wt?%M+Qpjt$s;%rs0K+AqI%L@<$3'N3=e#5jm<3-Pn$ERKQW^:qRge0jU=3I5*W[nG!5c!l_7Znk;^_>5]er-oN-eAI0F3<r&Uq$59:'G([kFNoM@e%/E_B0"#<,q'>7k+TUrj\PIe@f,OU.6G*PMhJcp>gC+pmA&lkL/[VL/m#P5M_Joe1F>=*lLjdEsB'!W1=Au8^?7YDRE-)$+dC]\>@%2!*7\NPhs&n)<QM^ut@L1"$G=nVt1.p4,57)6jY,orrS!aQ^-hAlQRbGP^_kRY,ZWTO0M(TN&Vp<8#2GRqh;mm'HEY@W@ADVjRrQ%!*k*_9Y1coJ@H?p_q)&6Igos-DL,gtHu\2oPcVG*V`4s"k^9r"WQVcVI;6Cs-BIA\0'aSBm\_^skNgM,O@He:q2>jl#(^n)1;cn?%`>1gT5]ATT/TId0>prmYR0prW*>(hIngZ$i)!W"d^clVkLkZjOZ9qecRM[md$sfp)Y[Q%0NeYB@;'lSi"X<)pn*<4iR;KP"ctD;^%U]H#PqeJ%8#<r',UUd5KGFp7,'$\Si.3uS1M`^%<5Ig+/Tb<5E?@i9!*"QJ:/QrXk9M\cBO,\V^3!)2fI5qiT,HiB@UE2"\O'SMV%-sB@S9FmHP/j$#Y83h:r0H1<DHt1!u)=i@W*j?&mS<fpVSY$sjh\='nn93;A,/h:&nCA>l2^;>dW^_77&95X?`VUU:+d7i!lQ9YA%-Lk[edlOouOU(?R[p6T(=6a6RbUlLlTm?`i>)'"mQn9kWd>6=IAJl't7srY!TY'/PCPacj+sn@0O(aClft4cUp(Um%_X(a<Crukb%P!.*20gGauCq7g:c]&(qAD/YgDn#n`r1HGdd(ldp#0n2el,*d!MB6^Og`I^U6F`l#QG%:mMP[(eLEkc+NG_d&L+Vkm#C]ON;h..o%k.eD0Q$3.?O_P[T1SRQL7!.H/n\@kp?KR31`PV/F0[`Q5m6+%+Fasi#HKl3*l#94q6Y0#Jg9GQf/hEEhBp!3N(bcks'3CcRVO3bp%*8Y=N32>a'P-n]JV^RX?0jO_Tb2?5;Fo-ulM[6,,<<r"+f?S!;g*84*dW4&3#^i-_oj6'H4f8^iBYJ_1OL.U%%6('eVBkLfGC*:"%8PBEQ<[(g+Eq-^Y?c(eij)o+:JcoJ_lop'[1pE(.(nPV7hB!aUIr6=\;Aq^E$n=?q!ZXONT6tH=JWn7kQIe;_D933-@gU7"&O9hW%@<*Kh;a''\VZN%*jiEVr08oTa7q`i#;M"sa`&o$fNR<$nN!L8i])dYIfX8'HpBbkE-ouVCCM3fp#,\rXH2c1bUSjQY&KM_E0:)lf%e'SRtP%PD8&sq$#43:L;,ZctCk+l(;H;eC1jPea/lQCKVOkP=?^rG$COPG2hn&"mBED&+sK*5Y(CnOKDAbJo0&G]$IgL^gq]f=9T%ab`86WH\\TQLJs-Qt:J(SR=2o>2j,T_M.305[d:a,16Nqk7RXI7o\_."^5iFLA>V`G,dj]>Y6>V8Pj\B>_&8oaad]C#)4!s%t8,]%c=J7E-,YEaK=8&sY1h7i@joTud1n?"Mh&qY\QH]_X:BLJBT[9CJnKmJn7:748Dd-^[$9TbSP;^f66B#c2N8W&kU3_&&+_X"U[I"o%',i`s-hiL6Ddhnn+mCd>E6XtRa@)TKa>2k*MU+u(ND)iCXHG0(R;"Y_[A%;0m_;O+RqS_5>O56+eR"W*P:%kk*&.HtQ\Z8Oe6JcC%((pWQ,Q1@/;+ZW&`#+o&$mmD7N*4=0]0+WKaV#2JOD'+P7"gl;'o;sN)Kp>`Xbf`F?r7`<R7tUCai8354'R]q`:b(bKcMeO\4_\\%Yd7l.7tr^uBKn`+(HWmc,-]0dOrK&h#tJ=5<i9=@5=$WrSXYPd9Et6WR0KY)@reJC>---%@8F0R8i<?BW(55PqiMRL("?]ZpX73a%+Md]u&EQb=`-76]nWEntZ,F.TfTp*GZ6d>;.oHA0/56=fQ3iuK2.GP<b9C#^,V4kkMhP^D`A+![b"KpQPdWgt'4PPa2!iZQ][OA+%4$>$]FO3$TKUIsAkkaR)jE2hIRgX3W7T??1,bA1-*o^pWm-V0;bE9i=+q,ke3A]Y/6g9sF*(.0TjuF9Cb/kYf"(C0O<=uW(oO2FS%rlL1_02YcUqlcf-9o-I,O:NWS&dr^#1g7[31dAR7g^K<Dc+@JDL7C*b<Zia5"@Q5Rj^kq_H4ZK(Z1O=V845cJ^a"1k/Cn:6#rH5A%--`MP!lf\un`tkN[N\0hO9XuJZ%skd9a"7*l`2A/3d*iuRifRPYq3!2<#tfd)qpX^8dVZ""P*erWV@7]H$WVKCgOf!aUTe9ln,A)%0KL@l?o^Vo)K70bR7apRcG>%`;9:R*00gT;ii/"AZT0>Y(_Z&2?dnBqhQbZ07EQel,:Of\/-J3DN*:>DB:i-2.+N_u_ZIo1$R^-b%/O;Eg2+=1r&1lFhSS@)c]C/Zll3)HSkCNE!M<i*=aJ3b"k5=KW<H:(^WX>8EMnV#\:$50H".!F7TJ,guGIoe0ZqcEY1IkSW<%<Uo%dH:`S-M'BU8Q!U7n6)eM9Fub/&1s'^LoQ/Z8F<\WeL5#>O%J7eRRXMOn\"SZEH"OIoeH<?P&t=-D9JeM87PZK*$>%Jbk)r%8+QfW%cd[S\p>^ou+G6Nh@*6r1b%jBHf;U3pWBL'j(8m'W]\Y06[l(IQi!Zs>[]1cS(T3ZtaV=i`1>&jO7k&&h$8tiA$t@'V:Pff<[4sKo%7(sX?H)46I"hTa/3FnuPK+JIGVgu*"RCEjg<hV_p*Y7VV:d&)Ff[2H`F2ru@&H"]ObG7Cr,Cae<_@\<pi=7\k*SF+eDq_iT@BkHn%,HB2W*@M>m<P.2.U\u/`(AE5sH6$V:2AldDpWtKFo$HVfF*L#;ri*8S'&R;3r%2e-1G\AI%7CM998K/C=]VGH^tgHn*^)muc=QmN%37aRdEEB_9&M?G_58`<4"bU*Rqic;6_%Zu\Scj9)Gi=kG2B0/pN#4^"F'TfRUNjShcSKlE=fP:o*sPR[_jXX7P6qE('eW,AlX=`B%HBMS0>7BHLjG[A1,Kq25[p&-LQ`G>/70)XA;)!hsW)aBQ%SuJF=-UB&@NR7olk(@r901aWF+4M"Omu@"`V:(#$We!SpiM^tCgi^Z%jMu0c_FL]V`G+0F<niY78Tpk%R@fJliQhit6M7$1EqTbPnM&&9^ousPWm`CJI-L<$ChMW-hKm.>M[%85Oe_+,kLCgA3XbrlPd5ZB%/u,p2U&#]nEP\'.WUOFGHS@.o)44UP8otFrOj0n9">8%+7p?O#!HDX;+u&Qn;iI<cl$rce0=bi*&C4-rm(u&GV^E40GqB?A':@#G%AU,Ga7_U`-k4bg4!Q<\TA`cD81*L2.\a*c:Ln?6p1s7OeT'\,NbtVN!jC"BC$d1D0jG=LjU$f$OBfotG0b4\oaV["5d?O6Cd"<j@%[<6IK1i_6TCV_ePR40Wm:i73%qDthH=pg5-U$"nT%O3XM0-'Y8ZaRFk(1dto6)I@3>N1JOl&s,2li%t)XF]WoBh@W$IaHG;,P$)9%rU#Qc2^=<,iSI]X/gR3nm]!p0Ia-V<Rq/G_5k!IS8;:Vinbi!3Ql:&(27fg2i`RlA_9$gc/HoJr!ZF<u;P34Tj3XS%0_*H<B64Ne%#,,Ef!qU'Qb(R:Km-QJQP:a[`,lf7`<>_ODI;GTu7M.$ikaIV=qVcUUn7.\^P$2#@Xb.d9Cu&*5ak719#!uWEW=%G+]mIJ@orLq8%AcN69S_*cQ>)')EhR"Pq6EsXj"DYss.VU'rTO[UK/WLku)@$/LX%^pnJoJLu*%rmDG0="28dh.Ar](j,@QIL'lT+XK$h$T=_\/pi%m)MDX%bWQ#C]QeoYlH>jiZ>Sh>b(E7T4:+FFC".HD])?$%,Y[ZI)Zgr?<*%!M$>D:*#?Rr3+0r*(\ltI2r!'B9,+DN;tHa#c*/[R%2`A4I%Tm[$H%KDNUc8lbBY;#9#FV7m"0Y%"cnA-Mi<q1r:0O&Cki"MD<\)(D_oh6KLG5Laq"#_(BF>8]hMk&<Q/*6qgjsNJ86HY>%=?-"+?6ab"fhN9W/<SVBr[lIi9GGh8kY;d(l2ff6#><d"]38+U;$F@G>!4I^`P)h^PTA<;4fm5DA+BWqlYFU7n3gH,I(_#)Y>KaC%<X@n9]AdEtD?+-/kis:?qF8&B](DH@5oZ(p7od#a%Yi*Lp[Vds)No"KaM>emEZ?LYVobAuhP642Oe3s2-?!E]hVc]*hnFu:G\&G)%:3S8FSV+SYEOWFqj#!/t/l)"eGhXb&:0H&8g\,+[F-T7p[gE58=*`S`g!uS@,C"J'K,>S#C#ua\j^uB,bD&Yn"mmJqhe[U6*4:%b%Nt6Y[8(K/?FZgZBBsO#jFD>,cS6/!<=5R[Nht_M]'4oGK[k;IQ[]<NI37Ij@biFH$P(Tgp!V1Ucr-p@AKk9T:SJhO*gn:aDPR3]V%ro<u6Ou9VJYO5@kKS<Kh$ZHT8>aZgB71%JQ?LM2n6jf_CqSMKkMHVcD/bT1/GPCg8i]F2a+N\Q?;.='e=h1Yt\VM^l+KB0*H!+1C%JE2VOGojsT/u;X4dq\>&-0NQuRG'3tk((*S;Y/M%G>,pU@@!mGoToZ#fbVrB6HS\'+/\IZCD`A=e)\?_MMn93:fHs;BXpWkqQ0DO%0pJ)2.oW!^jAPdh.)kM0DNe7[CU@k?Xiugl9<]WKr2S<AT#k:-#NIT2(1O('RkTo394:H6_$6aJ<$B5&KK3911A8G5536C,4o9:5%/0XD.IscD[bG$bgU](aDmLsl0WF58s\JSYPnL3I<RTc2!Ul!!'.cn[$e/Dj.&sW0oTI$.$[[cC4"*/c"QrsKhC0nXV#_#uC"AbB'%N"'NmPAG%;6C*`9p-nmp(A40oO:m`SX4rHK""?P,JWqSK]T#tSDska<IOfJT'2&T>0.RI6g0^F/.>sEGL*<36!G`;V3GY'%c!fgK%-`?LWXPG)g\!_CW%gekU8a7kcS_X)nb,\21e)XD=$/[/ib;pnrG6o@HKF]]oo.8k,9DCCjr(79&f<KLQ&tVKq]?E^DZWnO3Go5kM%B$DcFlEc.N>r^G=_E3%`UmA2-n!IcJSr(EM96_h&?ZCoQ#S/9*:K+/%g@GI\r\So_1%^4Le4IbY:`E%%*I/')-<Dk,\g*R(&jFVS%^:Jui>>HbJpO]"MIO6_i-%)70I!5m(LP/GUiVS`+_'T"79DIof4q.hU>f,)9iQ!r]AdRqe?,u$?J:p-]cElGIMbEiojAI@.?<tF?%Ui)[LAbk8'RS(-,lR*^9LP1^@RaNbG#<B;IO"TCX+lO(\HsUFlT3]=C+lTIppbnqdl4Uh%PS,5`8;T+XRB'^@5f1iX$#tNLmmFs=%'ho;&PgE`E:j2_tnBiP0FU9-;@I=d-BGr&Q^ZCZU*k^^K4UPNm@B[^m.:tH0hC]JP?n)]J`rkCn%XcLtYWTMQA-R"CTL5d#RPrZU%Yc?4qiC[u\"P]IVomk/gcn`L_*hqFdLV3d-OW=\^&")#6R#8P7(25Wo8iN\3>1]*P`U6=uP8m\+ChlGW;R7\J'#9,LIAGOU@Rrep%.Yq,DUi\*g7g;Lkdf#.N["U6aHQqaRlkl\K?c+1IGisVa/ae0ppY@m%"8^/@Y0M32d\q].&feA;06T!cK47H;"p>hh)L1@5gu0+]%^5`K.d]cu,R"8D=<1)D?FS"5LnhFZ@$IMmYDmbi9B*Ue3Ce!TAdA$L=&N6cbGc>Z>V^duQD<VP^W9XLoo@T#I=qU?&lt*Ud/!Mlb%()gE#UhUJjihuXl!.`/;3S!gB;qlNWZ7m@fn@7$)q[.@^"5E'j2^?lmnTnD]-^^#nlT1'qA]_#X0Qhq8eoo!Wg/a3+@P)p)Om(n<%KS\9L*Kaa57]m,r:;'CF,2.`AVl*"7%3WbA[YGdZb&39].="Z[?koNHN#9OLe5g"o![9n3CWf[*=.U'@Y16pR2BmaggL<^%-bD7Q%b7Og3da[0QQ(DC5BB8GR/(%j_PD-i9aEV3\ZR#UN&UT-FOHj&r%R&0e&D&hWdkgLDP1;3D,#HX>M"'3[&[5khA-uM"L+#jt9^K@6%8ERn!/.!sJ`W9i);&s\:?EI@H,?@uc,:]kZ3DCj/VeYdc>/Hr4`37;3\l.Ig7H,%!5hVPC6j!&4kaoH/QP;$Ri;Ct7)$36]CO%_i%ej>X^VhW#)NDXkgC9JAJ/Jt6=#YN17&.*Ka<2A5;m"Zrd#Z43pS<L-jGI8>Yg'.;<!*uuFCU_trgM9EBnH#n^6eBE$d,0MXn0puj%OK2qU5;oV#mVaqc>9N"'F(@9Q[bVTKm;+#I(<@O>MQ8X2bMR;>O<8SfG-=*!LdNX/8r3tXcAE58CF!a/iZ[G""6UK'Td=?%PR[1@%@ZMBi.,>JLEVg+UaTVpMb7NWbf%Z5Zp%>bu%I!-!QAXG^Hm9a4%e_st6O3g351k$@_[E0iC9eiG>EFt:+9lFaI&irD)%l\!6F=t#%MDSB]*$@88-K[T?=)EW!'Gcr;jLtIt+udiq!CYB->8JE#;Oh9j;$gTfS!,QLQ1K6.'Z_d42"GH=`<+s\63\E3FSJm/+sS]U8[K.,%HZJ^em4/j]7-IV5Mcah1]6)>/mA3K>+Q)1+=nY\%g5AOUBs[Ttj,mWXhQ5GGjagOfJUBGbO^Gth'1^K<f?gYA@@F"T=RLgX+7MEi%fo\VL0UE.?m&;ShY0dWfS8(bRO;fZWe\/BP=p^T_W&&(P.mE)WE]K7)>D'n.1RAb$f7_?nS!drYoHA4=-MMgt29Z/ZbWQ\]E4-N^%J+0Rg^DI@F.:4P@H2D?d4Y=o0!\6\2X]`KP_j608kOJP;a<e\1M,_<Bgh5Un8s8>>*\fpu`UpEI.-D00GuPO7%:KCG"*:gNGb/SX%8-u;b*'IcCF-t[5B^'?noRgtr;^tcOm[#_s6KC5`DBN7?4M?mGe/%T2r7K+7N3O,(CXdoKA2%L)R"9P'fbLJ8c,6[B2-=9+G&36t%&IppC91j?N8-\,O9(]+!/;O`u*_oF[qQQG-</2]N?H@>S&bTNPG!e6VJMB"f\J6PkI:DK'_;n4b:TIs/YIlS6E<>lF9p55l=;FXH%GBr4jo0^VV?Cr(l8kRrYV!-?i&%b'sL(Kn/(NSu'Vb,A-1YcOf,*MPJQkG6#OY)ui[6No4jko.gTtL*e;kq@C@-a*Gg.LMK@!7`p%'pL13)T%;(bGhahB?ZlV2+4n)Ho"6hnLA=?[<$>V$(nI4'3_*#1@>SpnY2oN)4Hpg,"*+^Ng^',&*c<)7D@,/";q3-)"YtRb^`EO%0\#/-10A2K`M93:.5GN:_=41HU=sm]K]so+)BJ69a=LYg-b2fJ=c!UX>r'r]+2+tk*#9`3fe@d4_6f5n$6t:]8$NeSL7?^I(NT.B%\K0LT+:/^FDcFVa9l+M_.:GAF/5;#Z9JkK2)-jFV/)qXP3E:mS75PPFd1A:GB_@=q5#3)\<7SP!8'=l)fZ\J\'KOt]'sZ]pLb2O`%[2O)'UM8hT'T&b97-8IpF\Uu]>6&u7?84P0Du`s'Ygfdp1%6-BN-]-A!`;Et:m"`%__i):fZ].(2^=<d6EQ)=@HFH,b\6l6":0P(%$mr'#/Ri-r[TF]YNqh!-`gY;1#o$PQ9`]0s9V[/lko,S8Zj"+M`%7?-$?O4Y+`UpT]pu:kB]@Jd<%i_^Fgp?jGY$n-4R,/MAhZ&c%BLA>8'nHQ3P!O0ril&g.@VoK$T!,<Z\B_t,-+\h;KBPMZAYd-qbYaiI!%udTAs=KHBa[o%caV.k]:B3I!i)o^qH4c__b0:eg+5=H%%#4Ih35(+YV.b#14otkV=`-2%b)5>n,;-&L>60#'fs1ar>n>rSCA@4,[(nTC9a/q+#WOGD"cF5$c*O6V0ItnF0C4=V1-63ej@@sW%(ZN;^D/n(CZ>X7Zkgbj8NEAi*;r=VQm<T0b5KJ%$l=_jSF-rN#Cn,>Sm)RXc9M]iur93AoWLNEWhb,?/JNC+k"miH\U[^lE4_B-/%0N&H8)#1L6O/F9(Bj4!c^od_COE^jop1g58c]@c2K*NnAfZDZnI7:W5jb/O`gAu%PbI7Y*Po)D\2+p#ibpRj2M7C+s?;4'?ej<NM%I[VO,ER\/X-]Z<kKGb>l07L0B91&V0aT1p>ghn%AWG6#`7m_b<JUtQQ(_NG]O:!SZEFs!eh[R#:LKp3nOJ^pQ!%1fp'P\1%#V-f=%9c*"(/$3I4JMdt;"A<M$lkkiO9&95W21,\8!7=]n%gN<jU<H:='Pt"ac84MRi#2S\S\`01\h^V&e,:U]=GMpgk3.I%PQMddkOMWj%T4kHc?%@k]9Ug'sGAWc!h-!R?%")':\u^`\lm=50/?nK4lIbp+F\#Dt1FK<o64D*]Vek=KUu+;cGqm6_,6I@:IUDr)*Df<SE/L#'%&dR+6<u;jXG7q4?:cH4K/N74>)\Gm=[TJ,3\r'1#7qaf$1Z4PS[p\E;$Z2X@[nLId2:7*t$N&.9%6L/[c>b[la4mBZfmPQnE6WHY%/rgi75VE"+cuo_IA]5$_-[qp(6VT]NSLOJO/l?)<=NP$\,U6=pUb9mS<HC976F+eJg.UZ5Va*"]CD4RG`bnprRc`2/:jI+S>9;^;%KjP=::miRXjMco$9l1U5"5]cmF$O#:ZL5p?T+/#g.;&'2'M4gmjpL:c,hOIob"1X&G#Uu4Q0fu287rIH/K&-;lksE%FNL+$Waro4%mfH3M,l!M++Bl;1EYYi/+a_qsISb-7YCs4oa.]FX/4KU>*[*?6IJ#WG4(9riWAmHoMgl#cU'noa$.L[QjqSA'0;UK!TK)5hi^"J.%?\#e8+1Rf9/[ecenp2F)%huIrAo_lEEjFkno/2aYnZ'I]Y]urM-g0QL*M6f#3QQu>)PU<dOB%=g(D-qXCjg;lajE*a(`ZMB8Z(u;%P0hoCpXt=(D1-5s<j1Wd!%)EL(1Q]BZ]_8J\kVr^cI^uT%E\pB-;)HD2Uik"?)6^7QI+4J;b%&2%$]CEPmh%`<7a,^W'Z6k+C;*'%!1M!EX4huZOZS:e'Y'l*5?TK-A;.it#r)R0LbNdVY8B_#l.8\c8=;1Hb!LTKC_.INk/S07Ah;6LKcJ,H,ppeF9Z2iA82+?V^5#5=%do=?r_&j*]XK89$n`[m1<`YH!ZaNnSZiHp2B?&:hKL+eUCg$RoP?;NX/5#5nHrUol38KK3n(qFc$Lo>%9\QPBBEalaSeSdqUb-E@%bK@UCE^"](ViOpQ)FSr9Z?%-8+,D1i?]bABmQ(o]:q4H"Z*TB(,*k2%m(q0e>-W&6a!C]!W]2@1:_MNW@%@jmbM-dW7^aQE^aAJ^%TGE:T;l(8(Q/(B+p^6&Eo$G7Kch1kNnA.GO%>`cQFF1K:Kom<+jA6)NK@V=.SB@]NH[`p#7DuG^mQD<i4`Q;g\FS]<p7ca%gJbQ/%T\n#>:EdkOLUB%,.PRZB/$eCP#[nJ(@NHX[9o#kl&/iL<ioN_D64]`ff5@FGN(E9ZW!g$UK)6gR8&k3m[#).P`U,8!/)=_LeOG5d%5hZ:>/J1(QAW%V@_XDbY+sR0(LFSlm<`FpW2`1rH>6e!AYFkr]Fk43Qd[!a?R2Qr-AIQ3Q]G+>"!I&P0M@cOc_3W;1()!/=eB2S>%nn;g<rA3tW%L;u1D[TfLC;2"mdH&pgJX9I&1m$0K-:E'@9cufW_PAM7f&940%'8sXK#O9.af<GR:.=,1P'J?C,jHmd.X!6lHtb&E%-fiQtO/]VDk&O6YQJd3!c@+aCROmSWk/QF+ZA_L@G*A;pJPqkkOkIZ6h5?fVVI:X79Er.[LO!*[:_ns\C,2I)<%Rn/Jn0KkPQ(-c%M`r'6&J8K?%(N'X;EtF@L1@@k;`"+\U@KRpd#eg)_?,-sLSpECVld8mBq]UHeG!u%gBi'#;U(O/@O=t<Fb?[XGXBVr"%g7$^D8S`%Yd3g(WK1tg*5I4AAoKS<27_m@@>-1%6'X/J\i*CC/<T@h.BBB^D<QG$n"rme/a?n=g[8@bl]bX'"e%SBV/>frT\(H7n`)sW[+lHs%%s0O8QEQ9A:R2?c#-M`^PVE;2/i,c*j89XoeAg5qZ`9j`$[nRLUGRS-Rc,q,I\Ug"CHU5kX4O\^Gr58H9Z(%ZLk/)HD-9[-BZUIc%)RKik7O<el$/*[9CDg2G-@E03@6I^JlQccKnUcO,$&I`*E<]c9?>";&-4L^B"9C3Ma1d&dcRD+,HND?l>"ji3@Q$$<&:mA'`5T:4%%*%p54W$3=[%6T=O?2@jAbRAI9@e(3ie?9gTSs0Eb68Bgi\r+<dG*i"nmC-m<4^3W?"SI=8'9...[d[b&:&L`9&&\[@e@DSD@Xb]%O<GJMbiDaHHsJNJ%p[4a+tms&rNX1nZ!GH?.Lqu@ENJo@Yl,5ITfRk6Zo'WiB$h-^kq,4R$V*=j:]RqPHldN/'_k\cTW8*M0k;>o%JCcuo[R_!4!U=8b;bX%W?O2IcQ8n_9!)5dt09L]9iCXYKG;5;4NAr\$YtY;;UU8c:o[T][*#V4V[HsLIS5:2adkOSIE*69'4R@o%%;[s;Zb2D:OkAFNU_%<I2oFeeY"R[[Z@;88V'e*M04VJE]I'>bA+ZU5ndkM^q"XV%[HZ:7T8<U4**6PZDN4E`L!`6PMj#oVupLuPs%q,9VS<.ibt;$EXU`:h!E-fBC)51PU^[ij/q-BS:,h5in#j+n=X#p=NtV,<enZK@X=BibMra,8);i,G\3a/Lm\CUP8GSH)`pr77=h%2PM+tVpu+d@8!^`P4AW\X_U1@#fTb"1("I><c\?NMZZm%oii-l286n*6,<4LO:!dj$[B`u9C;*](pM_<oD2*XVlF]Y%0'Fd'JF='%32fs<1p&.dVG>==,6Bi!)"b64g*$)]g57bECJOIAim<ViH]t0rPtkdt1&8f;*s<)$:esY0?a>an+/7G2036gI\.5&clP.InNb7IA%GJhgg*[2SdS:\X^8okTiI%=_"G9bQ!<IgEL7#QD0AOOBd$ZiurZk`&9^m+Tu;l^MZ_D,`IF*)p]G1Fe-CAjg5*AO4b]U70,%%*Sb%XSaL<[cg"+*qZUl=%b[pfYPdjLECp-FTte]i!>]FQ3!Kp4VhU!A2_Nqd9F7C:L-)mCPh]Cf.\O,HJE,:Un0(jkR_sS*Nr,A/2nk1%,'@m\%2i!I@[qqPioauj0\b#-`'tip_==q$B^V/C<NcUur8A+U`A(L"IrUq!E<+#JG;R49^'2%PHLNHpc.Wr)AtnFjDX)"n696LO%L!I9smU07(1H_:!7#84W>ZmLkaGYtPNl%ZoVq3dn[528p=RJ>_>aLHo=0bsHc\p6S^=^cF2*kIL,SB3MHq2:h8DNWcmi^#L>s7`R%RE>6":;S_'XUc5P](HA4A$"Dl_b1pdAuc`oOkXNVX>-^$)L9r#cJ"/V3.r3RY@*a$;W8FZV@mBo#b9j3WPnhn[r!hG>7Y*]6'_TK%$6e!EOA,r(Zl1*C3,6c_(O8E1Q<>mqg,=!B<_nC1Q<#+:D;i"(G$jSR&Gc4Qg_*>hdRZ!E)W^k48LJn!nEdQ*'G1\DVCl?d?EguK%ol.ttF3*!ZX9!kI9e>]pe\rQ:((.,K7UADFl53iUU*t]!?V@(]"lI@40Xl^s%E`9d9<C+7%b=P$9),V#VMjU"`FE-h96+WqEB)Ie%()!iE<\>=C+ZSPec/YpI`H-[58I5AHAAIP``KHiZ[/7$N6(&.#d;<Ep[0QN:TNbEr@A=&33$:WSDQEZ9.n`YTEM\o.hs4BA7#W^g%J[]49YZ)c6"J\A7X=TCQi8J6S*0JY0]?KT['2h;Ef8^$`)iiP4g_XgAKPm@;XU@L-KUc.IAPX?NMcZpE7q?tYenhPoAAUo!i6C#%%KN#qs=)Zh/%d'G1j!;NZe@O4o\ildBg^/mD=KK'L^LKYMJL/:AZ"Q"0SkIUglK>*JBs;K_-5N1U==Ai)S]CdH#mbT7BsHH;e;iHI%oJ=gj38BgG\,X.6Gp0L0qhUp0W't2a4KH%so3J:>0Lr-1-!gQ[i=W9D6A`o6>doKr1VdSL[6bK0*-)7:RN0:N$DDOTF7A%H[W)^a%^PlE(pSW&ln1&(`42;SNjq5_-&\eK47Ram"HQ:03WlU>([kE]sLV'"TV7;mtQ`4aGkN3B]EpMY!'Kfk!NRXHU!1.Wo/tT\Uj)oY2%hr:t@HKC6jIPEkL#DpL]<UB^C,>k,6^Q6uO/+U6"1q?fUoAo1qiodPMf/D[1'R,Tr$UHNlN?8f5<HopkU,T,ab2Y;!C?ONcB$*_%%/9*%u9["2r0U^#ac6rKN@+QQ\`9ZHn47]E8GXcCM>r4tYT1Ff*)Id.q#op]=gUiQ0l"&jG2jZQk5W#NRUUf"YR1U!8=A0*5$ZP"t%CLRipbo_t(isf&RUMFIrS-t+[a26C&\BJJ@n2_HWmF@@95t(\PX0A,jgunu"%UfsTG69n:k)J:=*B"'10[8-"cUPo3<%S0=rQTcg%Si!B^m-^pC6IStg#-0[87#O%PA/GRsA2#N2IHg)6FdS&">3i6RU;C;hL^TemJR4H>C=sU[%p^;e_-4r)k@L4\?pk9IIZ/YOZ]KQ#%[(sc=Hr%+Qa2#^*oLIuTLb"@Slpe3hY[?.SUUT)BV-;X;p0aHblO7jQ_0.tLEV)ff?H,nP68E8a+N"p<efV.gJ=(%\YqU5F+ph9Z%3X[iVa5/MUQb%++p.ti$Z9%Yr2Ippd+^+b^7PpVOks2P0>Am3g;F?Z"BlUp!+g\%=F5\hGTK.o/Xp9%&A`\n#XXi:n(6"p)kf2*9%@uR2;F_nG(+NTnCX(>JOl#XgtMi=e6U>]2pYN.tCMN6YpDel(o&RK)jKjgcPbC]?fbrmd*8i0/[9s5O-B/Kuk,#TVW4faoM'!B:[%?4HGeS/nq!6Lk<$!@iY5Ri!$Q7e4*d3L('d%4$k,0bAn:lfEuS0HJ7/i#>l@Z0$;Zc4:GaPaSe46`*>XeBPe]U+&GV)d^nI2je5j%R7s+c-<Z7:Im&.t>"p(gU%u!eka?Bi`"QpEN9Sjrk&(09)2NIr>Ip,f,MRtDH`2%up![_#B+THR8)"]@Ho-Jr/t9CC7Gt#)Oj:I?%&Kq])e!+r-*6utLjGo[c?J)r-mOQAmot%mDpD\-(hmE!8`c9r@POO*=^e<YeBp2V?,q^%M9[qc<Grkc@J`Ve77"HK7^5U,EU?_E0%HM;Ae&BS<^lDNYO`O!CN@RTFjLHQJkFU4KDU>ZRQSb0bc=ge%FLqHe02r^K?doM?oSgqGG:<kF[@e59LDQf()OHBYh6&ro)J\Dm7%`S-lQ(_Z(N[-hlf+s%[NBJDlOn6MA86%eXoF'(G2+Xi?r_oo@KbU5k%-,2M,?*h<D>XZZh_(Z'r4*RD8_66(q;OKNO;'MFsV$$;P%Sj!Ah=l;;[]HDkl$d=Q2k<@)![D;^Z-7L$Kn<//i%iPEN[LhDsC%AX67+ds_nj1Y)1[auG7Lt[4ei[afiJuZ4h&\\04Xdj9/]iMi%)iu`*0e_W+@)lrs;k+it>D^Eb=m#j:_.J"T0ji"76p^3gbO-O<8nK]Te:3;@6)\Tm;ikUtRHasN&K.82Nu2!;dqg75#]QOC(6dF?%V+.deJNpemNO5717Pi-,=+L[;8.<EW=($<Y,oN@0YdD[Kr`@pN\*7BlA,m"]50?-nWC!nB72QV4GF:+d5eA8DAdTf9&\qjUWKg"U%l.ATpKW#YDU5U-=GYdDKcgWT')KWo)?n&eSTOBrEBF3oP(D4p/W[edHHXb$giCUOR197/+?NGLN4fr6Ka=Cnh<<gE7Re_"mphGq#%3qO_<eP[B`m:,t9Z<8E.\F9.0WW0&:^C]LP/@Wte+Suom0)EGD.3epn?d%f<gttY)'dB@QACFc6N`:gVD-1tjALD9dk0V,F2nQ*>%!!ZVp*N+U%Vuo">()p!qpn.Y>OTgQ36nK@'I`*?AWA-(f6u)r-I5*FcKEEQRd?\KT#H\jFdG/S':QIVi=_2lI?PcaHI(??a;@1aJ%->j:BDR[;)/`))Z89S\RHruI@=YpKJK56./J5kDXGf3::UZui_P7kPRk*h?fj)J$](37hl-"i5,#eK:D>(A;2P/3qJpWA:(0@_hm%/p;WAh,br^mp6e?fW()[Z72l(BI^A$1I(oP3/ja!]_F@Y'3@[/h=Yifh=I^]1^dpB14?"nE6!j<TfU?64KT$4'sfKV7kXq\LX=.s%AVJQ+n"ba@j=)RHrWd&t>9FD\c-5o@@V7TBEcXP;SB]$IjM;P5MT'&Q5_N''4Eu!:,gh/e:mR&&!j7T?+omJn6rX)L33I'&=@@s1%/K_J8a<oLr`*:_)^TAg<bf`s!Z[;@\+icPDQXC*\<GP!7MQH7G5+ZYn6X>'V@^o'MJCMO_V*M`p)6cUt%X+k+#i<B,^uBm_;%Jt*%E=N23ljE5-)?]b^7.0#gRQhPN?eTX(It-7W!51ocZ[G"9f'&I?h];Ga/*W3MWdY5ARYEmfAMr(3ikV?4W_H^@a>eq.A44A"ldddL%L#`b(\i$7VN?#I%f4LpQ$gQBU#PW^`hAp6Ke!cIV)!(5Dd!Q)ddqWGWk!"U_h=REsP+.(O:`4mRjR`UZ\n(E#Iu44S+MsTkOcV)@%:8Lmr$!L!o=Wk:HoG?`@XZ.3$MO14V8GEoO!Vt'-=9B73"3@Gp%C4*N<u<e1#ks9iI'D.thAtFDVM3h3bKdoYh4BHEB>3+Xd6gsR%SaLaiI,47IC0tqoe`SI'0X`C(p;Sr3`u76^AtfC9X40?$Dsf!!b6r4.+If+0RtMcukU`tUU0hk$VC<HrcE=4Z4.Ll@7ghXZ#q*;!%g;7jGj"P>]h5Ee_m[^:bI%24,KVo$4KQ/dFbBQo+ZES`H!s-mb+8\->e_P3nXl9-e(*,^sgM65e'CALH#;l[6Xod*$R'kkJ.-Kp0%48MIR,=Cs@G`;kDU[\p@:Fu\W$fm)F;X6``d^ZB4^tg\WC6WQ?MGe4`.b'8=2?c@6#-%i9EV$`jbg(Qqha`anRNT2J7g_2.<X>Kl%AdmK&S-T5\p3<hW/m&Fon/#hA.Z(AtbFcC2S\'Xs!l:?^'*7%>Vb9?$*?*)V.Kl<+iKBV5cF]o-.BubO5?a[h/,.CKU1Ifh*g(e&%;p;ljN-KlS9J0*355%bU^?ai:+_U,&>Vi/5@C[05lLFSP7^F_cq([MR)Y)4Gg2c/>#>nsr0lb(QNH`cO2-?*dSuX-5`:`KX&?(F<%/>6Q/"VIn(2OmD`,G`E%:lIXt,-Y>7H'f,QG3p7XL.Ymb<(`*UTu3V8[V[1tm66Z`@j@ahMdi$h$FMoicfeDN,]M]\.k][:i)uf-%*fNX\KZN6JWQr'sqQ@HI&?+p]p<hkC707pTa%d\UQ=8YNZjgJ;1LEo%\4aj-Z9/'`e6eW`Q-7;Kb&\R`ZuNCO#W\c-^uS]"KGDaf%K2mQC-sEXp_,epU3O5JlNb4G">6+06qUA-GJ--Ts=uh=iSO\5O?.qn)HcDB$YB,:7'\YGeN/7h9=hXi@Y!i`**Fo^i15`MsN6'UB%A<&CcNN/5_deN\]5)-"%>G-6V+$*o^e.=?u(5?C"VI)tBR7LN_j295ra"Z/U>2`)ZBZsekVGaiU?3E_3Y"$#:?]E/?Dr'7O(IacE%`f#K=0UuEC0F:,V-GMSY!n(F80eg[!KFmMp/5DGb@A/u!@Mk(VVWpGI4HR_i%r)^9>"I_l0pt2Xc.du<l-M0j7/baMZ/s(kmO0tS%hYf?'VNC1(i^S#)84s^%+p>G[1[WP"#'MAl9QICZZ6tAJO,1A.r7n6LXZ$U_1>P>@[`gcpFcGJr:7](nb?,iK[PbDVVRPFTL"&Rj%O^<VcNlDk_=WC_X[5)2[m+KhIgEU`Cr;l8Ij_^53X4?er]"O"e`"@S/i>`8nH6MP^hVcqh1IZ4R,`ZQ`DWq+6laArCZm_?_GTAI$%8doEJ]<:K;ebIZQMK^W"R1jOEl:;T@1#U,R4`"3p4e]5`Kg,,(_L!B<`S<q/!-mG&_l/C;#1X?f/PbGCq?VnuFm3Ln3k:>B)bTX^%=.&r/e(u.0,MdWKd>*@(M!R5'R.p,O.l?.@&[B7K.VY`FM#s^)O>bdmqs-'r5N:kk5eY&'Tl!D@&tG]HOoP,Ce<fLBDnOfmW'2sK%a-K\W-_<\\"/'YWEN^Z*#Ee4B7V]0gSj?Y_"'_md-WTdtGF>8,(+*0TL**UZm*C8m-;()6KTOA-0Hf4dnP"KSYm#J!m25Kc4H>Aj%POKl'%(dPlW4"`P2Hu=Fe^3:^X>2NWLl0r:KF$mX@;,S\\O@p#<0ueY]HU8:Q=THSqqOYiGX6Te,?b/@a,V(G#7jD&PqfcXBD[*9%UUM#Uk]Q1+q<<@5_jNB0<?pSr=NJD=_qC9YlO7FLVORl&X+fX@1"/Hi]rm%X<G6G"_J#dgW]^?_,7DRc,%W1fRc;+(0M+YV`,-QK%M"#TPCS9QYM<k9$DhW,Q4=l<<'-]!W3sHqek]gj&P2W4#Ar@@H93Zi<ON>Wh?#WP>3Z)QAPp+gBV([dLhpI6E@cY]-\"%La%]A2l%HI/jr,IobG@<#6O(G_L%I:m4$F>4*4ErY)I,mi\3W2>8V1a#GI$Y(3#A1Y]["G9mN>ubP]f(!N3j6i?[X0YSk[QnW/&2OF\KkuRu%*Ji=S/tj\POB\V+$+cNeYOb@1?3E$`>_bTeLf]aP0/asD"g5&+h_Uck31J>C)>jh/@\u3(1D1luh8FPVa]L\d4M_&$gbWhDZOf*1%*%1=u_C268P-ia4[\BlioiXp<Jg82Te!Mu9,oCSK+HBbl=!LceW'NboSbiN2:$`_m678#D.C@uMKg[FEBDY[npcTF"l=TP_Yailf%/sYuBAcXLdIh,VOOQ!s<D%F1-Q/%u8&=pY[%SU^?&DLVi#LVfu-s/_U,FHQT_??aFoOtM0::::G3N(XTo?jm\oi!5a\@E`+XEn5m%2\uIlZn>bE:*7E/b[U5ad9'T(Prd(3=3IT<L:"Hj+X;A*rD>EC9pT%#B_$;@4KMPBH!GL^BQ1)nm7)NBbt*Pl52"heT!f5@Ze->a%L<L4Grq$NE;a#jD&9I2AGZ%DD:G'QomGZ!rPPgm)h7YRTg^_XH'9'sC'Ms\odV3lq!Rm4ma7),%mt"ZXNej-07NMlU9PP1ar!HpD%'Yq'fDk]rhTE/FoU(A?Bg'V,Q0+4t]B!qnRd+tugFqP1]gR^d9]%cl2lsne4F5lXkc*sHiWY-1cdEUn?*IqQdE#hYNQ0no"h#j4$%.u\9W%S3^;l9PXTSUE%CY"LE-,;L%=S&.]#eJ%BY%,P/JRpg+H=&.<IK/+`&EkN<E12))n0VkEq`6(o_[CGrF5_dj1^X@u^M_*a+%3I#pJEI?0%5me$ZiPd-*(d8<=h/Bh8.>^>c"d.*M1],:e9kLe@;P$Sc64:=o^RmY;N^K@40a9nB7A6ti^ok9^1Wdk^QfGb7_U:fg%QH;FuY%`..Zc.!$I,i'1cDfWXZ@To/jPXlZM?dYT*^W#Hc#*_iGOKYY2sRaJ:`T@]d;3VGRTegdSWrStT&a^MeBok%)EIuK?ojIQ%B17DBj1&IOnEO<OR)tLNZcq(djs)1)&`]hqGrQEc$Ne!9;]d,U:0rI\)9[9$BL;\MM3VfSq??uJqC>_F#_OR4B!2HWYrX7bQ%/p`%jp4_1-R(iGAleFgIm$om>V\hS0L@ON[6`4/.qugB!laZcfAs]%_b'7cOF1@[:ELK7V28MP0X]ebl+E%f6:XG2P]t&C5e/imY.BSY%O;=gD`^^=K%#^omFq>B]`u)bh(a-pGX-+=NhLjo\=Z[J!HEb9&r&I0[OBY3\TodOk2PEI%a@I2&Ns[-ja,_(*^)IqREPneKc5-t0%6%D5.k,E.#GCjM*nfC;/O,UN/C@qsOAu`U@nCF/-.o&+.`@K%&#gc9l7LQkl7ggk2`J`9g6S=)/!;.&Yp&\cll_V"aGEp)`j??ft%64E2MkCE=Z7!IZ+Y?OOQp<l8O<Q&U(`EBa=aV?^1g!"VLo]Z"ViaBl`"%N!EoH5KP;0["lY*iTsc@MUm6!an2/2JI6OGo*.5JNTd%8G]R0FdhRZRO<-3%hREPCh\+sFk]QHk^F%VBgPeVb:Vb?cO=KR?'^nk<fl3VAD!3jYgi#rNUm]E.t>T`C!=6CM+3QidM.3)!N,]K%N#g<_&6uZ4gO]uWBH&?hHVH,tBA$%B?QEfAg(q1E)-)"r0X[1%dTu-60r1$hZ:uY@]APD#nP/IL3``G&,CU\MaH8cgRI6;aFn0]M%*RK1>lYLV$_$E$-ieS]$>i)q46YTU1!5$%#\?Lj[^CRV[U:)N/?c[eGBs8<V-ste\,[ro-/=,R6eR<Nq-0"cF/cDada+\>9m)@%k%f.A]?D!RSgBEf#X/[E_d(93ANJinQJ'@\PCBKGh+3%i>U[?G'QcG7s;_B'<t$j7jgd_;D7qUJH`PY;BV*E*[7\/t1Jns0LhFr_M1%Egt\_\SO\t+X:U)SL3<'_RR^^`tr;ClJEYH,?0E=m#.1eK:0D@pBY>5eo:j+fJS#/;MgtnZ6Q)M.uD8Rj>(;UVO*Fe1cc1m"UcOQ%GV',Llt$Ed/CBC9A:JC>4GQk0N$PUnrWh\'T`<K&Bs"3n%n:Z4O=N'YWO_F$X)AFl1=:']?q5*K-p:B/8B/jX:A5*g!?iX4m=6if%pffHu!j!2i)-H4He>'YrO">TGS)#3e<stB5%&3W7-GI+&V8G'X[Wf7AH>c/h)nT&E]&)RrEC;4TP/dL$VtAu)M8h/-H1f;jT"K;q%:+lGETk]*ERDa)q_Ec*Oc1`kb(r_KiZ;KNo(1;@D4l'!5XmG.eX%k/mdEQcIKfh/1o!Eaq)dJ9`5F%@U-iu>Y`c0<L,AGGhjq8!\%?TB[k71'ScN<k"q[\P]]=L2CMM`SQ,BHXm!F/3pndH]sC>>X8COK9bLN0rgWo<T'3&bg6T+Wg%9i,o`bVBa$uCNQ7<K8KTHiGMfD%iLk$j@3:WPEku_f@<E%a/Da@G1Mri5>#?q.\J"8;>&cJV?ofRSq]8_]/HIF8!&.,?1LMluT0$@4o1am?R,?0ZFpAG?]V!&tJO]<r%R*+'g"*E1&jh]op"<&uVK,ml"]:TLhj!.>AA'.I;(gPbc0\_0EiN]ABrFE%4UbM[=1(Ro<kK.he.uI^#DM-d.+qq\g`K<,U!ZYFD%URdXKVW7I?@FX&@?.^Yg1o+^GBpq^'lBd-ZmmssX3a3RQi)n8jK?2l",Cp/I$Sl5S"R+9cE:V.LnmY.F.7K&`k4tkCE@td,8^.o9%KG_3>X^aGUL+N5JnYp9eN^fgm?W;#t!QuuDD[<UA$jJNi4Lm5G!P/^;/X_.1[:tI^mjoY7Hb&^-b2#F(Y]35U4EBHdPL^!l)LF\m%!r['oJr%d@3n\.)1@pq!KI\N_5hcSX9m7A/r2hB[HGDIaem@bXOQt>]>_`<CQB(g#k7,L=,)3'G\U38cfQ]a,K]pNl*Bg'jU_)$D%BHG@6oMHcdFV`U,4e3rOZsuKpKd"?TkL5)ha^C24!(/[(#]V"q\.G?WH?"3R2nm0V'd5M3n/9,YSdFIJn$"7)8$fk8*-iJ>NY!`0%6"%;CRIr$5c9F@B2'$f>i;t"LnaCn:R\S8'NC#F0jQ6FBA[3guWL1jG*UUWGa9-D+pI=`u=4g#0<$>ZH/NVKE?%YeC)h0)nqcP5<%PI%#;+WEh*h-%P&-cAF>HTb#'?pN38F;1`ZjK%Hm$8FPk<2T[taCUd#(l4<049A8/=5'#(HTR9<N&^YM7qB;m8S6u&,Z<n1WfNt$%>_uN-1sbIBZ0cKkAkt"MATd[-e=Bk=@W7MeFo'a41!E$S-7+<*Ghr"]mQRMWO:g_IRf1&a^?U^NRHa?u&qP,UQ<4V`KO^c[N4+ek%B0jWUa(4);_c,CB_:H@)^BVbk<?+cb?!eK;]:52HGnmX<%jraj1kb:2*]mhMQkpnVcOA[Ye!?DK<>NGcm!]JGVF"Xk@pWQ-h"cO!%9LE^dO').pMb,%59@9D+@C=R%@2"_e34dp_<k3K-Mf.uM113OaO?nQ>gashhL^4c5H@7/R5RBKaE?ab3g*e$*bc>H/(5ksonRcc*%F7]8L<=LhV[e%4kmc^6'0Q+.0\oustk/iY"n5IMqffW:rY1^4;1q_NX5!N>`=PNd;5!.]ac;.^7Bcdah!j)u9d':>q&BiG-)#rA#%b2uO@l(4ar*'E.@`^C8g$Is%K%XgmRm'>q:aI-^NpE>/$=$7`C-5F%;@(%b>_gTHhm$-VrjKDMH%jeinkScB)I3qs6`+SH3%W=pF%4a3b``,s`aih`d42lh_:P_,B@mb!=Ac7=I<(d<"\oXRpG]>e@i`2O`:9Vj^YT'Ct=0]9@9+E`5P!(b?7q-U4hQk>b"Z5EAd3>g*[%[Wi+Cl4ETN99YLp4:M'a?GckT7nA%^oQ>4e2kQaSZ;:j@-D"GjkF0.MQ4YW11Dj`K=sm!tEZEZFN#;&Z)&lL7^`n*-d6luOHa6`d%g;W=-N&3-sosDs5kT2211hRA)G17)S5t7aA6"?f&['J^&Nh4U<ZWJ>7HU?h7+Xi`).X;RJ=GWMH4^tdV]ipE<q!m?eM`hZkNu!WX%-\I5"nAXrZ3"0+tb5d@f39IZ.C^gnW<q$LZG6us-8_*oT0hSpWQKr$KGR=,_#paR[a[s<NK!)1OJ#YSB'pSl@I`\-r8<Yk7an)7)%OX2Z`,%7j<^IK-d@]o2NrZ;'#Bl`$@/UNtD'?RNXYX@&odB>_Ncj%1B#a3S5Zgdne/_]Uu,9q]^5StC78_tCGp#Aaq'kS\3m"8N2%Wu!<t`Z<bW^.8VKXX"ebUh&3t`/HE9GsZ4LqW`I-ap3\9WpX#-J5nKO<@s&dFfs!:1l0@:_X+*F_eI.$%hkV_FRXmss!3+8[Rp+6%^V;KXA2*dJi^abbi.>&$g3m]MmAe6l0YYI-bAKfZDGAsoM(*RXe1SP"o8o^GSYDPu:JBt?2/,U_4;L-D/sZ2k`eAJ\,S^MMj)JiA%[s:JW>o0@`0F'ac:"0:9!4k=*,2E4kd<bN3]4_06n%4)GRh'u&s6&"[SpYeWo#2Ce?f'[Ih`WdTLY&._IC:B8o<6K3?/AmP3G\(I%>0]=arpq4]HM$cj,UHQ5_LMK/qj2ffro&>cd\"hUg$d5clbAdm-dqQ!!S'u.W7QHgA9[W53Kc&hj=&_L7)b,$j8ngZnne3o7uq`s%ZnmC\PQ0;QQgK8:iolG-MbcIEih%9GXoDhqs'fU,5G9?EXp/QDD$RCl\o-MFL.&/j&]Dtr@TdZ:-$oEg7n/7+8c"`Lm7Y6#;OiQo%eoT4B.nd)uX=]CD]pPVjapWH+VTp[BM3b?qLOQ]nMVG</lLZKB*e!`Qm](,>Mlb^r:85h8r7`DOA_"B1mc>#<+\VV+LQBCHTQ@Z"%'jAK(ZMrVPY=LKm9res1$K=Y[j@[THgUl8A/@=8OF.octU/hI8Wk7++OsX\59d37CNi56/<cOtJqmq^G0(=JIe0m!^X=kWTdQ9`r%2rX,FcD[AAGS.W*[Qe?-7ZSk:"-S+V,LX$/MTfGdA_"G+@o0$Pg'\HBV4^b^WLCAlCS+9s)Hq39;KW@>eQ'f0@?ijbcga3-rBZtU%E>hn0P+ELSZ74;3D1&%HPjV",\P:%M(tYM/5K5sn)A-._Lm>Pk$'pebC"A(DrZJ2N)8I?t7[AmH*eh;F[Z#pY*ir7W8H.lqPIQaU%_jY3[DWk"?\#!L,--B/;TE^isTF>:;h'gCAeriTD0j03#';ufV\.Q-k/T.o^PcS9>9VjSR7cU'uU-*>\XB<#cNO7Ci[nA"Y#qaS4%Vo:3f>taa^/o_5)4<#Mr>ViRI`5d[HlhlmM"Wk$M6.[7(NEDT!^7?N:h:Frp<O#om-rsB$O,<@2V'&2lM0^ak`,$.s`!oIgN^TSk%aRMo,SIh!!+LW\u8SXk+HIdo"C:Hc\^2a5T&L(6^9L)\hMK0qR00^LY,%.:uCRs^!!u3a"6Z1OibolF5>-r*OC_^0hS0X?C5+eeQ%B):Y4=/M^$+A95EeR&ggH)]r1/F+:r&\u:J8bt^3EIg\6<J)*mK*D!b.Meh("i6)U8h!n_3["jk^V1Q61<K_Y,,<;7k>`ZEK0YUp%LV3\801M18EF/6\gQ9Cc)T0]-Lt!uC=*%\MH-NMT2,t$rIls(#9$MB59ooYm\(VtQC6iTZL/f<n3P$bJ]a-pLAh#YBc,+gM%ku@T%NJom=aC4uR;A6("\0_eRXUHD^[_CY56H?OD#O`/X1/_@%k^7/r[U$?H[r-e![O3c(UeX>/HW?(,]L@FKBZj6+"9p6n*fGa$N"^^f%*F40pAs]V"1eQ`99uok1r3dK/:$]$KCL4bgR>XXTV[$.2L0Is[@NO8T-BA3[@hJ&TF^p4Md@^d"4H&LV;8@EXREeU)-\@0tppNn=%TiFE47ScWi4RWotbmHmt4g<+=g"pnk!O"OWq'P4:)bd5;Al=\+1=V]YI''@F(;(Vl#+i"R;$\8^?V9%5G]8Jo"E8$KGmN4"2)!<S%[XIf27s:M@=odj+RHIPGH*JdVd]Jbu<tM9>E>t^!Os!c<O@lbt@d2UU<1<\ZC&US:F-Hp8c3-#DgHA]r.dM\$nPPCr@saS:-5WS*%S(ddsk]d/2.ZYZK%<["gW5,i[rcJ#.\,=N\21H*#Drcomd$o[648I>qJ+GnnIrKW3X/B%n:S0k`]_h<Rhef05RO!Z)(Z;o<msfY5%p[m/%BCC6Ci<NFc05j(#IX`e@h`^kkXl8/Us*8-J^"q$8Md:@gf7n*ikdWqJW,5Z,llR>G_2bV%%9m`]])E6Y)6+t&6p$G"^<sXd%*M6g,\)110,V7qAaqf4*Y:QZ=Q=Bpc`L\X[e.VQAE[D<Y#ErfS]oVlDm,HQ5bV`7--GrDo1N^:!NL7=ji1k1B(td([d#iqAf)4a1%!8W.^LdB:1,OoHcL2?h1YLEmXeJE^JW+WjXWrV5eO%1<>J^Z\_*\UaXqKb5*:$HU)/!*-8HWeG2[iY;S=VML/N\TKZo\!*70O!mq%_^&aqO:#t9"9Lcj1V,nbe^^bO!7OeL(t=dc+kM>i]Xd9h!4%m%A=t&YA=Z([N%dH2<-8F$/u""HoM)+=)-Ai/>S&M4d<=>i,YACb%GMnI`rL+sTTYh_ljU5O)4D57cSB`)$INAfg+`INbO,g3EGgg4e-D"?7U.&]8YbEg:0j<7M7Ee<eeW\03]YggO]\&rjVZfPN*DF7Q%T3U(#R?s-C.k!/+L_`<-S(\QM+g!r;.))i5DM]r8MVH"HS[UR6RJ(I<&UBUP/;lqO/(O5Cj?O&$\ML@$EZm[]L6GjD/HZS'kRSIm%4BqYkp>@=CS$Teq-T!g)T.km`QP?+0N%`IcEZm*8?0G7gH/u2K$1^V,Y>!^=`=uZ&(8;=]@.dd`q]0E@nYdH7+@i9nm,<NM:uftY%W_LSV!cM:tKQ3]'Oh=j!YrC23CA5Q[SJZ'#&sEk4>bThsO#>@:67'n8-D`QC_8rC65`&6t$[99CHXeMPrT;?49I,o_[bd0c1jhS.%=7Z$Ye,!_g]to=Ke'%AgFhZabS8(H<BLE8^`2$Jsgt(kbI]lHl!H)Hm.a"/lafJ_WO'.VR*=$WGTSjO-Zf3p=L9p6cJ7RT,CkHWD%Or![^_fj*DfTW<;mb!='AllJH'"9eMLft5I*(++?AalE-=b;YM&=G,9(Fuq(/KJ4C3u4V;\2K!Y/2T<ZiCQ&$ml.bBNaAj`Zotr$%M3rcESrPcr=f[6JIRmC``TSMB0MA_7EN+^*LaGM^f@<0!jC>a*e2n9ro"oK6XoFDhi1]L0?Q!%NjGp3Md6o-)$N10NeDiQ6K;)WA%b7f,]dT)GrR(:gOmQuIV=Rhu:Wp;DdW2l'+]O7c<@OCAF[%OMtq3Bb62>KB,JHnWc0*rh2+@;3A]-enn^S>#d!UKt;/c$'<JT,PN%dWs[c!5D'.C<'^\Y7lk#B.iuQY&%cECnNHnc9*sYV24.C$+[5b8+qHl9(3NX-,q*_#Xf8]OfV'WYQo$Eg`lB07M`/hG%M6j6koPo%XbtP"r$hd07'frD;'Y8VK2aoFHJM^GC$!dUosh`I#Fk@[G_;Ecb2':"&@r*rWBO@dcVP9,UXHM;7LP/b7Z=A.ftbFEY<7E0E-ISo%l+eAK4qUS65_/tb#*DY3UOikkg4p4-!YSES&g9-/h(B]%GTb4&[sYq9+q^\dDb&;>QHJ,;@T5(iJ[;fpEP<NR=Na<bZX[,`b;ufT%?$8[:Eq1AaLWMmf9]%l'=$IZLnZlmr!.(lN.taHP*B[70?6/huH:pc1(%T5*a=L+q@"(Zj%cgRH%oY]9#(c7ObT%4(+bn!e-r%E3%Vnue@6p.[PKQ)i-TiF(F=!Q;&Wnh!K7H,uP_p/`r6h&S*nZ;OgVg+2drjY-,JJ#uTK_a2Xn:*f0H@gd%7;13p&rDl)[>]LPG992J%,]>5]b`N0ui).HZ&clDQ?$iR=lP*"s!nh^GPtf(<@_/PsW`b0[Nui-7!8!Dt38*$k`cZ#+1cU>5>6-(F;&[+>=ne]9lAsLZ+9T<c%\cGBK0u=KH/Ma@)'ru:g`D3T'_*3+_SiPM3^OPm5]m+#<5.JMb)BBCoeOq/U/5hO`R'@i21nDG8V.D*a<u2qF;dk>c(-M)Ci6qpM%s(Y.CS`X]s#tr.=Xd(4(']7MQcal/$6?h'bNF$"1-f[_I^n2F(ZEEUk#`/j+_qc(SldbSa=*)X*3[L?.^K6qA*Jlg-as,/\==nYm%b[\93]AbnLM;u&.aIc>DE;<*7a0J2,5T^ctSqS[7Xu.%E8$Q6VpA714.X@;aZ]!]`$,L6=#,T_@=E.jI4P*hM;nk>PZMD>Ei0h-'%QfKX/UeLF24bfnIe/NKNob__%2[ml1&Q_f8c$PIf&?B*>h%=&Voo?LgF.<]1j-<k"<<c)o6HAkY(,1%SKi.,;bI/#cHL[.ac-+FH%-+_)`*]lZT'<55mR):/C:66t5=2'cT3_^OTe\GRDAQlI4`_Y-hN$u1=1M]:<J9&nZ]8aI13T>:I<qD;UnHp][+57hiN%.SW2556G%*5B*T"89s=MiA*'^r!pSWl+uE;^@61qFLOG-$ZAB,n-oP#:Hj:OMo5mo//U'I9#?W2uE72H;j<^AYcY3LY0r_0f2\A7S/PF+,\t8%*FfA74@!Al;:rH8.]F^&<\q)W"BqJJB.pJi<]:V'%pU34GuC1c9^m_Jg+nS'.$A"lOc?agauK'>Jg]-B-<dc-IR8l*Ze8\CV7Du<%#('niRKYS%^nCB,K1mOl^?gN_;FI>=0P-6sb_da:q6>L^b(0)C)":j"fnZUuY@r97lN9:0g"V_NH=.4.oY7,1DWhn?,L'j5jd$7"%W%*R+l=cLE@jS]d6AR-XMKhCO8C/p,%\mHqOc.Ur!7_2inZ7UK,0RR/q!U)Wb^M4-nc`PHk6fJa,6a@?hp^$c%;(YW5j_d-VcJ6S%OZgi$L09qFm)g<q>307sWRK0>kWmhYE6*m!W/42=VrUE"Jts+fD+-l_bcQl/[otiOh_<jgJr1JaA-J!RMuD"E%sqK%bF=%<pj=fi%U'quHS77j#.?+`[E641./AH[E2B3<:I=Y-Qr0p[tL%uX^.oW%GY//Pc-?&WJ4`@Xb,en>rLL28'Hk/TI$D7lg5cQtFL_"8o-RepY%N0AtiR/V^]>eQQiH%Q^N8j*:P]0n#6G0OG2+YfU'(H=.jno0]Vm,C9)4ADEb/Ag'F?Qqm`S+T$[qAo/Bd$D;(&55N8]d\+C8mRCY%`e/L>%<UpW6//AOKBk@OeRR_g@R_C&R4$%eq`]k6J9kS#[aS%Xf>I,C]]9!*g1m7/EV\_hLH!i2SnpLIMgtQoQe/\#hYHZW7_eoP%Zlp5gNj*@"F8*bGVNM(i?#a@[Z3,i_B#hI<PJoa%4;nr'?$\k`.n#bZ2A$g#MY*"0D$gs541PhFHZ8Xk:X1YJc!3-bao[8e%nO?Z%[-R,/FrKf,H9;F9SmYJCP6A9NED;E!PAoi@PZ,Pk^>4uAAkUMqHb$E:]A/\[,>tL;JB/%,ObM1@8I,nY%?TluZ3QmROu)B=cWi>#%-gs+sRSB.CFgR[Y3`mG!!+m`rCfRULg$5.[hbCMnh36BdReZFult?SWYD"J!(+5j&<\/+F2@UnPi&Z\\!Q10oc5uI<\8%_c[-i9+%,,9i^`AtAtL-)mdc[eem&m(Y-"77FO[4K:7[5A'KbGcM,8g]`M4el"[Z/,P1LIBFSLA1&gVM.R"'A#N<#<6"bAj_cRGrFZOcJL"s%^;$^lLUPZ6Sa"PsD6BT5>"QM*TC.p\Vu]N!Xb?E(*fsGcWHHZ;TXb9Bf9u`W]g5?Qdt+dXdaWG_4RJ!k+JK*BO7qXd6<c7t`mPcH%%nL4Z4*iut*TNTu*mK70QsITB.4c)r8M8/Q[:FTXRZmB'EI0t=j4_aaqHu/_MHP1i9RLt/qQ(jXIqm`O.+#nT&CCSdk+dH'=:r;4%\0<qQhZFFn*pn;9[2n:r\/ro2GJ&u$p]gK_:lWCp6g]]X8F]>Rf8ke<Wer8=$8dT;=_Kar#kXaG;b@%G)U4B`U_3!0h&l`8k,K^8%PB[65*Q@[#<bdcM6XR^JC%PmI'WG3D2E1+/pi';1bE;-#(`L+h^D$PQrq+V3[+9Jt?gW\baTuPt=-fSZXn8r`$ZN6dL(EP:7>V!8%cd/53]WM#.[d9%s)d-2;q%&Pcq9)@_s7ka<p>6s?p:o3\pQ+2,i5tT:Y+b.\mdf&mkLXoj+5K)j^3fV)Ilju$SmU@04T53Go#i\X%?D6Jq4F_hOr`MD]o)@u72ja8On"4:imb-W[`S<X.nq3";]"C&RIbutS;e7->:OZ^GKD5FbAT=_uOnPD0J,/HQf.g>Bn"5l!_e&^@%YB6UaHp?:*<?LOrlKPY&:0APqr]bUn04(/sG]W]AqGfZXn)^l'?eRcR`I@?WVAmQ/YKni(0E6!cQ*TnVs8;f_ren*Ymk=-9`UM?C%T3^;<^YL6tj3,(3Von#ak1Vo%8[=DKM#c9..fF,Z_qjoKSSFuP7apr^0(5s7O(CDtn2E#@'Ra@?:,[HF\,H9E(U%HEl.+U2AT;d4%p@7g^=#UoZb8*(*BVd8'?b^r6rKda-n+OioD4bYhr80/m`E085PMb/#^V"pkjSJDkdhhJfHhO%(N87'T_\2"'oC1t7EK]Ej[Td@-%AD=L8s.:)*:Gh+JX1J/p^)Zt11];DWgR_rdaT'EghpuH#I_a^QgAf?k2_Sh"^)c(MQR>(1PHA2V&'KIZk+ILJdgpA(XnKS*)p]DQ%Tf<#)ENRl+cao'\qu9[rs#!:C-4dpAWNc&R&l)J@]0L%*$d8E[r4aH=@dE=VBA<HBJm?UVW:hejm=EPZL)tF`NP<Jh[3*tr\'bWk%hh,7bn$s7h9l\O4p&"-->VC9,THF2]r?mKrZe4CL@Rk+t:m.uo]a^]3M#F-6>sB$a5f1\jBiic0,p>Q1]mT_BAbDKtI$5rITj(A0%Hb't':Z=G73JQdjQg(-koZrYGStpLH;c%R>>1Pro7Bs/`C9t1XOgTMc\5\YO(fBYKd@Ni_NAQ]Ggfed<[c^LDTSXlm.pK-@.`qW+%c?DJ\Y8GJ[GJ6*X;CL!JVS7gH:5FhT`U6fQ<IE+Sn5qF%`\CG0)jGuffG4g:BkhnAs-<0h[f>%;T'u"=Z26d06]/"0rVL*\=n[nb%;_.K)hdKe3l8mfC]=t'')M0:7ruR@:llW=h3LfB"IW'_A^2(Im%RpBl\;=PcVL,Gk+FO:X-Tk5,bFE2AO3DR^J)UDKDp$8`+?J7[%Y[-ljHT.Npf"5)KLG0*_T=ehVJ6dW*PjQ5)CkHs1NHTDmTq:JJm=B.Q:]%3@DMbe<p^a[8Ha9g.NmJf.M[go46-@T8&]>6,HBY*`%GaHR:FMB>LSkU/'DMofQ9+J_*/@UVQ6nCngfqJX:_g;t3Ej2;U9tSIGKp7p*Noh8gT@NqH?/M:2s*5R,U\FfQg%.EkdsjCT]58mt%Sj!aMb5;4O%IWS$+2.]jec!t#Y5.hdc_'*D.8PWS4M?lVqE*46T0>?C#"F$mee:dWp=,/3m<eNH=9%L%b83sXk$Qn,s5Wc&IhMFH%Da(a"gPs<kr7o<ar;MoGX64\&[Un4mB[&6<Ze+k;CPsPZlg$d*rVbEEZZd`S@N,4B1]?Ulh`j/K?ae18Z(+%.p>k>aqZhj1s6s5e%pVGHl:1!mO=3]1EnAFW=SA"Nt0<Tg'eb-80Sii-4l:d8<qe5<Jc*i\Y5.HrEI2<d^P@Q]NY5mSUhuA,uj_OblV;6%'rQDB)gM4>!%p(Qr0rglIdjYaY5qE'0+5_jiX$iUUen&*J[oBG3VgO&k?e*CZ@BDl,HUq4,G"d_8g(TH?'G",]gIt.7h`ok5MIk82S^>2NQ'40!b%f2EZpEdLA+\Z0nT,_UWU"oZ0dp3#QW)m/M&pOE/AY-2/((\A77gV^Yt_l&"[bGA="J,%4]9o'rkW]k_-o(+N;T=o$d.rY=qkjMe@%rGij]kr%4&Y;,Znr-.W0bL??XYJ&/h=2QE;QeO-BnanKG%"[14`U3U?8m'a,ao1>GCJ'TT60f(%T2cCnWa.og,j@[R@#'(%:T'7b%4Pl+WS#[iRqVM%1/U7-fXET!Nli!qCdN@Uh&k(&.iNan;XCB)],pi,ci3p1Y><j7o^Ueg_`V->1&R7C^b\:<-;F7T*Q9P#n""1?o%BgOrZ:5A@p)(RPJ#6qYCO`*S3r1o"h[s[iJ,!S9(Hhub$k0H6rZ16t@QiDI0q-Pa=5LNgqnpatprh/P^rV>eEj_(cp\l:.+G>FiY%/qR/i(Q`/Ic`UXAWL'6jG^f8TrgJ=Ue`QFGCOa)Dh-Joci7+BTi-Fqjlq^1UM13onP(+=6k-&t"s%Htnq;mP3ZVS?GI.I2256cE2%Ms:4r'-o!u^dhrl2jk67U1j?oRB>j'HCM6\;S)kimeZeH=.@M-r9jPT`e+2_OPTs3od$X>)ULroGI=ADA;sX=M3a8?pI:3XQ-*i]%qEt$MV/Tcg=u*ufbVS:sFrN$'BEs!u:.>&)M)4P'h=f["G1)]jhmNH;2-D5`BeUnuA.24lgd\[NRe>rmpGO2okA>J_If;:dYFg5l%GPRLl"atc>H%5eEGrnq(?J^Tq)E>nhSQLiCQ;L"9>94X9RsA<;TOU'h%!-6'`\RIENibN&[es&GgX1A7,:e7lG.'?k@#eAQbUlA"%LrW4_+),";6.(0t*bJ@0IWbD_97LOoC2hqblq\-AEP%jXSdsANJpd+dmP"%SKWhQImdX!Mm5?QbI!5*TVqq;\TA@/m'7tnqP4ngs%bGtm!k4<Mp&&5Wcd4^cY.UM!1nQjlfg:=7Yh:h\g^:\i>pXf(+s39Z3qo]eb^Vn_%BHHA%V)R^!Q(5?gcT_9dZk.Xej1hG+$N;C\%H<WI0XQJsiWUk;*7,_u&iEpb^mu!qK:u#LkL6#D$O\7^lrhJ<dDah&5*)reZc_uj&&qK`A48QEff4Q0i^]3DMroJn6Sn7GqDm/U^%Dk<KtqTmbCKOYE]QJ?"j86N!NC5p.RF^0%cj_fMTqa'MAYBhRo.[[WmIOOHm5'h_$qr&p.Zk(4!Y>mglV!tDb6;(&*[qWeURG?44%?f'['I=D4glKj_4T7&&:V/Q";IOM.?S%A4SGL*G\?CV@>IeMi&J^*e)?dj;`2B1=(042B+j7Sll(LI8:F>-g4V[__U%hAK(h_b&q%4)At`074.slhg_FUX/r6PO4E\G;`rqS:04P]g&E/DOfV#nGdY:FYXNZIeE?PQT(7\[X\6F:?A,%U1%US>c%AA.fBWRaj64Nc`>Wt%rQNjY8*rY=,uj]pC()ca^>/_Pj-NQ5h#-i"!5,cJY)JT_oP3p"]-Q:7F7Q6$MWTSo;sLd^3%1YuSITpN*X[1@m@3755Q'KZot@"q%HuUuXqj[NJ_1D'(rd'4kU#"Qf]p6;q*o=n$]MKDUKGX--TA>"mR\T\MSoX9G.IJ_Nad!_6hadJ7cX5[\Z5qTDT)VB6Y+@iQl]ent%c^suS2M40V^KA7_"61u*[C7*Tq306+J+6clhssh/_:GAg>>EER05l?WVRP0a]_t)693dXGf6Ar!MWPG60_RZC=LoZ0/i`q>:^6qr%"LEmZ/qVODZ\o\1q<a11[4d`Y!_N7ZKt%m^^4+O[Kca!IrYQ8qlW^VCi6D/iroWH$)5-p,><R<D35"*2n_,#]T$.c1cjZ&NedSgR%1daBmH2BDG:k,aHIS9M3l.+V=cTZ^9\.:eRqq^g4Yep_rX7LI^G.FaS^\m?mnrH;Y;<idd_/I'H:m`n4:?2f8fIie%IBb"ZICB1-%([V!Yr;>Z/\b/0!_i4DO'h>:*^lj/3n+c:GO8Z#RUF)-3-GLZS8%"H49]]V8\%\'qr8[JKeJCG+bae-'_EI*-q<jtq\8Ask^=s;Z%T!'XJItZPMS+5^U*?X)j]B>O:o?6RtAbZ*bTtPo#Aq!rYl1lFh'qFpr55kD;S*`GTAEE`ZZ>tET;:RlCQg'+q&*.edKJ_SR20i_p%K#O_(QW(4ahs^i6%=T)N$/U3j$#U(rEe9Om49.D:.g@m+Qg=Zqs71'nd`!jPqI_.K^E8m<cGtFK]=`RgjMe`DF.e<eh_,^sIRZnJ%?ZT;Fp9#0+Mc$XW]LL.e/FS9]1?-5=RskYFqAO)G?Q8\/jj!aR:P/AjVmg$i\0)gmQkh[Pm9X^S\j"srb5Kg-/M?e`B2:_\dW/]!%TC1a_S*TtKC[K'\T09Jh\`)nGs8$:'l\kYP9,[2Jb?FhaMarQP7iu)4@sR7p^Nb'S4V7kVdqTlH/`5k\m`XLX*WN+]TBaN_M:qcs%I.C'1rY,nBA9.$t<Whl9ruaqOn)_=[9?E[.s,ojRr6:WegaKqprl^cG";Uo5;I%kQ#dZ:27?i&HB$klmi>'1E_O#`7s4gme5<Ct,%LVE*(HWn4*f-`JXbLA$V]psDfApNgrHgto4kSDplATV_g>j?(;]\`W?Zh:rH8>dppD^@P6bDl;/In8riG0MDOqhBi:d0X75:jeK:%j5:c.@u0Tu97UaRkjJ#pkLZ7(GqmdqC3j+KgjViT_4#[K?*@sF_pQ&A;sE5Q\6;IkU\VBscaQil6*HeJlX\htUUSd&rpClnQqRC(%hG'lVelg`+L8O2!IR:`QG'4gr:[3:TSD"MQZDinr([#'`3lo(fA_qj19Dj.nD7e1'r]U+jE]JW!I<-W5eTmC'lZ`!ABu,i/2D<JM%7gj$2Z1PL:%VHJMVf&eg;fLCHReiqs4k#-uT56HapnD-;o@,E_k<?So^:lW)nFH#6\%hnA\bkg'.%5#1qZZ+D&0/eZ=6E$V,pT1Z%#_E(&WCV+8p>57&pTr`l.WnO2:J^K5kM1-Mo,d^%Fi@?2eQPsY.S:F5297cW/g%,l\V!L]F\l+u?.'Y0j)+[f9;o'EKO5<erciI0%I;sFYLWB;J(!l4o<)#$7X!p`710&c'EEMUD]=]0dju)"&<:7IO:7q:W<+l%0Xo^96s)EJXZW[m@iqW>pZ;qI"%a`D"[7sI"Cj!c\%SX8rLOaZn/2AIq/14a908iF-3ML`hA;PkWD4"Oo`"J!35hqUAjTA]+L]@ad,d\1L)N:c]_Y]0B8h1'<;n#ipas!(sN-j(5a/f/0n%md0HJ<;G(.LQbp?G[C=XC+'!ll-Jk.p6e0E@UuBZdCs;mlXC!0$g.9UiT0Y%qXWSee;*A1NqCar=^CF_`P^a78/"DN,ENYah>Q@s%Qd7SPkr1!X:Y;843k5>O-g`F=bQDn[G7PSTjSH1,OQWS1SDR[3(^nhNQZmfhB)VKBp3,NIj22mVh)<ms1:!j-4Se*``VJWU%?M$i%+gHd&PEtg[Lj@6if$r]9H5Js04u3WDmTb0aFaJ=UFnbY2p=5_&'k+9.KJa]oF4'u`qaN'CeK\k.k)4GE&,/n3q);?0P*,X*Hg#SK%o&fK=`"WN1^^Kdt-6lpYSDKgDc:;:=mTRC_I\NQ=3ke7#'R%F9.9]J%]=WOY>*X]-E8/)kBjKMcr<!d@Sr^8O&r=EEj`7rH)]*_F%Kk;D[.MfG3d^:X1M2F*"3mb:5Y&s[$:%Rc.q*j_#"FC$mc1N[d49r4tr9a%565'4oX&eP>9E"6-L/>WblKm-aom'3T^*4'[/,n_j%T6msrTAI#;s)lb)5I:'X?1_JOHHHP4(R2P^>>t6kSbhZ%l0R3^h-O'JQttV@88d6r7[4r+@J2dcdn=-lU;GQ53.Mr(kNtGs]C_2N%J&%H`V)(t_r0O>_=!@LEX862[k\$Q^h;/"2Xo?(lM_4k-o&(;_eI*i+4ZZh]T:egjeP+V)<QXd7mu-"[L]9YGq>Xli[X\5PJ$:d/%05lL:p#Xm,G$[9I4.b'n4C:Ti'WuGPp&/g8?P.Uhf52r9^-&=:<OrZ1(B!V2BeC0XgBb^$gT^[V18KF!gV^"t6GG-`0LOI^W072B%5q*b`BL&J>&"r>I07H$rCL-qXGgl(JlhompJF"Y\[sRl%3kJK`Vqcc-pk+D!Dg11&io/r<FJ2"tOUTm'ETN^i6=!W#6mC[-&C/?-%mI"_OX(h!/(M=8&Xc_(rl]^)0*64EEah;^@hYlc7FcV!oG,KCP3n1BpmiP?Pd5]Rept*K-H.@*o9DIK*5?[_gVW?G'jo*9R*NH+=%)/3CS"A[;rs$G8lVPkW>V9E.@"rXS,%79:TZY&1fB'[b"s1GmWgmkaSg35c11jIL8=XY[.)Wo"a[WmM[YCW*PWQ?dK3cDDF-b$S-%q5X@o*G'beTF^3k9)X"I4k#VOff(N.(SKS:Y3\CINP#)Z7nMk)hV67u\$hp;ULK[_Q5.lqV'pW]:/>'\apV`l]L(S4]DK`^>=S%;%r$a_>]>Yo9[`k['.sZPghduN-m^a*GX(fSkfV75p?i7]&B'E<L;b[A][N)E]P($>lqidWgQa]3Ib,Cm=rk:IB^kgR)qV$q`Mk;@6%<EWK2\IPjZFu_Qk\_@@0lBRUE(0K=J>\NF[+B,HAlf@u<F]#H"YgC>kmP_E'Ed-V.mn$GMMh]HEVhBU]PKB&([5,c9-(Ka]6H,aH%G13r%3@=R;g*80K`Q6Wu]9/AjP6^$NlgH_q]Q0bKD?+&$\*e]MW\ntk>6&pP'N;jKW?)gpB/fiq<@W7fnEZgFpm2^?QJ9`tlg"ok%,K>"s2]M.>CYV`g'hMQY5^oh;=r&nVZ)$U^3DT8?D<3D*T6I?"QWG!IV:,6A=";!@Z;E(GKUYWU:sS&W;,UN=2Bmh/0Q/:N$XVZi%40a%A&<3JY@Em8R,\][B10PL&R!KGm?0eqqIfX>;Z7-C<=l!4mSr*p/do95q*SpG;[B`K2cJ=,LkR=`+$nuN@L%aWSgFgnn$PN-)%8u&4u6&SU)Q9/fQ?9[/7PfP"!b%7TX67cKH[[^X4/4N`@6HT9)]8)OM@nEf$T5oli@G04Wj0"*P_Hj#X$\G1h='6X-Hp1d"riU[;%W[ij0W7@N";YlVhUk;q5$VDu#5!-<h:j$n4pTO-B[a4BFci,@*=B+GL[TuAc;!-a-=s'FSNt5:UqW,Bf4NMOhI4(#PWt%q%g+"M^%<-r)G?+sl8YrKEbe#660PZ2EL]Y&8LDBBeaa&=jt?@h[31+72o3PW:HrOC;lC>KkL0sf[cQs#m@="%kMnNk!]r6-pVB0'c4"2J9C%_BW`CG$*,5aR,P'`CDP!aY(S]=#h>A*I5%m('A($e5USpc0lB]IXeTHD^Sagh>HqCYBZ?-S@+pDWZC*9eU#/F41j"]YV0VLBR`k&%E%uoPZ1c`04YYdJ''>+k>!UK;p'!A0.PHWNjN5;.*kAqt45Bsra<Hq1j\+LNQF-fo.1S_6he1inZ>C)I,+Z79L<;<gHNH2!W@Z\Y%5AFX\?FBPQ$;J]m,Vkp:QZ5'/;F9!OEO!Z]j5R`^O2'soI'WX;!C#fp8!=7BNX3Qa3)U<W;SUcE&[r>tnQ3=Q>?c*O$MC!#)G>Kj%0j)-[Qem-tFO$NH^8*t0PKbJibn&ZOm)@rHnE0?6\aSj.d3m7#[m&P/^0#*W(/Jg,Y4mF</q8BBrme(&>Oh+6P1Ygsa3PjZCA$,B%c*-$CoW.16(gWPUn$ftXmq7s[:Zn;ER5_;Kr;FJgDs?<"o'29Hj(`Z5_i'`/+3ri>rmdQbnKIff3cY2icfj`!hj^AsB8ucOm.'n<%d91[AGB@l3%:_]^Yi.I'd@%ripN>03Y6T"9Id6_lFSYThm./8RAbiOuYEroRNVRbe#QD,XhbaNrf8eI$5J!'#iKIFck"3oRhO0tC%^:&O2cuT%DZa_ade8Mtd2lbSV_u'(Br!3/1E=LeHY,[%3gTB&5p?1#9B05RPH%1%$qFZ`6/)9KGq!&t!C<ks"qX*J:AmqI.qg3e!%W6s)FdJV39BI2K9D"R,ceG.o!FYg5Kp@qLp>h&!"iqqq_5LV$h6I#@*#;a]OhS%$H[.X3B@</sYI.VblUX$HWoXpjEE;W<*lpjC,%S244Gn>inpEVY%N8B9<M([CHAhgEL^FCY6OR;#Xg(M\-QFjkh=1r4O@Y@m9=Cil[eH8ii-H1g*(!^?5E3nAE3$*:jWG%Y8.Z`=#F%B]GO"L#$j^Q>Z>!leDF'LOqu3Ne>%:TC\r->2<reB^Xp8_FC<r+1i3^NBSGTC:+jigA-`r6q>U]Uu.3;[O2h$77!]bYGmB?MiIX(%rMa]kc_'#q,DB1b<BUZ.s+HGOneuZ%\)/hT1`DD+K/cs_B_:d2.!bdZj2]r[Nbpn(n[*T3CG30ENVDsldI_<?SJuGDi^VP6?EF<h%fb6J+eXh"G9+sGDdHK`_:%2flhLS.kqeW%PXgd1uUPEoSR??(c;:'!(2U/,=qK^b.hRnp?)r2EZN15T8EGhQ?XtM\-UTcB8B"&_/%mUlnGrA*F"2ZGo%2nJAs2:pHH7e7OPFnrOi\Q(W?h)F<5mmW5=3r@3"P2BqoDZ&PjnanVPZrYM5FoUYo]<K]]ac#3VU.4$"TB;H*%o,=a]U"QiA:G:bZ9'uh3T)En5f]_e/O3Qd<7_a]'\!-8:e0raIAuoqF0!?&UDeF,14ZYV`/o:1J@VPCG?DFnh2Z(Mi^=HQ6TA]B*%0m<'UIOhVL<pT/.\8:feS'#Q9R:LWgUIK$AEAI6lOlf7DX[d<K_+&'!)L_?ho$>_;_+SJ674ZjNbei2pXDIMYR5U$+:W@#45JE)]%.!M!g`E&EnHuRZnIbDM+k;m2>gUS]@hQn59FQFZ-]k_Du)q6:=bN.AnL)!IRcUb5"4]tn?::%fqR2>DJ0A,K9B;8m`m)@rG-8bRF%e2.N7O?2JU^\bu[?!;L1a@u*l],,6ah!!0mZ^ICk=P2NGmRX4,$FR3Ls6;f'N4KD+Vc(.jr;H0MW-<]3TDtrV"e0*Y\1%3]"iTom%deoQrQN#j'ZhF=Q)ZSZf$[dE^1gbP]rS#BO5;,%A%nhB.Y=-L)?THC&mBGg?($Ej*VmtsB2<WfKeq]u,O.G*lWs:XpS\KZBFa!N"%7uMh53$2MAR4S1lE:ud$1sE-@q(h6B*_.INHRG`FFS>Gu?gt8PD<?=nmHjkC>KZi.B'`1>q=GqX<V5rgk>Sn!;Y9:8o6EIp<qP]r%kM*i9Bf0B@^OM65DngeG(B'[]7siRpU0h7ga5M#IIa-6lED&-c[tB:9:F8O$h0i5klfko]IX8A-3+Jku@f-,Vl[l=dm_mj1pTi`/%o-n\SHi%OVYJJWRa(N^?4r;J2gYNg=R!S^sIW["R-TBMh^)Cj)^0K`+Z^f?i\/p(d^]&)!Kc+*_S,Qf"@$BaqB9r#?Djg!tIHJk)%5d%I&FEb![B6m21E_4bfc9G"(XFFK4%Tblu++@Jn]_9!86e#7G=`0b3X=V\9ce.sGp\Hc@a5clpQH-ZF1'NNXTq1eoE5)-,na1uc%s5MrKGK(G,N^',)eUKA=J,/)G$?jhL>!%2JY`iP+XYG%Z`QfH]&[ZU1/oNZer'EL.0%25O$T75l*`02RNK1-5cPJK3G"t>uT\>!g%F(4HFp/q:2mj3s2bU$;bk>._1Rmp!Hf8Y++-s9,^Jl2DpVAe:#:/161Utquaqnt;up7Q(52G2]<V2oniZ(gsl28<#gn4R2b0YKD_%VU8T'Sm]qE$QDP%s1G;XMrI4d\*ji*qH/'FUf.sa)K2?FEEq#WqokM[lLUA&$a[,@oIif#$QZ:??g_'NEiepk/(NiZm;P)J(2bp%%H\G?:GPr+)m>3JHg-]oO@@;3sAhIh9c&R9&B(s6Frm)D8=GPSL8\MTWe+]87XPea!_gA3?SYp\a]bTQL1EIb'F\o9jIrI\<fh/Jb%i19;\.b]@;<$^LNWmqoLNP->4T%<"Q:(Ah7=o-@l`eD9:<lNe%p4bG0h.=s)f';fjZZ#8VDNl`MfWc:pd,7N2!puC_T)Wr<>0$XC%5qY0%j^"T)/7/`F27kcis,ln%o%\fbEQTBHVn?%h1G;6hG'36JG"0*)O8e_oZ[O?]O&chaj>V?7BWp=`j0\)6gGF39]@0F>.6gN#%'eC3ZZ^D0m=\DIi8S,5\&A&hgPP`AYrGX1.q'!`fc+N)nmsjJBHX1eiXhnU/"&.9og2lr#EL1)td.6OOWW>h<4gH-Yq-b*Z<Y^q,%hdS`I:Pg^qkO*<_TtE<^^<hAjgl^VRBC=?bmZ/-gmJL83L/#sr"B91r#9;IQG\1W8>uFVg>jO;=nnCG9/AlFNDRtno.?DW1,u*et%CX,BGlI2DAF`/N.mn,7*dPnV,Ap!^q19Ji'TKnq]gb6V[F'L8mSVr9:GtC#bP1`%@VrWidp&LAS7D?;#fQF+[+1>M\hKS;L7+s+q%8NPsYS,cj`c)g&"P6G4\ADR4X\@er!>HjXm+5(d[6bh5n5;g;7(JIge]0%OSAG9l:Y[>\:Q,XVcrmEgNGOP.1Yd,SFs)]g6<SX<G%dHOk!YH>rn?rRBu,-f')A$'(;1Re!maE#h4==RN\gD5G$k8WFAai*<Q[&9s8e51)KK\)Zo(T3I&8a^uD?2gA,cL6qa%K=E7Qf:c"%(Wo@VFQMg9Faf_*X!aa$`H^M;b>IKaN)`urb[`^M-c^R6M8;B&c*-L.`I=GDAUCOjASH_D?Y*KmO,6(+6^t?f?8pf$rE,Hb4L>tn%T%8*sd]]MF0Fs(kN8[AS>cYK[#=jJaW#+jrk@UD:=K?Y5');TT'2M^g.iL<K9gS0hjb'V=U$Tor49O7hV6LLtH)bh,]I2%6S!=Cn%QlG:Fl0(ocZS,C@K"3mZFQ:K/:/Nj6DG25(OaMKt]2II".I;lQ!lf]R@ntgZ*O41lZRb.l5&2#gr5faO%uY;[Q%ec]cR,Q"a`NW,%qI5JrADGkbS)7Gc"]!W@4X?F"$Ci%&\+XYTVa`8U5)M8>n#^JB7p20p.g\900Kp0TYa&Vs7J;0F#4Qu?.KcVlnKb[&*bHaFiRk\H%,5D;)cp_$W;Q\I1ZW+On\b[GGQ[c2O`^_ab]bAr"ar=7HI:JOT=)`0>l^r_UMl$j$dc2)rRB477Sg,aI-S)mL)kC42ju%#G66iV`%fg(+4aa:<I2V+'F_9AI4PrGm>m(?Y`MC$)VK'j\CmOhWZR[C$7ZpN&fo@dF&s7iI\4^@.+n=CnTS;^`Vinu65SmFc7qf`bZ<3,2a%Q:3kQh7@gFc]WPOM"*/W8+1M.Jo8<:X:M,BA+R:]?^&M;/5JX8SlMYS(3U`Sb-\Xb=0LOU/68UlI_"?2/(=I@h9qmnkOf$_kuA:4%B/SXqMQk'-iI8>p:(+r<LA#)6L8N;8Hf.Mn,?`u,7-Ct($)K;f+&,DBrWZ?r/,B$6)8LEN[-O6J>,@(t#eJfJ.FVjngrJ)>Mn4Mn%WMI^45g/1$jsZNEGm2R:$L[?M-LAQdhW[G"`E2?rhUoC'?.s!'Hqn8Oq-3HjWmq@2I(3lY-(\@6X12nCPCl]E=oG>a6$Egh16Ydt%3oBD"T%VtIP<DR5HKKPFr>3O<WiAof];TmN0f@L\D]X9_-O`Thb;,("r]$jX]==h?[(EPT-&4\[B7,$tSa1=qe?*g*AZ;;5*"<=C%@#?E/X_@scKaN]B"cg$(3*O_@<8hNfG?$Y,G7Qf:2CM)EFsU*G"HM'InqOCCnK>OV:=MR>S^@uHE&=Z8iZP4AZ!Qa1<:*EMfdkT/%?YJ$:s14\FTr9AH(U1U(\7@C,LI0S>iI%eo+p5O><^DXV]#-IeBU+;8IK6t]5A]F:+\NdCY*g<sQQP9(1>0>3IAj5[XhM;P)#I-S%p0*a+*8Xc$V/+nq1Tm/QC[.*4aOMA7[HC_NN4H=)VgCT*):U)G$.`$4oVd-VE`IE!<fA+NQ%gYr)`(W"GV[jWCmpU?\lWV@WG;'&%RDjq>eo89)7*/9YYk7grJ+@,YNXrRgd)9$&T1_$jFu&c'#Z;(GaduW->L*j)Lo;A-.&.CmHbXK5L^Q+Bl;-hR)D4_/Au$SZ`G0oD%#?sJ46:\aP<!o0O@2L]pr0'P8=g:8]RS'n0Mb`0F<5;'%U%kXmZGO;Gk585&pMm6sVOO<HiY`,Z@pHlCma(P;V,kC!%n^-Z9G'=c%ZVm\N;FJRfP((T5?uhSE%d,U!W?ZGX#I0MM\N2]$'22CMfA<A#okUqe4'K;1nk!DhO_Yp/'5`Ym<>$lDB/f'K@9M9fLj8`7ltI2a%EphUGa%CLa^9u;*$T@lr].Ea.VMN)A)8@J?Wn9%23EF\O1M;18GWO`fODDXuZ+TtAEP6jB9Xh4,-Vn%iXaaU2=j,!^/'jm3C46'C%d+N\0SJcP3p4gD(kfP^Fkd5XA3HX@#F9U?L4m12:P\/;,Cr$-nkR&5n)0CU;%[KI`Sj@"p"UE5E.rH%WkR+X"Hd&06c_*q7IfDEM%jV`/$O)MfR](-7jp5f]S6W]jFB:U8CFu:P[XQB\uPhBk.%k&e0IcosfnmIg,?..#L,"io_SP&-tBbs]FaJl!`(O>SdXJY[JmdjEE%l.qaE*R6dD>tfN`8lb%',Nq5LbYeY3]"'+O%5/I!;jj6JW^?MZ:7RTi=->M?FdUYa$TllrV]``ISXGPl_jmln?J)+BSu\$"9(SKD%.<?ML9%=4@BW\1/OFliQ[BK$+%ITfS6.X+k>f"ln_/4S,<c6=9Wq`W&BOAflRpj9bFc(jjA@H<i+C1/dMYtHD4h[6L<r'NWj'o=b%?IpY0K607qJ8*+3"Yl<3,t#VR/=k$^C=BE4T;jH+cZ&1+AX&"0ZT+#k/+Vb"pT])T.]8Z*N#du0E[.h=,akMghg0PL,G'hd@,%Fm%dd>k1QC>(cit-@hfsI5Z"".]_JiZcf`9M`F7'`Z[^q+-/`=G>[j#_Q<QUngNnTE<oVJW52W_9<.pk]e'Kh3s5<9[@s>$2:3]+6nN%R`2g7h.#;hal=mpT3#;_PK1-s2fN?>W^`kc*4]FiZJlPh9N=,hTVSkGq)5q2Ql+\=AY]2/RPA`b),!&?q236mW70);DRt-dD1oT0%TO;\]:YJg<]kb&];>*qB._7>Sg=r>gk2Xe4JW2gp.6T5)h;(\I0$'bjH<OW@Xa:e@m;s%.a\!Ao#YO/qq6O@..!%/,-XX5Y;jcRq%Fh;gfN,1V++4JV#20QQ3-1V$@jS.XCaD-hd]5hV+[?],ah/D\Q%m?;JKp3"_ZR<4N+6dcg/rsSH(2$$8F73)Ta*qq9B?0$`4mfD5%<L]mKpJ-H6C\:<ke=1f_cuW3O)cuB?.-XWb8&hk0.ao\fW>CUhH%oU#*gr0DFjGCdRA[D^k/B^=,D.F:h4gRCH":f!=7F:QMc0/<%/5/5FfH\;Jn^g,9jL]\#KErb=RQoK;iurIjIe.l)Nsr1:`ZnuaN:`?hf&[H*j,qI.hg[ctNsoX`.3Vk5dG6t9*+u09E__HZ:+ONZ%S]^O%G'P./g!S6C=JRKd%t8HLd_bm-[n)daL5*1E(DWj.f'9q.Fgh1[2_7D>0Y")jUlTYO/nF':[Cj(Wmg\SF(SeXS+lko>XalUa%UBe7YVN?`Qq(4DEFi@,&Y.Id4gS>>qH/qBe,SdO9`)'1T*UF9t^:pcGE4'"]lMAe]b;jp'b(cGtf6;m_:\erU&ZS4BLDr?#[7WVf%j_Vbao&2,`AnAmi4!2b*\barkW^b8lbiZgr<`78C)O9pQC:P4%fl\/h+&5b?c2k_>\=W<N\t&WNq-jG!'bkSsA%)!J.`XqDAR3_u%1D<<'60I-=JX$tBkk'u,[9Mn6W]X?sYAtn!pNe;pCJfPt9D,+*kC,pdYJg1$agKa`?)5#s`CfqH^_P9(17OB<er/#1D7K:^V0i?F%"^f&#cmH,o3r@.&lB7#JrVVpIP:-?/g,VURb%,RpHF"E/f/+kZTm(>n;[/"s)_feufJZ^:aA"Y8h&THj-!RtYXrFC=\nYTNfJA<9%n$li(gMKl#d1%eDN"8SDMcDX69+>X[62H\4^<df@q_ZNUe5+!*8GtB8N7>%\L6@ZK`o`#=OUCai+X7_;)+I(Feh`8D<6S^MFq&PB%p0)dYN.%7@.b[$p.D$%M>91P.M!7W9FK9\pD-/Y1/hP$LZZQIGKhHb_0n8S/Ur&DR"$a.l\4S-*"/j#hG%G;/afn\%XB'YYVS9N=%\6>.:9DV;8ZP5d4?40cNdrpRrf#*L:/<LIL(CC\==*KqC$*iO_X^Y6E<q`Hhpr@Cs/)PT&!uWV9W*lc.dU<WlQONV6\A0P0SHh,7%[qV,`cATno^-q#s#`$:O[%L?c]=rX8X-:E:c?Wco]012gZX4-5r9tuK(W1Ge6!nAecGakFUXRuD`9?RQLJO\Oqa\9nB_]Wql&W#7%r7;FE>8a!d4q>q33k1'C3-oRgATq:J[A9#B-;0NXG30flN`FYuI#G<on`7uE!&^>62L5/[_c9"Zg!nWZkMhNadW.R9m'[nJ.qgaZ%:SgKkPMM6k1[I"hK=nJ3[u`OPLUtlL/lp*;D9k_eV/r^n.:DUOI]sa8,eH4OhKrJRB^fg6jeqA?U's-`n?=IsmAEn8W3cJ?ZT,k*%IPnli>+B#F;UXc`ZV]:fX8VY_Gc">"_f#,4Gdpg3_6[\th0PMm;r"Nse3*\&Xa^3An[uN1/GF&[U.Vu$G:uG7OcT_m>E?g+Fr!)u%\O-s/)]-5ZS]lo=o"3D_LYQJufU\p!feE6/5F&pWIHJr4(V6.m?BY`b=M69#Wjt`gpnbXSE)OX^n&[:==2T>U0$h./pekFbQfKVK%h8EE60io[iU31m(,SScgi$3:94Jf'`mE,csaAj9gqEj85Hf-]2q'G(EL5-RgM7oZqSa%+e=eSL,/\A\<=+-[/rn"e8l'E^f_d3/\%VT\;!Q'",'Cq>39)fdiBSi0dM(2(D8FEp7>\5d%sCq@8a]#+']^9d'Mb'`P;S'G1am;3o_CRq(lQY1\JPWYaX\unoW6cl2UP/tPc%VQ8^a*^#oE0:.^=1=U-OP1Z?LB%(mcchU%ESp4VqFF!FEhlAH<Cq;a[RX6MF:c;UZ9/;jZnr=2/Rk?@\NjCa#R8'$WIVDUH0XBs6%Ep8HfrTc\;Y4!%\T!IT1jAug7Rk?@\DX\P0nodcH1KHN*/q:lqSP>GpN5D*7R+ZS,("DNdcDJe>gVu<9XDGJ\>e6)f.#P%gP"h9E%6(5\",F^;=QS/0tj5AU4H+A$r]g%`t]"I[)Jm2mqVkZ0Q0QY-?H9hFAdq-+d%)C^T;UYj.6G"IfB6#k2`CNMS<D92=HD[u%a!b$$%f]r02AS1ds?TXITe`CN^"2.d&pHVm3G8%R&='(]oAt=isFaLO%niZlnMXN/Vl4ac2q`D/cQV-6h.m-g5[7_Lq;>pi<eTiY$bdk3Q%Q-<1Yf4T0:eB)-l;dgb!1OZlkpE[;<2ti?UIEP_\Saf3MggGi^h";?jeb:kD3Vb>!&)HmmO-giSI-,;XhaR3NmPo!Tb<pIU3+M`O%]7K"+.m7rTX-@$PkVIGX.T=rSmODOT>Pu]NQBEae+nkiX>n?\HJQs&\P8GkHZ9>QWMu2m8Al2F.BSD-5L%dsUjk6dNMpX-@EKknm%/Ck`k]LkS5Xa;8J^`iLIgRYXU^PV3HPud8q%%NleceZc.fM"c^A>c,[Dq"A4kYdkt`Q<,f;eNcjG55:uE8T&>V"5*I)N(j##E;[&%bf>8n*sUSg-a@H(]L"cpk1&O)5=%F7^[91OFRHnmhF[)4TuiIA&r2ZQ.kM/$2,&0=f)EDIEgBZfmHaM#;_>bi]7u*+9c#Rk_NuSV%,PQA".nujW7a@geHd0Q,mroi;,1^fZ6Xf];b<bSs^kAfJ]jS?/bSL]^qRdpnZhO4_#(EM>SmBN4AE`]G+fqU97#&uG+K1l?jE&UW%DpRj\Ss$"Z;R*70mb8:28;[<$`sFE_?Cfg^YX.l;j@cS.Dqt#QfN"Ti>;7C'[p^@3g_IP-/`4&W:ishrmKV!bXRa56V3g`Wc6lLC%jUJj394,3pnYNl^?b":)AL@)i>u-_g+eUlCJmPtQI.)2+JJJrq@[<^;4pK/8Q]uTek&e4Z'J$5K$X9Xn-pKpqjpu:>^hdB=k$I\M%q:KIlXnMF!lPVgip/Au</q,1QHTfn4W@I%rT1\R+lRdr"Dk>/Wf*mu&SeG;66?*fgjT;OC2EYlBk#_8<`[!@WH;.kC)(Wo:4"YX5%ojkM[N;]af/m'86$i>'HBie>[K^5<*,c3o?o!h]a*kLnfVM3+rak7lKhcl*kFK%*RaguE'@ZKbga,)<TV2A]`HB.=^_>.RQQ#q;4%0)+22_;ah0K=#*i#L.7Bb"Ak79'J%cEa2Dp]g)6n4Ce?$-TbE#\<4lOkTe.@YZ0[pZCWRhWZjmm$O>dE2u@eRG]TA/Sm6n[]@CpD%T#`1jf?#2up3jmZ]H!J&CV7Zo^(nfXCO"+bM.Inrc#cb\/!ZRSC5[D]hOj%VfZ)^#Uu7ZQZ)>!U@2`J<nU"ckVN(4(GL,*;`@oMJ%hU[=%8S*a,0$F4j/IEG>epk?g/SqdpIk"bHT,$JeSX7%-[_-B5RSHRmO8leqo&4OhVC$QXc]];2ekA9_<,iNl9^do!([#3!f+Y&1%pFdM9o&7SO.S@ST<gF9Jp/?9X-MMFgpA9;IUD"H-dBB8i]LH>)[5p/!S1#@mX1bu%>1i'&bAVGD;ep]AW93>OEZ&WbWKkfm2\eq[%*Bi97FtFMjs#F7EGaBj,:D6VPK3sf0UmT*5SZf4P8uM7$9\slIcLo4YL)nt101OG+qME\TC<gP?QdraQao5U$gR2.sE&$I#8>Zc;%r\(=cKiSq4$.Rf'4c92M>HO7L``)hIQIQ>9<JBkrN5bO&[C=M__Kea(\H?E>9c"^L]k4*`H1.DiT(8m*?QW>"6_%3Api>89.?5H#%96'8H8di40R)Sm&CH-Xj0!-tE$tm=;.h6CG)0VRuZ"\A=e]FtSep?mA(VcBD2MCC0%qi4e5P:Y.[.\XWgm5+pWZ&Zg6TO6gSEi,0%-C*q`n(6jH5DE<kI2uIgUM_anE)=k9joB!Hm-KNKXYqms?J/HILKQ-de#MUR]2*-hS)6Ztg!6SoVjeX7$AUWE+.eI>lA_'QWE/iE%)h!>:??VTT(Gnfda^t5^>]q!Wb#NhM*%(Wc9\.&4GGt7jdG&\[3U?'8[]Xoq]uX5+'sPkE#<h0NSb@*M61ITfA!ntBW/[^dP]h8:%,m$\q>`oG]k4ehNEg!;A^<uW(S'%_#Xh6K]N+LC(A_jZ(m&ET#QW2Q/'qItq_KE];]$l&W5uu(gWEr`:PKTP0XQt3o^!'SM6<Zmj%E1qGWS-,->Z0KLVWfdI_migpG$a=@U?l*[m9,=1gR.;64?MqqD^Sn%Z\Z[R"<$+_Q!'=OB/"2Yf?I[H7U4$SR>(WD(#I#GrVJnR#%Gu9V^J)=CZ3<RDu)_/:YX(27nBI8(OUI'A[PBcR5*p#12ZMi$<q9$?h_g@WOcjMe^8,6nbR7<NJ_G^'&o-EjE4Na">0BmC<b#dOS%[37ZTf-LWM8<<>hqj"2m"$F_mma=PlmU`!fP5E][27V^Q^N(j6_VJ%RhY$3+aYf$$rA^!VG]uO:^['K]Zu)H(qN\h\f@ShT3Ucg0%%k-<?g\\U3\]Zgo]:nS8rQ<#O\jd02I+PPa<m'Ef"24#%Wj$CPj*`Y0f<:Z>WN(MVriTUR4B!`\HFa'"rR+'V531:Mh_Oq3^N01p%H_$k&GQ%*<mY2:HRX*MgI,gOS<t=?^&"SnD[.L-1=8f_F?Wlc%^[bZ34Y(B2k5d>V%J9V%?XCL+Zl:-Wj5d_u_d!r5j/\[X>lLb\%OP]$`P5JJY4h`Q;qN]YVF%-@_f.YsVCj',K\*X'!5J;,Y?hMV!6.GA8Ic]fCllR2E>sCu*j\2LSQU0O%.t?)FAIK%EY+J:Nb#@-n%a@bbRjubdN?aoD#?,,r3rJ%QNl!;%RVq$F7lW7DNH&ln5]SGKJrH`sSYFikGZe6=hn+u^LpL%lNcG--dpUl:P=8e$DQepTl)a#XQ%b.E,alFbCZ)Xq%IFMG-4@NX<Km^mq]CZGB+lW6p+rnYB@X8T2.GqBcfj6L=sAniJ-lf%rGRS6WWWaB*llK#VD2cKRQ?g#O%BsL1d%]7)nUV%)bd@d@%/U<NI?ht8MORC_8/<:O8/9(2:MaMY.NNa@i,X4R+@qX\*<]Z2u#SQ7bSqRL<uYQ&hFE__lLgn!<f]7/jj/`hO*%oNf5ES>R>U2W22rR6bH/p7-K4qKgbsgha/'l!;'pdnFPs#("lS[?;Q6qN]a!"cOu+?,(i`#CCgLY?Wem.r"KsrQ5hldl,5<%c^j0%`R7idaKcZ"]7/ih2Pc<CiEa4H"#J0(*Ql!CMl!WRV9b>$J(LmFdogd697QF,'mBu%ndAh%mJYGaMiMjJ_D6+'kq9;Qk]2NZo4)]I%53po+/A%>!0oAqI;;cjLD)"ITpDG%g/C)OuYm8bDnpTZOSchY!cm_d=A%*t/5#l1bZf?t/<bq6CjidITkHA6LpsZB-YrK0a7512<%F*Tt;S?tcO?Y>sjU+9o!ib7r8B]I)#=#8/<s!0DHT7&\hq071-kH(faSp/b7cRh-Bg[A47ot/DEZgg5IF.-<OO.GFXO.X_0l\f,q%mMdg!5&OZo4+$@%5Fd/b!I*Z)d>LNXe(jquo6GLtb5$3Ap<GZZ3r%YRJ++MLn(tm6oDQqpqc9c*2W&8!]mJ=V'Y!tAa5_EM4V9hG%L#BiNAp-qn?(PuKgO,LgGe*kAo?YhKVtG\5-h4NYd/*#h],RrGrjo+jN@"17-c`F:l<A`.o\Jd#K@T/6.MZppEVA7=qjj%+e)"E5%J,EDmSm7cf[W@eY60,U6JQkGog20M3D2umn+8XP%ORaF.L#mp.>4>r]*re4WT-$e8>&WS9$:fuUpeqDRcb51%cMI,*ZEsPjm'X1i%md3_qr$X\Hgso9ThVt08R2>DJ0@'LlnL3NF^3A0%ULSW4c^B9,0q6ijB)AO>=.@P`DiDH])OcdPH7!SgSrQQ/J*W0@btm\9`pN'T%PLXo,FEZs29>k.tcFb6G>H;8nm9BL&Blrd.G<S(bk$W7PqTh-[p#Jn"Bpt[?FD$\R4qZ6oin;K9ah5Dd*P[!Q*,X*_XKT0Q@eeRC%]pScoEtSDZs$uq]Sb]=k#(>l%8T#RhB<j6fIj.g]PlLT.0b*#V:2tVF-N;6IT/6&aKul@QF&)_foOS3A"Wl7?Y5T^!9!IEi]")Ub%?Yt;hoF8=G6R"V'(epD?lk(e_R'D*"H*[!-rNJ%iIW1W<mk)otfZN4)]_MkUYFi#J2t)G!i<U4#IdP?t]U1UEh=AS.XS%4ro#=^_%AEE/7LpF3?:s\p$qlTho&UsR!kYH,2D\W3+H"lP--5@,soiWh$%6F4%13!t<KJDuEAdn%i*A$R&]6X$"c]YC-o)sS,WcjgIB7B$%%2udLab(Hl^_XrmR+3.`$TRk+B1On%6'D#M;nf8K0r&hGLJ+EO%_U$tn^%LQ(rbm^X<BB9^_0apUbr[V#Ru--o-.QTWXjnq$X#MY1%47tX`T>V]70./A9Y&9fRB.@>;#=;;Y7sAQf[f3d#\[f-0:0es&fBPb=;!>jLPAjtEg?H40S?,k\i91sUgmb2n!<5*!`+a:.$NB]e%YkC/.HK6\*>;!#2l%qq1dU!)+"'9<4#P;O_!51UD?i\OC?a&ua9<e/I&'Y$`J!\I]ZL?u%5K0<j8p^VAZlI)tMeUn'+Dc8"C%Re;%H]@cdo=L`J6WJA(T@QcgO/K^.j0imaG+RcM2D<cc(ui1g/U+Z@Rs.rs^<FBQIPIm("8>!X$\5?9:d$gH>8mJsV=inWI6QOK!h;Og%+-M>P%G8#d,V&<nkBq;j61*\9)TJRT4'Hm3Ya;[aA)jLdI/!fZHGa2'hqFu0bL^75lXKR:`E@Wfr6FQf#@MlLdK*8XTFW0+Hoj]r%Q9O7R/Hn"6Za>WDmS12=O`QWWd:ib1UV;gN1%SjumG'_*hlaCk0@$/dFVn"GSo:q97E+)JO/K]h^^.j@IG^tQ^3<QGGe3JOKO=Yu%O#K<%m(Q4`G7Zh3ip]Dd%.1aX"UIZ,ro&lC7<#`-Xh`]f@Og#1D[K-[&`s3&88c07isBqpAiW0bSJ3#5596Qa.>aVnR?lLUfF4oi%0XJ3;Y_d.<Ssjl!I2Fc]rQ"B"EMacu4okjIZd*b_TF@V<VC%YD>[,?$4]]b87BEqAoq_rh$?It7?9#rBNj3bIR(aGI;QWSOrZq=o%oeuR?@eg-P:(1J]+ghkXF.VjQ)X=;KL[kV8naZKLcPfXYq<4C62dc=/g$d.Ke[(]XISG<+H)F9$>7_Z8R3!cMmSO]k8UCC&k(D*C%V@N*NnXN[Q>n#(pkOlDek@WgBLdp>iGY9,#S>lsZ=U&U/o80Q_q*S6Rc*$'mh4)&,XL"^s503K:$[]]ii,*^koRZRqp!WP6"oCGT%V\7!I3XgJ)U9f_q);;Qt]TWaU0AL*cgh(=YUSg'#on=Pr1?D1?Tp:WV]28u<Th3P_>hqQn:#2\i9qbs_OK7iOIp@Gp]u>YH!DnpA%V$)'`kkD'Hj6[:)p&)!AkBp`MWTSb"3NpshlM4dacI&DS;U>B#E__'V><W!:b'C+\UIS,('J&AFkiEK+Vc9A05u_m_A#PXlAX/d.%Qt<U7Zr`M*r;&m3#^S)k^lu%T[%1i/&_L\\0+Cl[;369Ej0/&Xg%Yo(7P1oP"Z&78c\m/F1EnCbq>IHLGLOFi+17SEcI(H7\D'3"%@_CUX;-iNVP$>`QqbhC%nDi`o=04VMeRqc1@Wp`I"tjgiR9:<3aTHGSm26jYcJX`?jrH*eO.m$$CUWc!k/D"`F63;LX)m?qf;oh8%4k]\.$GE"Y>48cLBT=sG]"dcU#1\Ddb$3Ks^PfMPn[sV>q'3.8*;[_RLWA_=f"9Mpccb(*g"Nddr2VCmp284Felrq,+#!WbY^1Ne%G]Rm%0X<Afs(ZahCF]lq0@'"201KPPDadk/cBNh(>E6BVr#FR@IQmLSr@[s-3Tlsi]9D!/li#_=bMV3iJ+[RM<d]8&,kg9Knajf/%>((O)oBS?0\K(W"C$a/B3\7K682dV/a$73r=oI;!/mA*6l+7W'+9/!(CD/igp!MIQo.QlFmeZA8jCT@NK"rOF;f!VQ]q!15NCu*L%"@u/`@TZu_>lD<aEBsJ/q6ohP+FLeA5":RSQh0V9B=7S^14HX;p?ADto^$YjFqI2lnFb=D3-n3XD9Pp>d2"N>&RL99GbeC;c)orX%RdRqCl$(sFjs%QjZkscT.\;-W6p9u5611nK0qnRm-:sns]@km`>PDY\d\"<:^U2'[<1g;='+:L72BA9O-[obiRAKcorBl>7ch%`h%p((mW:b1;lp.tE55P6tPqI*n0%nbE^dl+WnH)c)2XSp%4s'5TN^fJ7r##"N`_n9W'DB/nu>J]'7F6Nf+q;/:Oo]HY.m/'p<EqUb^%OGX1nf"<*Nk$F^Ko7!9iF-'%-93]Jahofc\hX==LSgAhDO'=1*h5NCV=i89?gNTsqnsQBM&'NRaT@9uec@.TO\$nhN*U?-d[[$>)%-[k9DM18ZOV`*/!Qe.U+?`gELpWXLd<sB0s:G+Q>I?&fkg3n?h\b>iHa2(UZ6bi&ua.nu!`Z-%F>!i$=(,PU5V+;9C-YA_5lMD=W%ZCg8*q[G_Th5B-aFS:np@cJ+^G4+j,*rdbX/*7K[F4g%?[I*Xils\X%I!^&r\b9b5c0OJjldcP"J8hhq?X@dl+$6sFjstK,:ItHU%<BNQNO;c-aS_Sc$=0/.EnL3^nQX`*Q8ZdQKJC`CSU929*KiFKBIu;5)g=M\dkJE2KSSZRi.10GKisKW]k[YO:PT&WG!@,@1)+'ha%Ks.$L5>WWre-beuSN;T6a+)%/F8K83hJ"G1<pG!pDTgim]-eN0pD`h_s7p,1H%_WH':`qnj`#b^M!sLgAd+*JGJkAsp^TH&iK[b(%I7m2T1J$T^&c((a,MlTjk/l=STUdS$1KH/S'AIT:?fiormVqMT9X]'Y4.VD&l&CG4q<CG[O7&mod0K#hRX8OiTI,ji0BI`la%,I=%:KEGgX2BY!4E"4BedjZl3K#,S3pOd>%OXgpc!N*kXV$94?d:8T&kslms,Y#,>P"3MDJ-U0c_#\7hkdfhs)pImqmK9f=n#G))T]^8%I5.Q^%6O"%fZ0i>lr5ha&m^=3"$3/\;72l?F4'5PHsajJ<8]/!Re<c+=^EAPik'=nW&tIsISHCtq=#+%]t_C)dZNN=qec(r)MM`V%I^LBo'"uuMlU'7W8+!?+j&bQi;$^e,FG2p.l6TGdZ'iH)YV8(!TYL*=8n5$h<!&'@<^GpI3E8<dmOd,t*A)c\dU\.tO-TQ8V&K(2%G96Itq><qc<O5fqI`9FY-c_C=V\4kQK1O(\2E$mr;`IR&XE#F'VGrn2Md"r$XSZp;^WVgN:lO5l6a9(p%]khoGk8\NP(R>>%X7oH%8m\P;g[ss6jKpOX)h2!:Vg"DuhY^rMgqFNrn#>AND>`k$jKpN]rP,7nUO3Bt.uj]OPu]jm`>A4P4=[IP:s,1q"!*Y-3%.4e4Q'*$%s';]hX4>VlF1c[CDYnisof=5-(CuT$=<KS0^A)u!gH>;pU/_jOr4`a>0E*n&7YD_A\3U+E"Ges3CQh_@6qiRsDeo%+q,a\Re]Y:S%bIcMmeitAe#T^QlmVT(d/<"Q$@jq4jA.j4K*(+H8BaUD*a3_`aRPXLArpSe&[Fg%[[VCh=+0^7QO4Wl^hZ3V%`#j7\o&Z>sEfS+'%eE3RubJV'Me7-a")IXIl+)@'YVadQN&mbjY7<UDBW3VJl5;eK`+L$#$LKr&=6r=Z9Q_'D:ODBj"$.0<E'*=snbCRl][lf2Ufu1)J%-YVXj/K'tH)EIQq%DJl'%G0X.D8<_ha`/X[bYXC[\1uJ;peB"USOOI6Ot5bM5]]bY0>[iXrFmlt55kSH48i:!G!ui>!J5?bH("ie%#oemH6?*%>o6bB2#o^N2Hjqq6nf(.5M@nHULqrUO&F`rF6brFYpqcJ=NoMH)3.mg@N?km(VL_.j#U?8QX*,FWOG#%g=pa-i"X+G3%/ceQ'\H[Ru#neY+7U:,R.+D)B5U(_inIet^f9D#a,T77,$l?O6c203H!)QDB71oEj#->'Ya<$hKW\tDf&AYZ2,iQ]CdKpQt2RW_R%)@6N(5X`Kt"'7k7']]BNI]V6NGB5A\5=6\35oL(L_S_s9#_Bbtln0bQ%caXf+WuSCGd85W?tfeIPc>OM3:]O\e+2r`h)u(3rjmP'%&2XG6]Jp+e?pbh&6u&=M6ZR@$(gu5)plbrr\fo#^U!'Un8?c/JXH")%&TolR!*T[+5Q`^r_Jd5q\/K*#aK21gj>8"kG`a[1#ur?J%m+Ns=6D-OrZ<,J+jLVnC@=W,-5l*k#]YH^I"P?KoI&dLH&c!L@d>;*IcqC>]HaHPcM`_qui^W8744D[@7#`JS1(Nc/W"B2,&NKMU%[1TK0TN@m[L`6=MZrRi!1_iVKG"p5AFd4JkVcbH'1P,I'MTIAVO$J/fj,O8H3cW57<'hXBcqr(5!^uZl6P3!QE('pR+<oID^_AmI%-d'D:^n6`&!%"2`-_;8d`Q7@..cEfuCZ>3]$f?NC!g<(:7su$V&S\1X+;]\s_K2D7bX)g+P"$&i>S:j(G-HHkkU/Or^5F3I?K;ID%6c[4g_,:JX#hWSL2DS!.Xq^rd%Y#ZjN+IN(q>?3SbCBS1@l&9&kF"KH#W)tj)oP;K!qq=@o+^cF!XV=+Q:)k3/RqL-ljj[0)et$l%(idG]70!TX$4%cr,8rl7k`:,D3XC!P1(+3t?Q^I2QTkgd<2LqV+%;b7BW,W40]t0-1,il+/i'draF"888"I(#d!Mi(J4pD7l;8*!%O+;ar!QH20(.'G?Bf]A;,*3odBY](Q>QaI8b>/]=JRA28@PechIN\D1TE=>b'7$kr'Y"-2,)TAX5&MG"\+0q).s+/H\X1\#:i.>5%'9NEjG5*5)e.$i-dLB\/D`&^'mkZb8$>S9+C`hQ$jIX;0)N)'>YRJQ0V;*3=5V[?jjoLd9[rDgC*,!)6mKPr;"2>%/7_m<31`o1A%c;]rp!Um-5!Kr%`KfHoUqbZYd:sm`r$OS-<-%`m_/dT^IB]Gan:k5rT'\"s+bQDtr<a-6[N=?bgM]4r!qtZ>I3FJ[-"5osl,"2+G%[tueiO]!K[#SUSKJPCdtGd0tr&hl^%!Lj?PUkfQ^2mS5NrcU\u#ba&ZCJc8QbnJ9B#b?_[T;"[i?]q-N'O6)td325@9nm]BCbjM%%VE)$e\WHg;6]i?9WO`^=paj9P+SK=!)5*Dp"@2F$Zf0-t^`te6\HkLOj"cX6M,n'S2S_+"5=3Gq>6u-i$\7_VMqnHm4)&jG:ls>r%(A\CaB!GP?68-T$@?<J)RbbhK3$-J+,W%A7(;%g(H?p+s$#L3ED;55fF%np6im*91i(&WXi1:1Z:*Cb1OM:7'+>98<f_6TpM!BLL%3&H\H`$dfXJR"QX.O%q]/g13DP2VJ[Rj^]6)DXHFk!S3r".9\)rtb'6#h1)WMuiD\O/XNOM[I]^(\o=meqaP4`_Ma@KNb0EAR+H/%TcsU.KZT8VP$G5S^*aj9!NMD#KIcF$$RU#MJj@ihIN@/S0FH]-;F_j[R7-ufVZq]K#a0J/>Fj/3U_.'5A.T$bTQjSG"9]a`.8k3>%m^>*GJM_u^Weqe'o^X-rT`_tC.FAS63]R"[%tk`3&7QjiJ9Hjg#]X=!(iFj=7pq.b>U"1j__`+$k"C/UOH1`FCmZ!e7i<06>W@j5%9,^5Bc`#kLZ0%1]Y<Xlh[MaC%l8ZFbJQ<bO9Qh8\:B^)IP#T6\7*>V(!'(5^%333Y2n^FFa_*N2]mio1`i,XVD;stP,DT9'QZjq3%7Z"5d,2f3k$(M-AkQh60644WW]Mg[!"Y?&M&s<6f9#)iBJ9E^L&J890,_CdiC=XYS"j#[G+i&dp7=Z1VeANG#aH-n55nXu!L3044%KKC=`\;R/I"!CYVZmd]tYg84*H`.76eet`K!$Lp4%'(i`6ikP=Js1=H;bi8OC4iqVmR6F.YTY^0!ZsA#dQ8"tJCW[B-U+Oi!.\BO%633%_KE0MQE)NP&ih7KTBodpRK(KSj4!McJ*N+`a[mlbIpDPe#"tCJ#A+C`uLJkZMLku]X5gQ2?o0#<K+D0l4pCc,;^)mo!6)=bb%-F\l\#7UYhl20`bL7f0dT+N4'#Z),u/D*_UPG/^_Pqc"u\-Ksn.LuVm#$>S'P3*3>%Pg7U&meM"<TNIDf:="P?0+nr$!7Y!/Jrm@%81UpRU$KV:+fpDE)&6\=7KZ68Lk&!aXH\\E`%ahM/K>@C=F4K8#XFc%7M[0jqkH.T5b?KJPX%$dkr":M`61TnB4-AtNh:lMecJhV%ci?df,8pR_eO.u`&L#`QV.`6s7V"o^!OQN>O<k,4!fPl/5n7*)Q=s6Z,oRMo73aF[lhO",+qTI2/K+WkXkY_,&V/AC5sTHf^$U3/%&7Lq]$OgRS*BLUg>f?!HK\&BsOU>uMJ@'PQ)%h\'7p7_N,V=<k)\IT0B4Rb=/D6sE/K9+]Iqd<oUWQ/oR1bJco6sn#!^t2'P)M(=%cOlIRPT$hZ)IXZgZ9k@#9OM.2cOu4P9,bp>hP?HFoYJ<W7#K3OD[;5RM^k_LInS7T8je%op8n=KBa"G_QP3&J6\ZN[!ot9E#FZGg%Aa#h-&oB;<hkAu"'?<JU9h9PK'asY23l]#d'<q<TTS&%9'V,L$O[DNm+43VNb9jDP!j6JR@(QI@-`6m\Jog+JE#?VP`WRkN"<?tk%J`Z8&2W2,@XM-t')&MZX?h$-a$?7Vd6$oTi`P@aMhaA*=`,c#FTe[[I\&;irZhC@dUl"\5Z'u"Nnn;2><XL&f2%9PuQp+u0V_2M:%A'2`PTN^-,jt]iSFl\62mtF;YIt8-'>s\pY43CR[4JIl:#78P0jJS.4`WFb3,`;\dE?_##<Pmf_HpNX/U^kt^K-6;?$,,q%XHNdB%56Hs=G_4[=(Ib;&k#i!11(@4qf$\%P877Z]&SMB"0B@/!3.;Q/j9Pbd6lrL"bUu<fi"G'a)1NnTfOTRMf`Q3pKE@G69IM<JOHbjZ%p`"76"1`u%i._l2-m*[Fd1R"da0#Kgc-aGJVAN#\Y'C^#"c@JY+.BmcF%2@(Q\g9rYa0qK-"93]rT!]gM+Ob@4[Gj'd[aej#f9R0%?i`Qg8sSq2&l5O"03uK<e\N>i9+dg"-qk6e43p7MA.^Jg4f/W\ZFEm7/CdJ,U(!h$Kc`Z`e#k)$)4;.*hi\B\\s>\troUNnjbj0_%(27+i6D<e)66N^b;$t[a-j<_e-j*%JPg=5%m>JirrNnp++Vkg@)26nSG\`97?cj1=j7D*Rpn@`o!nT3ejdatlP+4L9^X8.oMprs3%6KUWHDGcX/+<l!XK7nNBG"*Y5H7<J@5^qcuc6resgDOQ&m>Or)[dOp'SP]ZG[dP;hR'Zk\N5FF2Ol_NgJ.3%RN5EpBak2h6$DGE3%rSshdhf;2cRBa,p/?.C9^dEP&fWkMr3M`09>;e`F*tPI&=93qX)]2cpJUmZ.dZub@Z=OIhD-<llr#jFR`Fe31:pqo?*rG)q/IR(^%9dR5Z".Z@39at)iHG@>\8U\j;oS*epjj'!s/-)@kKcm@"#iJ">A]k,h`MD]i>8D`KTeb&^%FD_=a7RB=%:"%mTInaqbmMck5os8-%Q8'>/P[GpeNEH7W"XbT>!%nNogR8;e'.h=/KE4?s%bd?T+@P>6Sja*V.0Dp,HoE-&ZNql[:5$&f"$C[8A"'OQ!"Be=J19kE^f,Br%e^c;N%G$6<AdtE8=T_62(@+ClU9%MqRg_Mkc),/[)m_6m8`I=i0aeQ')_GP8l&(KN[4RmHcJDM4@^o6"8O5aE7S4h\.=qO#i5VQF%nL8%"8e):Q,0TD54p#Sf[S;FuMLb=K9:[aB=\2T.8e%Ijg*?f,'BGA1@_S"O=VroZi\;][6f,m?qF30D-bRVijl;@lXX:iWKo@9_%K,VkpH*KlE&-rDL;C/\N)F.V\7rmBhJpcX$TJ^'1&BpNb9iK#UE92e)Cms^+k^_p#8%&koXJ+u%S*kn+br!Fr:ZPoP,PdH<ZGFec%<?U<a!+<5EJ23N`VJqSBAE8s#5+GkKbGQK@@4:?.+P4"3&d(6dA[1A1'a$r;Hn%PIDeJ^%O1#5CL2&"8Cm-53n;.UY`*0-SLq3;g%!<h\A^<7Tej=-!L1pI>UaLT@0a%^nYX-($t`P60p+#QLkXI,E[\V,\G08VtXnWF=Aq/lIk;&R*$?l.:k#T_#l'-mY5R@m4beR;Dc%&h'1n7!4pRGa9:W5n9j?_pKEGjG"hn:a7>3DA#?'<>il%Ll@l1oM#B`FG&.>$OM:f9Z'^O/I7#_O5D4!6%g<*37>?q1`UPAD1F?,%*7"\Bb8mAl>5Xj:'f?o8_Er?c,mM/'csUBSQRf%66'fhd6/#rRJE"`<ZU'+a)XXj;;/R\sphW:(<Wc"`"b:Cp9=S@GAScl@#Qs>A%%oMf:"3a8Kgppht$::d-!b(Fu*h*^PLnE<@)h_<]8WO;\0o'")[9EZta$rAgUdBS#CaBOQhIDiVe,bof:S;aeL(5:X#1<LiWpu%&%:3D,J;.0\P_O(n-Mhp/OTo>""'d#;>r[8I%d9B.*PRouoFGL)^(A@t6m%J!jjc@3SpJQYQ:i,NLlcr45$+_ejC(k1cDJ[Cq*,6d>%O:Rbe6\F)))(8#rZiWK6IVhN-\A)-G:f\8sGiGg,-j4dCeT+8I>>Ya3X=+0B.ggipN\[FKKg<_7XicSh#hbn0UC_D*Bb_OafRIEF%Q6Crl%/:7'%4M;Tck8?b@Ot/E9qN_;%&@Hr>)HS+Hl0Z7&s7`3gQW)n2aS]Y)H%a$L*3]0.=aO>R*p^'![2PKBh0+,)c@$k`e=K$%+b`/q(cr(/`W.a:N^?:.Mm4:V5fe^UCe%q6g&8#>-leu!NaoMm&4f]h9?rI?\ME5`mfX'l9+6g?:5E<L4"*,)^^QUs-"QUQ#oUI8%*YktB']5/s'q=[7Lc<4q,;f_+pCV6A38JpDHuYn1#1J[eR3Cn1\WHV@A0O`8Tk?Xs:oL/J]cll=lBC2?g5DnS0*'5GeRk(sc$LaI%*VUBV\7ig?`tUt-,`\mZ74BYhZ5/38g!Y(:rUn7t_:gf-#U?12Di6hX8&q]Ji'bMWjY0c"Aa`Y/R=,A,'fi8_$)!s0nOSe!&jFp)%*01!(8k#s:IT-=3%32)+*/,8$.`eojOZ`Bi-V4o-,1j;"Os2_qaZUkEOq<GNK-^E)5"Ccl7H"m,"HMk/^1R]k!P)PPJRdm(+Xe!`%G2H)SdnLA#,&fCO(/Z!k:c!h0q'$n9e=:IXW*PabbSeq74T.jQ5R@E]q9\2^5iN[H`W]p`>Z/$4/F$8tbr0$=7@pctY<2Q>`JPj@%702Z2?j0\q^laCaRRf_.$nr#_E%h8E`SQ4#kK1JKMQ@8NO@:3U*XBhWEIaosKZ\t/0(&k,+o]Ona;PY!(s$Us&E=+3)T9U7L8m'%%=U&o'[\Ost!"&g+JgGrpO-m>+P!J^O%4Y-l<&=`/7GK;O-%I2n6^Mm7a_q<>0_A>+1*9qp<C?h(3c":'34#O8CeP/7dgc`e!f/:s%OoTZB`97g]J:eV'8BUc!3"/9u49?oJ+8Ac">Lu5Pd'_DsaA[YLTa-:NN/1V:i\RP>>r,o`!WFM+F&@[:d\XQOI0MJGYVuT)1V!kZ%r!]\2%U9cXjR.q&mpY*COJ(DA8PKNR!B-.1FW#IkOL^-3&r.IPJRn"7aI1-!A"(H!nE;)P&9g*/Js<\]Od@K<LMU:Z3pu+k8t!!k%E2jBhQ,r'-rQ%C>0I:sqjYb"o&.gO*O99Kf;BoX70LR1CdU_8t$%%mMbRm^&<a$5g][u7E!Ws__cpQ?hl0#9e6%Jll^e>DEMp#9T%BTEXiT[4<U:*aug_O6h)[!7^p+b)=bKqF'H;MfK@F$q1pD?bu-QY^4VHmZB0O3R0=*;r>p:E9D)GeTpi&\2ZZP\PeA$lBU;M>5"%%l'-g#g%J>!/)^J"3oNDC&=COMAr1oZY+hDlm+(72YmQrM#N,s[/U82.2'B19Kk#?.o<Gek7sd2u;Pp2p)Pn($A0R%@d2#=gZ2T>9%&*YD@">P2.GkLkWBqc6bi8:?Gj74Si-cJjMT3+;,d<5).a@^KgS/_L*j(pPP5p;CucrB;jngNR0/mm_$(r5V]%Jd<qR,U@]mR]S[%E]bDKDqs1HO`[k,`=#gQnYAYjLI3!kZWTC#P/'Z+0GfgjS3'.q)fjqnRX7(i`ZU^8IMAQg7k#h@R2?9@Q7(%J0*+,%E+-3)OQ&_p%Y3(hW(3B>:Md@P(rs%tHA==D;eVZSR.X`kEOA$?Tk<AN7N^ih=pp_CG)+5]FZ#P?jKL2;Q7qc:l\n0#Dlnnea0B-Q.$5r1_:T[I1%Fr,*55t.T7mDTq48#3r`UqX3PED[D,ElLN2JRpX](\2JS3MO:a',aT@9*gTkk-0eXYp7&H!.GObMVuS;##H..,*dHmOANm6jS41e%RKKqX84YGa1luLC!:%H1K^jYs7@5>4@+h:$AL_fd)i"hp3>$A#&grQ38[CdZesF"k-_#lO\_ME"N1"nnXcY;Y7I-D1]85.0<?gLO%UsNPI)6$_^p@(]Nn`^T/-K[mY#E8fK4br#65`i:sKIS-(_)*F;Ka"lQ'*(/%T^^0(E`u.=U#W3s`mAVWLo>a3EmW<C@Mk(qb8GRN%!o&SV-tnPh4j45o[(u2'f&WeTRhj>"khHZG4%c^cL'u/S84^o]>`M\i4fr+G%1^[?.0PA(`hQ^:O6"t&Oc+u1Vf4%>4::lIc^2H[%(>r-d."<M9aDkeK*'A3029Q@&":q=:L+5cTb'"YE4(aYN&aDUjS:r(DZ*6?5+Ig8J)*];%PV5b?Lg=XiXWsTQE095G6c_>)(6X_#%>`.cSL6Li9,rKYgKdm^VMBO%@#bRN[_l*L0g@.&N#A@:;iXl539d&IrP`2t>PS((C>W4k.:LTig#WYWO`e$<HQf3T<!sqT17KA(A%KM*4#!A8O!!3go3nL'X:-^OqK&E$N&(Ypg9E^CqV$94gI&Kg7*6-U,)JFQ#=9&r<0Iu((?;&1>jgN3Ia/-[$&Gg%\%"$,<X<!U]o%$>#q5m&LEB6s"[lKI9^8/Ke*SOHAdi2h]mC:lJQp<K+s!PeHF(2BtX/@W#s$W5^8MdRCn2EqUM0$WMm1$VcXZ!G?!s'\#fB+MWV8%e/8-82M<e.)PF$X4O_*imb$]%!+H"3Yp26B;6XufV))r(.2j??!j#ghEX0l;:`;@<^s=DPK=pROTua#b&]Rn/"StO6Qj.Lmq$@-K%kC"i=P:;;RiXY-=,j:i?9RU:tWcN81""_7.*'VSXTZ@JiNs'*'0hk8*Os$=j>@g?`'R8CN1\J(I"p!O\a_%4t&d>oi4EB;4Li[`F%C87?!"*OPE#&VNDACsRa6:1iE-0Shq5k&]6.q)qPDB@fN$__C/PW=CF.@ZLp''`s>3h3fNEL7(mPKSq@:mJl@/35J@a<a):i4=<h%6,9cA1IrqA!ehd0Kof=W7PK+]"XL$]KQ84M"PSj2,W_u%csi2q.;/qFL5FPd`PnRu>kn=EMZ=mgM(9g?.CG*S+bJlPNX;7T8:HE5%.;BpDo$O=Tjm(f]YQB(C84;*AI"sAcn2S<gXqFe$].-r;[;ag_r.&:&nQ$"S-dJ`c#aKiRohS(`3-cRA,(pqRVEVmC!$@1c"e9R=%J<QddOK'Q[,0lIa$KS?[6=D_S+S+S!e=2Tl!<<HCD(*`V!5a^q&d1SS!%1uq(i5(V/dbS;"Q,4OqKucSj[HZ^"bO%N+uX7We>g-F%et<!a&KNdaAN8a!_DibEkhmAKG1`UCWM7:7&WodXF%;NMG*hGRe<bA-RKk76kZt4t"_Jp.Foit!O<PanI2;_iB=)&k,]tGqBB0X<%X'&S)6j)Rk$M&^g$Y$:TjEa.)mNa&7P<d3r-?=OE']pU?5tqgMW[BbLM2ll^#ZSeV3LhcsMGMB;JeA>L5NWPde@HEA87SnHgN(nt%PXNK\78JR?OHQPaWD2S\Q"/I3bH1p[B-XG"0gOd]$'bgS3!^ThKH@]O\Vjm`8:]4s$ilIJpp!I$iCsYaKNs"u4>+!k+RiCb,==.X%.PK::M'ogN8s":Sm'&-E(UOj@$&M[a&jV&s(^GT53_1Jj+L<F?+_f=3j>Un*,,5iW0.TcFL8K>sN,DJ-)(1q8]R+agOFl&&$PJ*]%=MMh@n;8Lj8FKg0od$O4,bcQF\F*luG)fnGf`??tL^QQCL*9N\.(MiemKP/7![iaYBeV-cAYga]FF"7i??peJJ0,)3<-]n%&kWE2%qXHF^7bL#eLG<@&5'k%f7@lhK4TYNK`GAjj1(Z/roX.W=XY6(P&mrKUYD5oO,kR3PYHC/Xni7B+kI>4GK+)!$9!`RAk7:FY"O^ks%XGYGR&lO./(\!eG-;t2-A>__W6DAudb"kUU3F^-]PRCWl'L#QLR3`]"Kf`Wj8I>:ETedgLR+^Jm*:t?!^<PPKP"91.&N#(.DAA6(%l31GpigH#H,c4[=^OomWm,0u56$`-,[eQ4/O[QYQ_)/@JM6&Jr)NX[MVBfUnP/>4]FBh!7d7*,n*&5Wf8e.\'.6nO)=XRLDPWJC<%W<P;O_M4c+$>M?W-R94m.$R;>Ua=EZ/3X.M]+S!-U)I=S+0d;Ql\dKsG^g:RQHPtA\D<<59aSAS:m_H=.6k\U+-c(DqOr<\2(8k$%G+g$B;[+IJ:`i'ZNW8.>9f+*j(mZqJR"p@/9Pbp5.&'ssOcGhi95>i<3Y8kR=$;GKoOE/I(h7BkN.@fN!PQ4(Zu7K6^k=2,"p2Ft%N3to->pqrTY@aM5\leT6['.BIN?;*GU#9-ckY@a8`]6[X96mIK*)KA*'Zo*a!l=:Je:f?!:]?>>S$<<8-:E`BVMtl-i@nbRQmc9G%%ZU0F[L3+3A1cjC5T(:`gfs>#U)`3\=Wo65-.eR_M!53V%PW,c^`41aoO=mQc+ak((8U"BbV!I5j[2Z4qNtq8`Yljq)n&^m)"6kq%r#%qY@_B=ro`,ZQCPffg1_q(SXkH*['*II2a8(lR-ZGl=kt8K#-innY3:Tpt'#tmt=[4fB:a0B!39t&q.C6a_kQnMP<(6o!V+G;-%!h"0r)oi9GYT<At/)ZB-S26IQR>=dHOk;da&>SrR]$Nl5L6aA]3%Fle@PEV)`11Q%o--T>;^jh[#cLE.#qj-SbGZ,ogc-U>&2C^F%)i%,gQSM0I@leiUBN>pm;J=OB"uP"@.'/44+AFbFp4?CC.)h]m.knY.B\WXC;7&W2_B@[0jAJkpkD`nt$-Mt'dOu$%BL5'0Y=gYT%`M>is.[iD])D1(/YuVPe4T`B2'7t$AQ`oJ.7Dt%3M9Ci(Q:eh3:SbL*d#bnq2(tI#=/<2ZJ1-Gs0#NRJda%LG)XRqH&LHUAg)4LW%"\rm5@YUtC_Ns<6G/ue;m5]9Z+^$NY#,3WskRK`cA<6<o=!?]^&4fY*np%IgOH1??@Zotj57ASE*(B6kCb)*k43WKMgrl$h2WjLF%8lR)_a5r@AdS'`?&RY?BQ(]^1BRB8dVgR5E)$6lM@e@5R)mthrp;;t4Q@abT4ZNL<EA3?e'![2Po^G=F*$OA?RDH0@MG616%[(ma%q\r(pa7rRCns4Lp,p_"iHoj'u),4c)GTp.BN>hl=kCff`+YsNfhr9^lU'6lb$558UR!5@pP$%<8k`W;Q=!`cXdOcBD>k[fg=c9Y;%aA\^U)'U4AkS6?*-6ihZ59*r;8]"%F!i'Ro!2DqnSR?A4R)u-*]O)>]>lo%1k5K>,4/SdH`J\Fl52&kYZ&g4D4>gN5,.T1:rWG6B%r%R,K.&]](O0d+`A+-:JY3<2S2%$Tf#`T+NjtY7!CQ+iRr*+3Z8B?Y+r4.K_gaM;?MPj&U!p#`h-+!jWdZ.',Pm.g]10?t"@K;Y*%;/G-A'UK=S<rMV$`T&[]-3u1EO%D2C9^,0Y(T-"6bjo8/@mc%3,e%#2O_?TY=Ze#Fd!;@JI[G5m?4E"<>XXZ@!\HOgBElh`JqAsC%DF*XX6%H,p6*Yr@GRth!!5p,JiU0P-[)Z`3H\M*=FDBb?aJfdA(?&-1G\mT*#%De=o[G;/O#*WVE[_t0Go`D\`q,u+@215SkHdW;%"HeYu1Vt;3V]nSCA-`l@(WR+2T5eisU^0eg9aTd&FAV$r'"gkfM]BTVH1s,2EBJb%obf#ZG5;;4H1p-gF1I14)$.X2^YgRiUu/MI%&Y*gdhf)YMifgCKN]_1*"-NX;?9fB)<Z01iZYJHT-EAF<![kF&'?d1<h-U9J+W3h23p,L?1G(?=0l'Qj9ZpmW2s0%?1]Nk#3jU$'%6[>Kqj2!3N:eMD.52WJ8h?T"*V%Y["CD:50FaL?o3"eG@_N2p3Xt%S#3uUEoc?"^,N!SO9.&MqRA%==9$oOa*Q0K,k2(GqA<2tbp%DFVc%_$aDm)j*P&"]/aA8ekb?r=MdkAHKGE3)Uj7A5YfQ>.C9KG>Sk>&0p`o2i+aiQ)PWN@;3s50OX0$AHG%:-db:;8Oo[hC-.q)%'Zt6K(c)e6%VV0:-_4J0^Zgc!r^7sIk=R2)MN2*hNe$7r(X\Yn:+':5T9!a&<"i5cmFb=-hZ:M/Y_;lN%V+bF_4\sSEqVja@&00<%=7BWnii3Q<\l0:[8g<j3gk^)Q&4.A1mkWc.i]smR[))YgP,SHBm>=oXPV4W+=<FM>@L'MgfIMXn)&O8[mK8lr6/fE_@$6ELf.)@t%(t3N8#poFm*10!mP-:iRWXRQ@lB?:Z&ut`6.Me8$?i\64.4#><OeK77C-bQ%DbKVgRb1='ckW@^`.2GjqRA9Jf$KUXVQOGkP_]qj%5Z4+f(VsT`:FZV^cTcbg4LOotmHK?c<6CS73(464]0qD0o77mgQhW%V5K,#:,`4u:3#f%Q6>k^#[k.T]#V3A9#&a`o#,0h\(j8VW%LiV6>ngmP:dhilrdq[[H)!=F"AmNF<BP6_@"X%nh.9Ct&$jItSX8KCC<9s&EY\u,a,[hY,D</ep>N<2P4;fk(rO,g&^pfK5h_q22%PfWRQ;WoGHf^-),KFIiXHk6DGnH?qmQ'(WXBO7*7G`)%GL3Pe5(YaDn&A<9MHZFn7\(.r-[i-rl>7E%5/_.^n&F@"<eTD\JGDi!u%jA#D)<IjQ9<a64-!pIS=E(Z!M'paIgUL8ND6F-2`09U>3ii3:@MsS+,CSI?.)DKIk/9u!nXn@<ehF9-d-KD_W=Q5"YF8"E65j"-u%h'*"l/3B*b('c4(HM61S)RDe2P*b*oGft5fW=j;HUKk9!#$t\"[0TSGPNBBp/JGGQP08N'NZG[aFUN[(0mbI9lP?s=`&s&b[l=i`%Me::PG$7KNDe%fAp%[JSfR!Br?<OTAZ=6W]-ur1_5QI&M<2bD1!Kd,)V7t1&6O6%4>Tok"!!mu_-=LgX*3e2F($qpXO,/6>E.o87%E?O_n;h6I(0@N<`i(E@B&S2-K=HJD<M=K<V6:cSCoA*/ULn>j;>sSE5CU.B!C1W@@?`LOi:b]mf5jBX74E8<B@[[c%%GeRT.]C"5%#U'V8``Y`RMuY.7i4M.M.9h>'"tq,Mm`L,`?_WG21CL(7"Jk.7\&-=73.;%k0N"+3&I@F<NmU56-`K;Mbi(YqoqEt*`hY4K<0j5H%:!;a"F)Dk[(8S$,[=7q5rm3TQEs86C$U^s&kU[A5+f,9KUe?Jg]Zd1-eQlI`[-dLg+?:+4!#;N1+k/"TElRABPlk0i@j&<C(`t8n%!aZn`=)V6"K+*R^g#_5O\IeYcjm#ZICM9m]L;M)3G?u;V1HWh1\CqG>X5cegP;T*>;G.V@;M*srlGH/!S8CWM]E1HC+\MN1@_Fg"%U/+:$U.^*,Rr=T?P)%7rFj/`XE?o"u0S;%a_nUV6&eYG-n.+j(ZT/jhQkQJ[(j=3b4j+fr8iZ+dia=`61>W]MM\:2QCA+@``St9?%p+3@V6(2*$Q,n_;]994`L,c)$F"g0)L4`(gYrS30S&u-I6QuqKMhT:E0Umb&:<P@C9N&K2@0Y(0/0gK4AMs"RHK\8@"cBD"Q'^m3%dZ-XNEVU4^<sEalQqP?b0i2AY>7$bbkSFsb<tV+$I+6LkH6X$mn3@'MOX$Ei\dTX+b>XN'2-p9Em3=JYS@TW>$e*K_7f=*QJ:.(S%e3s%_"fRMa$VCIG;?4dUoB?`VqE'jK$#4O^K2eJ;NMpV,b)Z0!"qDsi^JuBXp@@c"G]]#cY`"Jf%YK/V&rNo3HF?OMUBO'e^Y>P-%9QS&<-Ct_1U*peYQr4_L-;:Rm/+\us,",C".?GN&RCG#'+?#3h'Rf%FAV?#ZM.N8Z,%RihbdXkJ8*ksq$U&*J:e-/2>Ic25\1)pG%7k6>%[$cLc(Ki:_.D9Plc^,94EuX\\'pB%f;F8N`V]pLr(UAr3!T3"#0BKN6n>.]H2q;K\'h,Mu]`'BO+d,Tr30Cqp:kfe,lB;)O%h^]%3!&,["I3]t"TuE>]J.Y_R:_kAJZ3lJUAHe;f8M_??]MUZV8Qc,!DNrjl=UU(e:PWHu]OQZI,c7M+!$]8L+X+IT&tbs!e]@dm%m,UGc!j\!-6r1WSK^p?p#4I^JNW?Wk%TOWnm;!i?KHBdu6!.J\AqPi:>?jt>5r?q$G:"F?)=opQ<DA!Fi1MOb&Y5Vtm;Q;O7;aEk%rWdnJ5#T6s:'A/bf^DNq!s3jq]EJ!S\r4uhUGuNFdBWrPO=-&J6R)ouQ2>6]KiCG\AT@!6'$/6cl+&D=%7?<52@4CL[fq1Ic:l1&%L.SQ3j)qmV`Ap),Unc+XE[Hl*$i4'l&EYK,6^L^q01?leR1--,!Vn^\Jj9Q-lQ87_'&B@.Q;UKk$5lNnpQ71ig]f2KJA;P\9>m'7%9:%pnWBjSe+]G5DiC"Q3^'p>t*[)-t+tltJ+NCcGoXm.IDlG-Y,WDWe'S)#mS1J&6Ta7A)^$1XXd.G,.@WkaZR\B'gC\b,B7jtu@%C\/pVA-j@ZhNoFH!iq9\:Mpf&Xi\k#-4VG\q'&>poKY^nTpGrQWE4[;'Y`o`0p.i%dBOoK?UU:&:jC2i_GcmKQ5kJk>5UIJb,R+j%9Skc:PKo`G)GLilSB>N38Ko0=7_uJT9cKdJ"6DjAFiDts69AX6$!C]dVd>4k<Pt>R,nXc2l#SK\&fq4KHR4f%3l%84-'>iI:`Xp,%+T58en7;W(LaWPth"Gt('#N['eFi<L\e<bklc9pY-m-lg3P5C)K5WrJ(/1;r"9dJTHn9joi';SFOka8LO%5'O\q4lFUgE74W#ant%E?4[1IhT-!WD!#t%YlEqDhg:1p@oW#cYp<BG>AkCX,;cUY<,>*.$L7_EXJJ5?4@e;[3;8N!pEC/8\GBtSnCtT6$Ra/,$tKJC'u@q%&"g.,L(9D#6GcZP3^CCbGZL+Brll8"B_&PS8ZSG8)MJtD5a$L,UALc\jml.t7D>GJ8nY^^?\CC;<0Am9Y&oa<q'+b-*'5:bQ_;8O%jGO$47Zsqa8FeX"-=73Rntj)U>?R(A2+1TPRX>E._5#)<3fKDO..S[7:\c:3dNGB5LWGf/_@$hKdSpP0'U!oZ3n[Wb77(8d?C$.8%T_prH^Bj?e,as1E9$$W`o\2[-*>s*2jF_oXE4b6hJrtPD#\W3mc#nGX6,rK8!2OP[EA4q$6.`MMW%.OihaoY:n:.<)k'%nNQa]1L%-C:'+SXhq#I(4M__4oK_^T'5tH<ur0o!MifSHH-RB*d)[]F)fqjU78-a.K2#9?<@;a*hCD5RDHLr3!-@k$i_6eukNd]^20eY+m,E%%`4Z]PFs9@/#9/n(qq<]nND^'-8/JiOi5U%90kc!*0p>aXp<3Z'G*ASj:*V6H<6H9geVA3mTiIc#A]u%Yr"2!)oB[[2b-B>a?:*N%2\tQ>'E]qg`8`g?7"h'!o;`p&$>GHG6h5>ZoE1&t^aV^-LK-FnD5"SGP1-Q!PgTR.&O1JiPn7T<@1;i`ea'aCFDHD^-/=eRB4<7k%0_JgK.$G`A%<b)`30K)YMlfm!<_3:`Z=j4B/`\hti:ML%I%#.Q^6sNXAj=TJGrI%!7]'a3=ll4Q.4jJZT^gdh94ET``pT?nV@OlU%b=tljW<LX;%G[\0pamDS!B_6k'C#oDli:YfC4m\\V$l=c;Wn>XIG$_T.PqE?>$IU*o8M7NDCnBg`oi,J;HU^m+46Il.(V<hV3g%b%C6p2Di1'9rKZS[ID'aR9DIHYm%IBBACVuGLV/(0l^J[VA9cBcl.n&SP)A0\4%r9(e>)f'"G6r07<%3.02H>r1kY;`cS\cS^eCS]-%0!VU?:E#\>_$V+>mjOMS<D*"UCrFWh=eR%"TG0(S9fELN&3PDZUIe6m;[`eG4,g1-K_CPb;"T"?S(`#W^pWL)b='Q+0u-]VPLnmH%\*056AsQI.4P$"$#9bC7imW!8@+R$Kn5<Q-bB1GE/et$@PC#_9)cS/K$nT6T%K9+5FtD4*hW>62@(Zbpb2J9RW?WcjH8.9$G8boH%@2,uS*tb9K9<;#4LQ?3dKEs`t9)C>P2]ldfBEkC2,pQ\nQq'rIVRl&40U:0gNTa-II#sWYWnX1j9!)!C(Y%_"qN440m]'YjI]?V(%+%j^aR_#RD;*o.-bE/pP3UiJ'a]-XOH,C1sLP4V2$Vbptg6#ip1;"2aLQ+_U&URAR<(15o.B;D".,r'bYG;?k,qKs"Q]OiDkQ9^'%E]9Xu$=C)6>RNQe5#^Bi<D)-98Fo7d8iS!;h)Y&d-B\4dP'Q2C1tJ$Jjd-_uRf*g:/.%IjPaY=CDU;VBU!JDSiEJ9#KS=mA)[sbZ%TAe_m!aQ1rU5!;O@sj+Dc4PsBO)8ERs#Z0+K:Gec*jZnn.c`\e&>AD^!!l]Z#)7?E/!R!%`7%&\d^n>hd93PL33$n_BYk%BoY`'B%9hA3+_R<nXUV(Z<+Z_TnVA>[iEai`13#%9E"2ujG5\0hA7NWqn'm:I?bX/[n1"1e`b5<5L'[^LW.'PCUT%G5.?sF@7a'>G+d5AN1%AX_uoXV@8l!Eajg];J9sY5F;pk@`n%Ch,`4n4W?sOPN6?jZ7%?X`GS1;Vi4h'u7<CA!(AN-tgFSdm6bUM\rQ&FB1o:YUEW(Ll$.i%#U9`*86r[^I7o%DLm%<e`ju-jBaS(F^n.fA0NnWamD:K0_EEkEROgj!q%Ui[!<.UnC9-O^nR]@Y69Y]a.HZ:tB$Zo+@a^^-R^n?F%5+[a9<$3iI:=2\L:YT$K!`ck5NaDn;*_5_Q#`BWFD`u[o3?c,_LfD[)#B[(WMABaHB*P,p'2(>5/5F%oXdi=,fXTMX;i"=aClEHC%RYS837A5g+YW-o'Cb#TeU[S]4FD3XBjr%&WGDQLCR/slm,:UjsQc<iJ7BVq%b[Thu[mVbg`B$o=TV]7DN7+5qXdDkE6]Q^O&e%R7%d%tF!3Pgb]=G;>2>sLo]2^GO@EnD-6Ob?.-a0`*,8+3oG$)?fX172IsB+5;\Jk33`=(jrqYR/k@+b`O::'+QL8M[\BC/??1`5fqT%4eWFs$q;-JN\'nG_RFh-n1>'%Unk#PYC]p*M5lVQM+-7p,tB487q[7%CSonPQ(4\XQ5QIG,:PhiFKXHPR*R,t/ig"2.u:,!5n^)^%3T4b_XE@8d#)WO>D]o;Z]Z'[sL-0pT#HJVhCbZQ=SmK";=UR\S.//EHAIX>^@E7<MjZ2mp@GR'81e-8\HfEcN9m72+oW"R:0>2P3%:m7YidKmQGUd!6=^U`b>AJ)HE3&Q\"GQp.&:/[1>.AM6lX3$AR_t76$2m;?AEa=_^WGTLp?-Afq(`b'Y)o;4BEm"k\;'9r@D>#01%8P;`RdObM7l&:-3:sOaO?sY121NI2%rRWMe\(d(],^69S.ufWC^l%2s!W/i!HUjN0Qg+TY`96.)QZ6O=3HZJ\B`m52Rn.@jT";'m%47O"Q@ZO)[HIrdd;L/Um_9:Ip#iUb[WHn44k6r[md]I".m@>7Ij4daL$R=gVeq#2J@0]74-Ya&%mGt"W<<RQl"+F/1N'=#`XZ;Q%%.+d7Q_+HZ+l1t6[`1uht3.aAY(oFC>`hBYjCiK1r7e"VFQQZGt2j[@nGp)E^IoCqj<=WBA7Pd#Z8Ta$ef<^"2Y_M`>/qXK,8!C*/%UA)WD%'Phgc&SfR6C.p;Hn3TL,&^``Is&H\W[5?A/bT>?%c>NcEt#HI8Z@qrH!D>A@:B&M`kF6uj\=K+X4uuYD#F"P&M`983G2Vt%c*<L*8L]AQ59skV(k<o$-`rQDMX3uA"sgb4RQ>(Y\8@%4^A[njYbL)!;Nea(h0>)<(0s#:+iZWmh._1?jWGMea/Teb::@3%]-LqM%9?XTd;n&Kufu/7KEr/3!,hEi46%^?.PneZe"!ZD""Bh0GD,LueQ>_\=.rQU,M;gseXfNo2lUSfeNGSFG1"fGDZ<#RFBG)1-(N,_.%LMIsU0&`[a"sjGDCiZAKdfchVF[(!/jKAE"/5nfX)I/C4Y-2O0`<9\Gm,op.I\rb#f#@0l+Q?A$.GpG+*ic`/l<"BB0/><al(-r:%61dNgit/Uu/*^pq"AJ0qJKXM`,6ouI8-fCiY;J<NQP^`R1I0WFXY-WP4Eil,18sdF1k]X_LN7)5W3+U$llZV>0*I?HHMEiGPn@Mp%b305=Qr[!I4tAGP]d6FGVtR6/+'_=pTU"7_M<Os3k-OF*&'_D%-l4'aoNSSH.]&An.f#P*KJ5:pBqMOtd8l>^ai,Mo,>tR;Pnl<e%j9!dD9/WM/VXk$[K$-uPGuD9Tj/iX*Wq*-[Bq-b^R1'b):_72(GqVg"YsW.J8^P4/Ok;reQNT6qC0-DhKsLW9lk0kPLQthEm0r&K%'3hS]k#T3f>tf72M;j!B#?`Kg=(;V>61R42eBufqc&D/0k]=]-LTW:XN2cF;Sma/Nr$o+=go.iME9M&?Y%OeA_ii@]rOPuBW!fn)%mgA"\3W=?$ADDqlXX'#.WR4RA>@f6`IZG5MqXnG.3_a=MH`;`4?<P_d9"::!nu6r5df-0i,LEPN>6`-d:JVb'<*DI2c2t%Jf*Fc/%nQ"2`XdWGmjgJn?5Pg`t`q8TAfH1@ePl-TLXeJA+pPt(pfS3XO'*IL35,:[AQTfV-,E_I@kE6Hq8Rme<P;[>P6]CA;-AmZ7c,juV%Jt,MV->>[I.B;2eMagc?=0$%Q/Qm3^qP??sf,',,k#kC4gJrcegegRu0kJ/',s6=3e^N<R(o8s?P&9,>1q:L)SXS&jc#"^PPB8#M%dE""Q*?TTKU?qipCU*3QA]grn\u4\Cg1UJLhGDD2<li`aIf^607tRuSlolC:o1i1PeC:cTH*<<a7T<Tn4WlcOoH7m,m:aGr;F+&!%hikMhY^5MN=6!4`>.r_aFu&%0G>6qRM6;>D-%>!.#Xa<!R48OZbseh^*JJ[6j4$PRff+/2c]B8"2=\IAElgTl92>/:<6WSe.gm_X%1Rji80oUk.cDb7q&cD\B2SHM]!4]sU-H'f4"K=NqGs4sbe!Mn$#Lst4rKE8IPsXXB.K>:%4iWm=1\f1hn+:t[I?duAjj`C0b2sq<%'L.cMa<V+JOa.fZO?pa+$Nk07-<,B-h@QP,`rl=H,Xu(WqZG<"'H_u"<bC$#$Uj/'$.DhRojOjEEXGI_jJc``[1Y4=;iQoRVpcZ5%4#2t.LX-hbkM`ls,#k[AP<>RR-;?8s^<ZJ@Fq-Qc\0Ja')<Lo#lr,TZpQ.L8P1J%1HMTp'KLtfWqs;C1<D5W\Xh"^:WE9Zp0bA4k%IEjRpO@qV^UBXmBiB5BI:ZP/H)%O!_GcP.O%k=k.@U%:D*7NqeZKR0B"-J:5Ga`hFUniQ*-Sat&\'QssQZ<p3Q0'it,9<hg+.g&A%H4o[-qZn`Ll+`?f8,[B9Ob+nW,,V9&YgF*k\5h!q`$ZJD^1YbjPsp^]m[/i%B@5H!J&;-:P17]'F#"eppEg9[<u(BJq9i6&SQD/e%'(<PVF$#PP"NT`VpF04Z88km)"l;5>C8SopRDrAnUa2>ab>L:FZ-OGC&gAna_dYf:N_Ik,+[;_b/k#)2Erd?S*tdiqA#/gjo'A%@%Z@kfG"M%b_&Ns#Y:6%h)3QYtoCER!.@b+"d"_ZasnpYaMjk?m[)^LX^*D'ra@7&q'-Md3n]`97aS_WOG]q:Q7VgbG@WDM`$nikMP%CmI%XW7Rlo_7<6"Gb5.rCUfKbBt'1Mf,GoG;16_EE=,H(3H$f5)7Qh,PEZ:5kGB,%L5o2Q/d*\HqF)50'39PRCN&;CP8kHCcI$nO%0':3fbRDH!e"<'Nn)>L:`D5MS'Pg1\'6YC/NuLR.1&(qZgl_,NW`TDOH'=hGX(gud?.71Kj:pKlIEWid@>>"+PF%X"C='B"Q(5uC%Dd2;P:jP^,f]dOO79?_"Cca1J7U_QT;b.$'+ArD7O=juDlq<%'our-]U<,cDcCY@o(mN@BbRITo*;Z1j+Z`moCmr.<o,H+Y/I%4E%Ogm22k;ksi=Jg$*2r@HgDn@(r72g(INt"!.236]q?%Eu,kf8.c+Z"rX+\CkT!P4/gYQA<s50<3&-LEtZV+F"qs&F39r0$5DjWmfp%O4:4AjU8a<NC1q=lHNiUDoI+XEXbAs9h:Hd^%rQhdq)$>G05-BE9o.L6^df#asVSB"NAQi\=j7n'^[a_nspq&A0Ch&fg!Rd,NBUf%*`7(3iKZ>lDT2I,lBZIMN9"\7,iga)E;,IlFHD]h9WNLt=4![o"`doq$i*>5>>+uH?Ob*C46R*h<^'`&7@l%#i#)@U,-J-NRc.-r%#Dk<'<ki)1jGHGOatkb#P(f(IqpaiO:*Ddm]Ube1Ys(6g1e[L4XK'kEF2p[:''(l452X,RM%ZslH_P6(QaN=(=2\i*=X,RX@&?M"%O^KFI6p@>P<3.EA,-\(]'8`-P?G]J3JsBd]aA-Aq1lp9.qLWO/lBUG4k(bkZ;RZaBd!COmI7`]\WFP/g3<0k0KkPB+TGa+m.E4'`%cNaZG:lmspM[2ikTO+n8r,0[W5/Z\S4PV1o?_brEADR%/1j1^8F1X#(gSNf*96HJOOY9N!V6k4UB"Tc0"r7`ZGfBU6TbYsA#MY%0%H5_QtN.i'j9u[^aL[rh&1Yqo'LD''W>EY5-Ad17YK,u<@[BOaS,_Y.c(f`hqgrb.<_"m`84[CC>B7`h)d$)%/l^^TW8fg!VkrW[g%W?G=^oo%&)k.j8D`^-B)+CB-n`i?Q]bDAeTi\]@pSX\K%Nfu#66<ZM7Lkt-HF'UdA*mMOe82>[4#T",AQJ9-K;=!\l_A\.m`jT$@%ohM"*At8Qr5e[\[*5@'c_8IC"Pq`VXERjpR]%)rYp-NdpOuZr=5,FeqY]sR8%fhfRAD!*QBSbj]"4G.URLN&Zd94@N-%VTocgdg!%/)DFBZ5A#g#Y^cY0'd9o]J1GmReb&[aTUe4PLWE07I6_fh_.\<G_cbrln`-^3Yaa?lLb?ZjW'F*%_=Jg]jOFmkLp\P&C(q%ln`.L%<r1N(mSQROa"K)F=9.6OAB&2O\VnDe.][]\n1DA"QYT[>/:3M."D,T>^$'q+8AE;BUlZVG'F\g>pKg1"LCZ9@j[r-,>h@>Ll_c``%!hg!]o2C05KG:PK+H')0_Wh5#`k/dlk`V`V,qtnl,Fs"fE.X+*QUo-?npFFh^U%?#FSJJ2Ol<P8RaNTV+S2=ASI',9VSV*R0*WIL%,?ee8,CQS-:LJs(bCArIPTUD<.59[n+_+V2b=[(Hm7UnIInJdpI#UT%apc0Q<3017CSU^s+EJrRYqq?c\$Z<-PSErdL/90?L7E?p%UKs%-Y?@GX@RGfq/HAKi[2.ng.bMFPL3)FUlfs)MouIPD"A#]6J1.tn`&5RHI86kp>H=X)MiK(ILa2b`@AVBm&o%;8dge*EAB\SX%%C8tX[F**)3?f>p1/g?on]HZoW_Ss"Z;'[9R+)[uEAJ5CPk[%Xd$IXK`kg^H@:L6JFK9L3*j!F-j,f@-XC>];T*fWaN-luB%9+_1%%,8koB<mjB^6%OHU)q>`GY%J)()3'O#Jr`eoA4,#NZ;b:jA)=g9WR<M-hAT_s.=OC8/#&[Bh/k+)>Q-G7ulgS,9aWLB:[^&Nr4`t%O`AuMF>Fa)N\uAN4r:KM2i#@H+d.K+QsX+Fhg-8;@on4u><i;*"*%Ii_pkDDW`c4".co]hR7,%(0_27._,ABH<@JdI1,o-._'d=p%G`:GAd"(\kT*<Y"B8f#Dm,Wj/6oCg=#5LmC.a,ESCE2IV:Q\Qg:JULceR^46^"JNTD\i+V5"AInI7C'OD^hc7STWOC#BmSkk4usF%oUQSr/IY%4m&.G]IHbehNu-PA_PKXdS?7ejHsAM[HD@/_[tE'n=l.;G20"0Bd^$o)l#PBS)c=_1]I[59\PV01eC5P6PD51AcQDD^%W\t;P#)*RZY9Z!RQW\.eZmtSu7u0l@b($IPa\2db6JUc;CSlZA;1(m:\9@QD_`1-+L'K&+M[`Nj\`#S4$H?FV2;Qcj.N=GJPnI?n%0rDZ2$Z\0a('QsGYo?X-Ij?:2b<h*$1kf84"<uL]NqK@PINs]QISi(JWpXg&66#%gni;T1odiUV7Z]CQ=43l0*q_\<<j"G\*W:D*%go)Z?qi\iRCTlf]KP%eadQFKa,2%tO>VUX7q7_eZo(j@=_uD\R?$!GY%MZApF]VMk36aY5h$$2G/_b_IKYTE8:Z@K2T@kL+L7E&$%0FP=P\#@FMP-aZ-:G-Y=P+PQVJ@Yr[I7[=%&nKko5h&tO.mKkTnG[iJ,)?([E'EA!(Z$Sa9q?KNcOht6/p^E:K&(Ls)1o@-Vr')_%WbUN_GBBHf.FfA2T36$Z=t;M^fh;aV)Ip)si`>jIA&C^fKoS3t&LB9?g-ne*?RIDLer&;b<CDfU&@"VFF0*3)=lt%Wq,_a7+Nr7S%BD'm@>pfuDG^Hi_O;U'CJIftVm&"!/9c&cMf1d8(j,%SVB@!^8.mlIXj*-UT^eTlmQ@<"\fp2<@,X(E8h.;_.Hn1\?CY&!JO=7A@%O!BdJMVed"Tp@G+:s4Z@W$,10d<6&.l..8(;$0.%TDGK0Ts&0[8>20ppYo'"RsMYrC/Wt0l3<NM?Y'/L<d%B1dink<8PP?KQeb5M%cK*b-:22St=k""O!+0r9)AIcH2sbY.RLX#[%F+=:2D=pqH^i2fL<N5++s^uA:288.FN1@Wk?XVGoT6_Vm_FW6[oPG-YlJ9V;@=b?%e,hER[FmDA0V$XigJPj[D.[k!Gc=+^o2;&Z`9NeXg2pPoH)]'3j>?HmS,M<.p*Js`\bB#Q[lp[V)U^?IF>,F&[<\3-R9jV.(/:$>%=iFn0V)D+(Z\Fh#,_$GEC)N_;>)#!sd!Rmu.T;<`dX$J"UY:]mCTb>c%HaNPc3SQc),ed#m"/hb+td<q<+hiiW$XOL-i%Fq<5[u>%)<3<s2)"$6f<A:]C?64XF&^%0BGP2K2)?Z%8UW$Xjdpb[W0S$:<-t<7/tG`22[W'_^o4,kY@0mX9[gYbc0K$9Ls9<X`/>Ot.,6/H%W<-\AWl7BN<@tYk\Z4bDA$0Pa1KQHUjkY.eVf#)O`E^r"B)F>FhDEB'a+OWrQ?91*g+!I\*?h]V@'%hV<#X^"73a2b]t>rsX(.b.%9.^'7P5%+49G*=u?SQ6T<3MK?^!.>BE&4I^,b_@+=fEfPVDjB57;EH,mtb-'&0W!"Od.s(N(D+KPPi&&?7\&$)eE<XVb$H(Oi_Y7%b<4QHIRW<+jSWCsOapnPns=`Za\&I8HmP[GMmUZpR7ANDf#+#5,fk%0SdNRE=[NDEj+([OY+_`DCfT5oB"_G]KKklO0``WlXt\@p%+Z_o(LL/9@W#Zek>>^PuRNpm6^4r&D_)5WMSH^e,hN2[K.OOYb!.mY=oTqF$,%D=!OW+"f2jj&Ka%h]O%a6I-X*L!k[7[U!0Cn6'%P%;/#As4V5[k2J<22`XtE5*%Ed`3=`=nCau9?nts<ms`AW,8W).qD]08/bsCL3h#b/0X-]-iubM&pA#[c3fPR<??7M+,V4K1'Z:9%k#Pujb5,'t2'H]Te)qF_W1YB%ShsL(8,f#c8t<2WjG/B68schEp`RbInLj+bK03RkP>YbDHuLHO5]uR!(PB[(rf`SIA\TOX3OjD\%Zf@O%Nrs9cEQ"Ao]G%2'=1GIQbum1bPHgD!eU2^M<[8:opW2J`hk$*bYgg-p-"E1NmDqPkE%pIHjo0#O$4Jt67s45+,\ESiFm]RS%S9pQkVqemsNGpf<nM`h994=!\Y,BX=0?N+O#"NUme"q-3F%MtVLU30I]mGh]m`[6$VdPZU,#QlZ]<AV/1/?\K:/uk1P>kO%Hj$uN%A$A1A5TP4bk&ba`KWke=%WePqhj,79KN/46k^:X?>s.OM=Hh=m$*17&,-2)L_CB7na0DlW$$1kC_'[^hNYOEH\s!X9l=Y@e,amo9%+;GqeabtMKgrO>iFRoN"Nl(aB,gEH:6\.c9YenX4I_1qB5jm^>5p4YW,QYWcQ91g)&W/;QL/:Z3/CB;Z/O8<1;(j":><V+Bq[Q.K%m=Dd;87)^3h,Iq?_]-Vm#)ap1/,t:uZdnu5H(tE)m7`)+P%JlLQ_aPaI'Ac;r63Wm>08g]kCT+I92l+I2"Lp'T8t+<I8]k`R/%t`%Jm^qg6L;Lu5NKOB$)=_j#!cfC*TXK9hoPGmbHa$>,I1firI>T?nY*9bPO*LAk#Td_db@8J-XUqE>rl'Hm?<WDcR"8$4pc:K+2J^;%&B1NW+^E8+alckI$,`-uY1_Gj!g$d&W$Z!.U-@bIbnB.i;'OEVYjCp*Kund1#E<Q_5ETPFg#nuhO!Rf/@@nE)#siRls,"t'jXh+k%Tgfb0<4p23DRt][_4H$COO>#hN5lcAYk4a;koFBr#SH'/OmDoD#"Tu5)%D)4QmB\8HBJH1U/5ZXaEgI@8mJt2^4,to9k052OCq#S%8'c4?1Er_sSheMFMEoWAarOH\Pu)V%>pLg1V/8[#r<^dP\H6N.M#0u!jH?RF'(Q^%XPO[hdq+dMM]TskO.VjNV/EE$7\N?SD0.3E%[_V[27a[;qYs74.;><>c`BSno;RPIrAL<D/<GFKP5t%lp(c9CW&=Lei*-'gB$.6_XKV$a!PRmV(,YTt^l66@QM6%lB/ZJf>;,>sO%es3\?F=$1uo1gl8<;k<PTY\O[kfmp9#n[sEf:*dlWZ+W;STBp$]Lle>Zp7X_:r/Pe')bcCrrQmam)rH<9Tr^]qR6G:b;mcQ&p?f2%SiYFP2;4]mY_]sURY]4el7MVnc+%tE2,]d>l4"]0MFn41g(K\O9W7%8&$=,#,<@Y-!PXkQB\IY`oX0RiJ`Q@\j;Ug>ljP=.".,!?%h_*$NnBe0"Agn3J5QhEMUJ$nt'WX_l#IhC4Cdr8q*l#HD#:PJT^^d0K!OiP,:/+'Tja9[&lm?91OA$F>!1E$L1U#q&N%:E_+C_Tl%R><qHdm.nZ\8MF?<E%a@0qalIi\cn;mSFfIU#b);,"WP?OLa@T_&h"EQ+psunh"K>W)!F_STWr,q4=c3N\jIO$`1BfpnY:e(8JjQ%iegE&,Y#p/?=m]AiB;,(7MsS_W2\DLNtBEZ_9>jJIf1j^<8Nh[-+V2lF:gd,V*RQ'-0,@EF".GH<0?^B@Tb-Td5[GB@^,4\AO=":%#B?m;`5uWgrZV)(>N6bpXUS-pEf3:/6@.,pMM]JDQ!Za$@qo?Oh']?ZB4@\DUnG6mWAfPW5_9t"X>0F#.XMNgUAO3Sr#r%9O-0/c%183:q5RM8bb#JGU)dZ7EGZAhS/4hVC=Z+kY$g#<P]ES00!M.KWWQJ]ad9X.M^D">u6F-O[J:hP(gAmB8(o`Vaq>t\O'V!>^cmj51%b'K`!XX)f.'gj!.$.OfcSl2ZObR9C1;:22npHb5nERh<IM"pRf`CKq#qVC2-S'U]Pg,1,QpC@Re-3JBi8TG92KEMhF89M&/Fk3G1%o[MT]Wc.'=q6mW2e=oh&YK[FWYlR0P-_Iq\h^O2?P]NJ#j%Da0N2B?B1@a3GLTQS<N^03C.d@-+q*U#Icg`ArknZq<4V>1uap,F!%]4K%V*fAb\:R9$*2CS?$S'<HmP=[Q;&AMtoK$d-5NSK0\5PJk26$];q9AOJiC`"ltHCN'Q%7X_,W1%PiI`S4m8.'d7hEeY_e:5Z8%U9;VJ_8dZO.]LK!\uHY;Kk]N.%S3J2U(dQ4eV<to_i\&<,a%ES4lk44/F"2<ocaUj^Q^JnSIpJYF]ENnbP"j8/_YTH5"GbC$%b)L%8nDk,*F&TD36E^p!7%:C!?sCCJL'%k&jLg:3&e@(6ph)b9RX8<8-J?Ui4gC&_:j!GI4KI?);kf1L]ta^"]FWP+ZgI&`N$dJC/2O;%.kA!G*KF:s'"<7jA8BFlDnl6WEs-b9,srU!HM=e7R05WjGdmk*`3N>M5cLha)3\LNeN@D0T*b(j&g.,_`%BtL?%9M%QI50g-$#@1%b8+tY4c6/9KbHOER>EbhLrrM+,DdiHGP+dVLDi=H=m*qpQRZh-RFiI;j?*Od><k0SQg$W>aj?eil,*?...O2`)0!6D&m9MRQ-Fs.%s-#*GZ%>En^.J#h(HC`<?+-+j+nd(""K`RoVUj^HYs&8Sl3!bWO*l+[-o.23n(f8cG,XS4#kU[^BZ0C>j,MH%9'VRHn4]Q<'[h5>%Uc(b]^o](DcR7PG6Bn[pa^@f<9(J.@YGdO8JirmH=_b,U%2ifX*=R6M#RNPW44P8uI_-"1OGWHEdDBO"H.)rlL?S5o^:5fPg(d>4%b!fV<dX*N!L%c!PG(81"IQh3*d(>3fHRsuqm?5<VdP!.\HN5\+B1R]!FE3I>8klX';Q>T?Q*tf:(pg`.RCjT)E,kh:em2BrQ=N2s%KncmG/U\tFQ^gIN-LMckh/#X+Rn7<]2T%&-ScG9X#UhmcBgh=tjGZDj]]0sRJ(2CQ+BbA:%*9nSBV_g7@Hs#dhKs7X=bVB84Q^td%%W]u=lhUg3i>%GAX3;VDjL7BEhsO?P?P>A@]/=Ll/%1jNHel`L#&Url0/lQQ.ZkV<@Ma'%#2o5f5eK'&e`9C?-f-*4=jmQl/9U)l%ODt!ElU\[K@mZ^b=.2%@c[^Vi2j>j.h;'TG^4H%O#3$9LnVod.opUX[f..K)9n"\M^^(5p8cHHEO33hkDUVTIam7K,qX*PR03?7-%H,\<jQ`+S0QRb7G,u'I:Bi8u^^.`.R>Yhj3;csConb^@`c[&gsSNIJI6&H4b5TG6en5-OA,@hV(FFI!TNqF4YpD7.a8W>WH@W@Ca%M$*:B">.,47P?[Ta,FKAB/_%Q7AP:98;SIT(RLR1$CM=5BL_IZ+l?)Pr>WhhO#)b`7]JZ`eWE4r+^8-<3&G0dI1XOj>*2aZX`Uk1%;acTTlm2Wr_Z<WPeI-G(R?Gd$j@Z^H="Y[O=Ea3i+]jgMK65utC5Ak1Q?r&3MTjuG.^C80cY.lmb1)kQ(BNSg&i(1>b)c7<l,7p8%7>@J\gr@BL)R@D"p>^g*1ZF]6pLVD4bn#KFh1_3>*u,*-ccsCZr#mZLW?&s]CY%o6i:geJ^Aj:*jIC^Mr4WSq2dMb4rG`Qq4Pd/f%?$>c&8e>SuWSZ0#*:W8LTGYt&I+S#raR@,Nei1t!Fc"lqICh(^S7T;a46!![FBdUP=X<)3$nW/7-_TL'X+Bo$.G*sm$m>8:6bFs3%./93kl_)^7qYHEGV;>f>!Mj"e0d".]IF<RG)A;cgEgP.?qEWKo><f=4j-k)FDojg?\Km:aVRCRI@^:'Pdrg^u_"$DXD(\a;kUd[e%rL+.NpEVds\X__h+H:m+MR#@X?ZC.a8]`jcSBQG`02$C%1b9cU6pUG`l)S),J#;(05;&2ebOcaimq\^oluslS%5Don21;@i_K_"+%dgLRG_:6FpXc)@YN)J]X3j-L[$(3B^.Ku9G_V]9)I7Yd)=T$@4:q[5A@[7LdbY$gm8>J9&j'1[ZK4*D>0j*c'3MFK+4mBTneGAG]%r^ppb9GAepXiNiVYPk65:Haj/91m=(OTsaN3ZpY!8-U8e0CL$]eH(fV?LYcaM%CmlM#&#LZ'LUn]qmX6Vt&,J0+KtH%Of=As8)oZ%PW;e;%J2ug&HdI/-;G%m5a?>sJ?E+XSJR\XE1e'k@jhoaDda]`(Fk&k]o4m1$T\V&N-ZGqQs/ps!In%&KE[?A38Tu^`O6_LZ&57!%)WQNiPXt&51f&Mb7lNjG%:/"I\>6a>CK:]IB;L3oX']-td5BF(m2Zfj0HLl7Os$_t^jV7`k6TTi>QqY*@2;`N,P5/i>3Q'9#*aGB%'mTnpC?Ypr;3X4#fH&&o2([EP-?>^P+SCO-S22SEf8kdbKNIZ4#Z!T4GDS'g!K8M=dFKShXHN_[eFXXm8JLCZ+b=tR%LH5+&:!e(%ZeNg1oZKW,'StgCDLp>fqGl]L;3.dZSPr8L_E<eEG(MQQkc;2?Lb?58OoH/;):R4,f?:2J'gGR@k#/UP6k=_oW2NKL-J_:g_AH-Q%gEf)C_jf1>=GN)pB*g$hTR([nl.>7EGL_o^/L<474grX4EO01JHsG&O`7?r2Wi7>_o+rHGLW<pL]u=lP>rA]-d8j?>V5Dk&YqKOC%So@#kBn3'oKL`G@U/*5O>oun,0KZ`]hcJ/nPE]79cOVsfX">5\UNB471ns*sfs[g$6/@+cgCRAU:=\/2VVF,u)tCV*C0@r5,>bhH%\UNNm9k<8L@C>KN`>UP'Vfcl\R3=/'A+iRq3YpZ4h[bk=fhV,(os;]A=9i<P'(>[f+MU2S8L+]lkfqWQTN'I@<2oU*HKBk6dl&t=%,g';U-GS'1;GiLhOAYk/$Bpaq)[#Y2IMlmh"WXFa`BZ\!',Rr9[<0:;a[-+r"VA9hBf!CrfBXo4EPT,[JB078If,HF"7[Q[C%k``%3J,>k@',@MKT+a*PAO5,3'p@P0eI$9%)gn[Pcnt:CUWHh2.BiNO=0:a-,M"'PBJ;;3o8mB$ptn:)]Pi#nsI\>F(X>;]Rg7^#,Hrd%X8BOQ@&)@3&!sce=/^Pc_*kiu6_ehCOe<Z'WI/.j(A+;rg%9PoO>.9gr9Els6X#/Odch50l6L`9d"]pfA1d'=G!l3FD/3''Ft>gq%!P$<W5]Io!oDa%;3?K->p]c%Q/Jg0kNo\i9Y;qX2md'"3ATi0HkV_BsJ_,'.2DSBpijp:QJ^n@QlG[k#,UM/<;a!CrE!^#$h+9d[%S/TYOL4P^@VCd'\*nq&:$YApW"5,f#n&N*\Mc:k//']-F*$an[Un5OF?1&A)%OiFT!eE!@>Q\T[XhZ.*Xf'0HQsc[J9XoE5C"/s%%:%*-u3fV9dV:c.MHC`rB)Xl\f=,:r/IjZdmclC5L>6G.SZJJKk!oLE"oO^@ncN&PY:Di_eGj:+VIu/pogsVEm.3IiRYsXs['A/tW%IioI/\o*N)[31976R:3n%Y,BIR&.q%Zo4_^!p2SiCaSuNB!%"R6u+@Y/CrdTaXSp_*uUrV8/@,Nbe6pE+hV)I%P?h?PBT\-/'2i(%6SCXnBgU]fnVDSSEJ5@`b?/<kJPrhX1Dn0d[/EEDT\$tim4R+F:YFcZ<39$"1N3b'A=5]VmR<;?a93!QScm^n5j\*e:j7("T6ElG%fsjcj`[eeHn>78K2HQ]GmnA*1L4-?o=L@?s6mVHdLgPB5j5"(<+C0kG8?XfRU(m31[jF:Rn)ZPg@j0pdYr`jON')X7HHb:ddO:':%O?'?cf%M7NMsg'#`fW)ha2eJcWS,BO^!+$D,0l*N,9O;eo:4NeL)$NLVO[t)_RDe\gbl*,6L%,R_,XN4YkmF="Mnc5U4H(PhPsk'%-P;-2%?[/CqOD&W"f8!;2D_'<AH7_F?X7uZOme#E_563"2.Q%;N0+-[<L$??A8O6fRj,8Na4duQ/]gR5+)fV.I3FUln9caLVJI.U%3G]e,[7N-ZIS*B@SM;C&T?P"@1[UOP35jHJ=R/g_Rt66`<2P<?DMY+Ue>X'jh0F*!bQD,J7=\2;n,a6<8g-PTY%sEG0Rmtb%OD)U%5\k>INZj]l<_Xg-r:jX]+J"=AYJ7Pu_pq3#hr*,$kcuXjiRdD(I;gOm=Ln(D($67c)V)[r7FKBB#+;Y@HuOEms+'X0j[\2nRfDXH%L5<8C^s0&o63_TbWH,^`lr6W`%ITjWI7\uho8&'_6^g\d,Ed3AZW,i/[/L`#g$(R\ocdNWC[[(nTD#\B8lsIU=W8ROri`]kBh:"]%o.?,+f:R+er:Tr8mSjQ6d:Pph`%DhaO(OF2_<."&L2$D@BXAcW;e,p\erq=EY62,S"Ud&fOhR:!cG-HNN4OMl^3-_WbO6h3phRX0%"1*nS[!Pm,YL3uPQ3^QSA7$5K>ksfrA=G5,]3!@Al/)(#M7:G-Kd"^SPn2VrH;<mJ6c&Bc1@:nF]g\HF_p'19Goc^)]T@%&n[1#k%=R]AOmW,pO"*$+i_SU@5Kq$W)nf?jrRtR31GeKInh<ZO,rLt?n[MD-kb._Gm%&7_]3>,Z]JYce+HRaN^iZQ6-^Va@\irZ."8M=Bg%?%A=Q>c"GI.>90MM0tU$PMu^$4c&UDdZLZdae&:=O;_!mr46'LKi#i@G@Wsb><j\%75nr5qqSp6]J!;3JO%$\fe0-=`9i0+3'`qp%(L7rY%>6UYLgVW:\^kEsfC,FJ8TGP_Lm4mg`uNR,7arPE8::lKj<>=nGt/dRKqT;tKb)+Eh.5]GZptV5$D_Cm1-CmWacVORc4sRs%hQMsW:@2SN,B;eCi9S4]8=T_Arl?=e-p2[I,AOM]^&(a>d]B]RCHn]lX,j9n^/I+f?E>!;\Wkj)HaeMf\]$=EfT(!rf:sS0'"K*#%dNV]$=)q0bfkQ0p2.88$,J3Lm,^mae8W5\kW_<!dn?Xb,c+!V[%e1TC8PLg@Lql%o5$G[e6j_P\qXnITk+aK$C:\e7>6j<I>N3+u%UrmAV9U.M#7SA[p"uhqoeD%d7a!a*U:i6PuHjQSB3]a"e,2Lk%gf)V&WXeA4dHE^mlG5(a22O]/$ITNRfbub$+B!$k&KURY,r_:T%p.m&Z)3AX9e;M"2@GHL+WuF,S:%%3B.k8!Q9b>;U2LdfZbGG-J[5sFRSk]<,bm!%Nlj5Idp'lU>:k1im:Sis3&MXPJitSKk3qdop%72V55[&4WtmP#mXBn+r7Y3j'LQcC_:>C0NqQ/Q<E$X!NG<!%'cp'h\eG3Ps7TE7Oh0OI*KFI);J-&f3^dEi<jL2]WMi;Pe*FF$c_%Eu?j4*Y^KD+(BmjZ+TYg=F\,2XoH\6?2c3._^dGN5]5#_ZOnQ7\/S5@Xe`\merq?>>(6E@=;huJ.'>dCjHb7-bR!)Tl$]jr#7'&E%8:)@eQ2DD%/'3#VDDZ($h.,hpnK4J,>V5=S=b,WpGhPNkk>5#O\kdbFR")t8=].BY#"hNGOBUcW=AfS)Gi)s&2$d,1%[J[R',\u`%DA4S[ibRL1_D65o3TsV(LQ[NNg\ehI\XS?G^"$'sY[p1`idQA'_[tO\:.HhXL4Gj&m9uFo!UmY/KErEYD/1&FJ/u&Y7L*sXR"Z@#%<Zl9$8luFFog$fH=<,jne9BOq.u]J=OTBt@#F"+`Qr;+VR\ulW<$:Ha&__7be(.3MIg\a&c%n>O*LbH7d.n),Q-'3gQ16qG4BGh2%1M=P&99,D<JDSrH:Q4a+ek.)i5hsII/jp,A"t(Z4kAS3)3L"X!p6OLWj9k=lVer,>^rVI[.hkW:o8OiMY"ZYbH&Q1"au\_l`_$-&%neW=rrb.,n#p_KqN%$sn=6#Tk?^]&1aWbi^kM05p:<7Z1'HCBoihn*9?[!2TgTg3)hGE!CVOl@c$u\/0aMn:SR4f;Y__):dF<.*g%kLF1U<AS*.Dd[`Ua6qk3IKL#KW`C&6FkiUGOBjPgDdMnJXu#/r.&b.0N3#uHRDUfgolpq5d'C&GokFk=PY3He&G-&tj8jr;T:tn;%KqKNT?*&#EmM<hqQS1I[CJRk,QV;C(B>1+PjLs>pE[2q/^s]a(V(HtJ,uWkur=40#Dc^MD<fe@.nOR[sZqc7d$UptD[,f)ThfK$X%A$B&Wh%.BN[/'-b\08PbY!9.b'c_bN`PfL[KsJ3M_7H;Vb:`9FBM0+pEl((03NhLg4a5m34Hjsa;_TqMb47gfV:.#!7=ubjS0e5a%TpDqq/H*3ma_4A1SF-[iNE]d5-6Pd%:X$jH$5$2HP(>'Ol]!jOSGtS,r%*aui%?mW?U+#Yl*$!raukqrc^6ES5aXGD_++/'/LW8b%q1&Uai#9N5F/r72$[PSTOn\*]MMWZ"RdA5H'>R<U[LI_Y+^[!"aa]mcfuTqdkPRa4MZ2q0mf2a7`Slt=*.PibE4to<i#PXIn6uS%%0i$YTSXEj`Eg<A])tCPO"js/PD^?-ne]HgfAt$hlfl$qeOU'td$f0[i%YW8hF!d+*Q]0?7du+4$1j;O!3s?8JWJmec$Zel_!Ca"c%c>_Od0ohDKYc'U.1!EB%C):bRqKdtJm?an<;kMDrpKP5/8%.>afkS\.+R`ZATPOB(ejbP!s5hhMoU?%T7qe)#f7.fbC::be/X@Bb%9uIPNhCiUD`QSQcKo(dG"/antR$q7,;):)8Qt3JEkEum0SYfZ<XY*\;kXtRT(6[X*^"Ke(dHbhYSZ[r`kmdUFQq!`b;("]`2QbDM%l/Bho:Y/FT2_nk:7UUCX>Q^K^k$]oV&b_/?^n`5_C5$)_HuCQoMGNudd_3$D)cKC.UjE29MO?,F)8\#9UF<&gimL<6>\`Z[#UHR4%_#2n'+'7STdtH2XEK=h!F)NAX=5qq9Oh/?rNT^&\pVtWb2;)LTR+^$p4BON]1!0qDXgcV2WYThMXVttL7o,/`@K^9I[UD1SD'-a_%I';@93mX%<,7WD=H't1,lL=9f:,QHl@RFga`HoViMIAKH)cE[\25q[0WF[F]U^7uN[P]MXR.Ikb2hdM,_\m':dT/PBn*)j;LQr@G%qV'Y4^^H$tp$?-H\llYi(mGUgc\uam]Oo'DN_226`TtAXKR.sPc.m&I,,3SN,O'U_;gV@5j<K.L0A1ti@9nEE"rLI@Qr%kj4KeE\%::SiAq<T,fSje<%AJE08((A=.pi>r2p9?VrIj`<teqEH8a/0Sre4[L$F@^%o1><(b3,:FK#82AA0KWQa:Lol=!983N8.c)7g#9;t%NS8`)bfl+r*Z\fTk=j)pf6$I[T"c+q+&P_bR;HZe9h=bk*(_sS+\LtW6M/:M*4b'GED-u/;!QWSL[@5f-hfTt;A<r6Z0*gI>UTuX%4)LIm&4O.<Pc-OVT]EHbV?UpSXdn?N?/\3$0i+c_$W1hRR.Du=L$5Ql>[4[j-l'1r*`*2t0mqc@Kp[jH#&,TPK,i""4<^CM$nND=%\@o:7@DUdsU:u1bL$8mr@JAl&a:HGAW_B[Z;M\uQbDfC[.t<a_K1F:K!f?jlR%9LBN&'o[`S9Cj/S1X8`7^g^`'#F_-Z3Yjb@A]5%r2;/P4[2Xq#X<<rZ.,322C1\C[$s>/N(`YkH;:9Ycut`7D<\tj/Sp_JS.F@MgiILs'8J%pbn@MUaIuFieE8`t(<XnglATjL=AV\d%ZbTPIl7>mGdr6S^>(NNoK,p8O5@L8:$HuEhG2qLD)'V[nQ)*W\4&;u@Q<L[=C$`s(PW#cMXnQhO&`NX$QLZ<t;SU+U:EfjOeE\BU%r&%X&1\]j1pp%fEmkB(,4YZOi!2:+4f`[TU;bUMB#d(WgrmY,Z3Kpe&N6;8tMk8?S=hRX;"$--4RiS?kUEg$[+Z_Dnjh>9XbWm"^%N^<q@I2Oh=%ss11>*R23;VkhrOo<u-R/(RpJqe(!l\E\+)9M*r/r0YmFOEsi-Rq9dR!LfD'qm\O(qC@um$dM+,UAO@#"DdQStnoQ%X`&MkI"S9XP5#5FCa\#aaZ7UOSdd&A4(ZJVZ!=.\?rk5`L*p:iMT&Lt)cT7EM0(*jc.OgL9'PPSM8H.!"jKKTRj0;[8],`:rL@,m%8Te:Hh`WA:@9*d3\Eq:6<i?8!Nk)]e!BWa\8ufpG_(OTnBuemQM@C4Z7s^WGSLhJ""c>,bDj;XoU<2`n*bd6(m,sb*EuM8<7rhA*%jkdc<9$V-9/ui4ARg)Ch7PmF;%MKf)QcoFmRPH.YUNEhUfFuRf+N(O_WpWL"c"gNGe#H@g2:"F1@O8rUdl'l\"_.#oEj?#Z4"!6L%Nj4n7JJ7QCHN2DN%>a>gl'_g84h5>HY`&DaZm%5QAllq*:Pt</YDDEj=#Ke9ND:sD7;N5Mdh:fdEL=[5a#"pY8('&mC)kZ/c<18%%e$g]8qhgDj?Wtu&2Kq4"]?G=nrR,68[Eba/.97@VIVJA\QsQ%qBs/I6,u[7NNJ3Kj<WJ<r:p^C3\t,9qcW,m'!?%a;QI8iAo%^Hs%pf;%3S?ACDK;YM+c^g\3)9mqeY.BWm2=jc?!D8`%mN>rn']X>`=oPa0@6i/FN1B$VX%+pW,c"M\$*hesP<?sEdAjEZACE-&ZBPAC%qICVFaGg?Be-Sb'0n#rIL6hsqT5U#[J!t)Lg@Je\2L.Mi%d)c6Uh*t(1e0!7dfDF?i\`EYbES";#$%'/i1d3<",T)e0MBHFNd=_[%ibcoGOtr,[LDj'FD9g.a/1XH?I?2f#GeU8p;@;A<8atSF_:5@]hI2Jh=m7T%^c@HH1H=8JR9.[&#GbOk'MIGEYbRcldq.VFmD4t*%3Io32*1/$mf(c'qj2cPm'eG(l\)'=*-I#DO3PWcih=)O$>M<$"H^Q`P&mkkZX'(u5^Vejc/n(%m^)eA&haR.TM[R\8-+!bd:ASd+%mIYZoNjui0_U>Yb?EjG9F+:fTfr(n$CiZ+E^H<2d3`HFW9s"m=*gjW*<]]sPbNeOcT.9#o/fpHc7j'<g,%9aOi<QcGG.VLZ5u%Ca%aK5j$Ai-PH,R'fU.%$E1V]tQ(-8FU\3b!8FB%W6KZ\:tWIr9Q.Wq^6"`1c5>^Z[*KDlX#ZJI%46G0j#&fbXh5dR4H,@mEGc=)N.(%=BIegjP,fr=kOnA\F[#Y:)iX#N'V'uSUd)J#JdJE_8tD6AX!5E+#sq$XGh/dEm4r30P#ubG@!c.qlrj"CL<s>*N@UaorPXkNR3u/%2ftV3CNFAp4##^FltT%BnT+"-de1L>?fmsn=$%$tgS(jPr>rm4$/2QU)nV=RZ`CbLh:lqW=/;E)qpf"+gNdeHB?[Mu4KFfZ_HcbI%=$$JIUme,em9$T1REKl`9>D._d+HnJZM_=%6>asUJg!PdB!P3Jp3r3d=q,&K8Q!Q#>rO44Pn1&)a.D4[plM4*VG`Xh\'@lN]Ip"Y%(mML%P>NdoAU4k9Wk"*IUaWaB[nV`HXM_S?;$^YK]+fBTXCn+CBqZr=U(Ul3GCieO69"'S73VAt5,9SEpEi<PAts0?<$3>QAPApK%6nu%o73P+lYtIq2j2b+4JtVre73Mr:5,9S5Q$PtuLeScJmUf6F64jN\ZI^]t@JXW"U+kN98Pp?[.4R#YNhMjb6Aj3MkJ9LLQrhU3%'Z,OW-:J*$^1+rYMNYcF,Xl.ZZqZFp#`gN*+Z/<5UaQA_oNd?#fs$<57lZ-%4EhUE%26c4+Bmd?S?qJeq>W#!KaV!e-MCTChCOeG%oTTs!<!?lo=$UG2VfPnO03l"@WbLSN[$?^-H[;)%%^YfbF)@K:N!2j#D^^+PJt%/P0<O`c"<0qQ&'Q@O][UXJEdkoubp<-b)@#GB%lIP5a>]\r_",V%hJ]008YKZPIMi(&V)2igLd$H1#HWI.(K%3#b/P'WP74Y,X7pNs(YV`Eo4r:D)q?Xg^n$(F78EVgRT;[ebQk`.Q%#Q8SR5go>!F=]'4;_g<(g^)25.XZ#cU_D:>AO3%Ydb0U%N#G8H`nG---g<H80s?d_R:7uf8qQBWBXq-;a]^/C,??<DY`R#R6r+KY%r%74\%6\,pi%_<CD/AbL@s2IJ:ZT5ID]+\e!sqO^0U(#6d:V=TgGn\E4t^o7oi<<I==p*YPDe]tYm=2j.Bp1IB)%.p@a>BRd6gI_%q+W>iTB"$ZT3%iJ2Eq#0s"`+<>BL=3UBDW'#TSD`"HJLSY*:3tBPAPf[Q;*bL:'UB6m_>h\NO&jI^"""\VtqEk4DYH*HfgSqt<SA%f!Z+k9s;3`P4+g)43EB03ss1=*hCJ04^#`K]`(HA+($cm2jnF%W'FEW+XB;urM=lM.;@:mE+ZAd8!o48<i"9V>fP478!odZbt9)6%)"0Hq)O7"cBig37U%?Op7YWVNINB&be?]ZN7825kP7Sgd#E:(SJjq[i`7nVjZjJr--=$\_E`A23^hnir\Ug/ISWN]Tkd4r>LfHcf%fht\Im.df#`+gI7qQLeLMCs!l[?YJtJODMoN+kGNF%,UHi?UK%M_.Oj2R^0c=dsQq@%0!HW/C3ep-T&Pm^%AG4_h?P.s<\V9s@F0%S-<;K\/(\'r9WT6RtFSuU?K.M?!0_S$`UuDAmElA3qF>`qUJB-PMtbjdM(;1M:"lnfP&]b)\IsqVU\Y?s2re<p6i1IO*`bGeN5;s%\k=1HY8ET^[a]$**T1GQ,)^r*^W2"1#7*a:UWSt<=UpF7,HbcnDlrE?@UVue43qgqTSbJr<)Tii=R@Mi#;*ks[O)tO(\r2k:YL4[%Ct.>[1J>/URAeje)lA0ZRr$s5HnNQB&Zq7fO9178h]Xe3UH4*?&_&u)mtuO:h.t[W58%K"DOrZ]o'_!TGfAAnB4>Jp`gfOO6l<gt%%koS$Q*i=Q/\5pI:"_6WLng`GY.SWLD/"&7bCA[SA(9A_F)K=XLWRBaj:bL]..!:<Ih`Q"-Y4f.4'[$pG/#0dBjLTW\;IlQDlj42%MoA6iJ@f(5mB9,q'"(6pod;m?1G<'ao"Ji8&e9=FVT.7t])B`eb[HpANj.#kgL!;&m4VnI\t_%jn$&H:Z)[8s=()5_6#)[,c+$$)%gg16d@\d1%"Q4$t)WCZ_Us<XFH&bFdAiH)*`XrMd)r!40LhCFF]2CMH-f)cbWpp>siYfZ2Hf*--<R&S4g=-t%n.#I%V](r%`c#Ck%q1b7'DE']F4eAVsWl5_"U)M)-/uqaDWq#7e45i]ROSR+fDEKUON[$a/Eou\m_q:!@<'D-<nm^^eM5=q9'WGsi8>1gNl,I(bn6cYM%!p3$&Cb`k=1fL[P)TJG<IP`:H72:c*^>.o"Og1^&?,Z%qBoBJ9j,)H(h/bE.*pq(3oX]^TXu1OrJNp'!N-fOC+$&-MSiY"nS9sCW%K\`E>2ZQn'q>D>"Suo#aI#E^-I6@B:ZeOk%Q5;):CNFiX]fP=X"<AJ/_4ZJ7m5eW_h+A0<WS5@>MJd7]**6&NH=2=SHWhT`frZ!V%?*Rnn=l\b-f/\Ppa$_8rgA%ncS*/l1VT-MjP^V8GfbHT'"gX6t`\<o\hU&cqm9.FmW176S1WfstS/npD(*0e5Z[qYTTEZ7](gF$Q%nTX?a3P!114c^+0k1WOhg)*nJF:D6%4>sd-g)S^N:^G_/,,0!Yo;65kMBS'X,mG-_@ogd+r=038@UQ&6SFmI?NR?'n0.d<c-89?A%!NU*$3>/pA^s]_&<KFi6ii;^;IKR8ihGZ1E;7/\a@UQ')S<jHUKpE9),,=Qq_!-uXhWe&jALJ5TC!,C2-;%hW(2c'BicJ6h;^P7@%XdPbW6??0-kR&6K\T/q(<L>Nr,Gn-C//3lTC-/%i?'_Q[P_i9]-+ieW<(>E?m.I?%9seUQh&4AR5iTE\B$*NCb3n#7THZ22p^'7F%g<H0i^)o]s<RQoLKedWpj,YW&B/9/TG4PV%%XTZ=UPDYmju97pEEZC)5Jhl#"<j3]99DWCdo89U,mFo#>%"4#`(hnPaNbL.9d5K-%[FnHIZq")^pbK5^d9E#?LU`=If2Xb..[3iioM=K\XCa_TkmkhFBrbi8iC.qj.3E"_moh.@DfpVIC6aKi,d1;]PT)]eit#8'hYl,O%R*@OUO67+tG@+a$;(q)SD<!5VSr_^@4?D49>rO:[Qj%Zo8=ZQmm&FBY&mRYer\d!Ola68$9mk=EbB%EIiNHe=njtoT2`2p&;>`;2%_RC_d>XhV,A*!=,pO+1=N/?4>]j->1#KU6fVbFs62SFPJg,jUUmCDhdfo4q)QU34bbD)L)3BuM1E`pJ`J+%RUQ6ZZFf.SBp$D[om%[^)B.hdLN^#A1G%Wh,H?n,'LDr&!hgKW1?EM663"-l_=\8DNrjV/]Xgq\psIDCkEAm'TslE@PZupO0o'hm]AKr61YC*E>PtFPd2$%lG_hd4F%G*HQZ:/pjE[3W\qQ[JPk"VI?35&Lrl]&`c*1'>rAX6]a`bjH%tFlh[j,g$&\lT^eAC'Y\r`3XVu\r4idn]]&q(["BgEm%nq,aulr`6A5b`;sOjlU!3rUO.qp9P9[;i,9d7jSuXdX,b^[9M*r3fC:i4"-OHoInXnIBp$p8Nfq&"haTp#1u*LciT!gqh,_`$;q9%iaCH>K_-lciWFulnUXi:G]\&X\F*oK`tf.16Sas$gS@!,`St7e[M-?Hi_4tFgR?7ZJ\`j4K@takKhnP%GM#k]F(;-/KPQ(Qi`Tg%%;U;R+R#U5!c1llCr.LhY_d1ZIh,ObCppj5F81OlqVG2V3KusG>G2uF5SQC9s>!XtXZ\J2g8?ihiY\N8UV:p<^&PIk"IiX(nXN7C/%K@VB(D;DiucE:hCX>O//Zid@T\RO:5Kc:VQGu3tM0IlhC:Gp_#2K6Sq5q0I95[r#i*>Z9Y0oAAVhMCOpoX;Z_`_Xhh=Au7;[e98J%\]9/QUU15/:+HA='9R'0ED5ug:LG\RoBRdH%uEMR?m%]sHHYW)0dp7(Th?9-"!X1OT&O=sO;>RrR^3?g;ObgiYIlGV!gd$F2\!(.%F*MW=2uu5'GF2)aZ)o+Ef9rLWF"p@/h\]CBIr+3iZ,R>tmuGq"i1:5qGoQ[NEShXU;c&ibNpX)#"nJa%I,?)NNb(tu&u)l-nBm$#%_4nP`n!a^R]mV0P30KA]#;>LD4GKB]P4SiZJ7eqtYl%\Rc(NAlU8KUP%V;dO6+_Bme-]q&3W"g8e^19;9b0*EG>[mI:7\IHmQO]5%5/M`/ca"1[peDCB#s=8JRn&?WM%RC3Z8=a%1Go2d]p-s?Nr]*b"@Pj;:ogN"Xmt"&3U2c-[Q"meAJ[#K0j:C+1U_Q56k[qEN,Wtb%'CRk@1_AP!U;]A`]TJ"Q!<2tJ83)bk7\$*0\AW`a![6Hf\CMQ4K4Q\h'7,sX@Rg2p4gRnW]$DKeDbBkSpe5H<]E#TDh@3IJP*uda%^$s3[^)VXOiCS/AUEI3DAVF7T`IW84Ji'0]pL<02c7,U=&arped$?=ngn1D,4Xmg,'GAjDoMaS^&9W)t('&AY+^hIM2P.a$Z*H[t%`.ne9(B`*u-Pt;j+NmY`iM%%m":0,G91CI-cE4&-%2!L;0SUmiKbQfFOpVNDM@+tj'Kcp4XjRTnNf4AV:.a"<@>IR;OOd@?n*f:A%lr2(VFS):DYZ4WcXAdq+;6-rM<AVE7VTXJ264TuDAUbe*_[;HKSXfYe+ps(WoF^##k^$nGKhI'`Y_Z=F!OW]RYI&gHLX^Of\T)$S%>RkK@";L!5qU,2>qa-LPl>N*8dY_+B0gLQf\(4:k-CSu4r-I1^3L^C$AoMq$D?>ooKLB]f`;K9HPX`<oH1>$nrI"rT["&C,^\A8V%SpR]_V6)b0kZ"4:B5#OYam?/u<fOZ17nZ6O$US-E7np#0Xi4hLJ#a44*5@D'%07Ja`@YCnE*6'O9VU]#"lh8(dB/*_ipU4'Jr?;h%m`YCkARSk=HI./B't<$\FO57?\#['feq($WQ0:'q$o#QJgVBff;JIVG>6$7gkh#.4+(j9ESCqm:"iSTjH3--3$-CXt\(-)aEi'".%glWXelbrn>0`pA5$$F<lie$h>q:CC.7EQNO$QlHmnXP\Vm%BJTCR_:j]KaZ__Dem;hm`PIch!UQiZ>B">'UnojCo7djbZ`#6Z(^8%hW*MI]V)!Y&(Z&P:?\CK"0k%UP<]s1n(kbNj@JVT!iiC87gT3$B0L)DiO;\eWUP#Km*fm8e)V*pl3[c[qj`oM(.)0!.HSGL+sUC4%Y!N$ll@WiJp^Hq\.2@;\D0+$L;EbdjquB?88>.j]A?M?hTb&S\8`)eEb#p=ALuhGM3#(?gN_=*TOS"QG:J'Z'/Al!Ba_-/>=%8bm%:.AMFpoFmcq[r$cI$XEAm3b"q]ZKuNL:E;,pad!bY*F<Q+Pr>*iNo6p)t.iCZ*2pWYjKLX2'fORLgO''i>]j\/LRi!bWeA_i;L^m%#:R=4F&Y`D6&r75[c]TB;lXQl&406?,"KWj4Oa]2i]>O;4:`33+G-O>*Y_HpVVh%\515RfcH-\"V8(!iqudh\*M>%IW(>@%k,UoX%J21kpqNmg#[YS$,D?-,h!+_nB)F^-Jg.L/5E1as;qPCmP\,8@%f#:#A=tXefNQ2XdfF>(]"0WNR]]ImNVD)a\QTB_H1h(N_9u;Bi%H`H7J5a=Op)$)gMhsbJ!&JofjXQjS;?X$iah[/&"`Tik/9>&ApIB25ikr1cI?hT@s&")W#jNQ/:gm<YP#*uen&ik>i!31=,B1SQ6%d0\nR:p(I,nNBudRFc^0g3/?8Ub[LdJ52i+p\;p6GA]c?qc%-L):b&s#mrs<=!Ni\'A1td!qQ(%*a)"*d/raU\VKt)coO[_"p^iW%5'1Fn6Vb:)=Vr4bVGW]-L*M[ap=XsmSWYqiN18liTX6qP8JeR,>X:#k--C697)u*hKU\\lURa]C59t!E-kdrIK(H9_hKD@b3Ok^9%3?""Y9568N,H!914Fglnp]4B;_+0=18Bc`TLBZRY5Co!2-.+jtCJuZ*k#9P'5%\*Fq`Z.SDOi1DF2!FXinB$'+Bq,rJce;"PRbOR%IOBr&3!aX?-,20N1?5Y(<R/nJ)fLqs-q9^,ML""?8W.PBQ!,cL<*rg=;A$QA95(P>X;#kck-MCS#kj[`bLTm55p\\C(f5mpLN6#H%I)\j4kToYs`B@m4'*sD"'Dj0Q&;?@;WT$oAltT:=nIWC:UnknTV,BkNX/3:umjmI5-''MYh1*%a(_Gdr6pT"c,Tam7Q+gBf0RPJB%A8RDnS^NqILR=*.![]$R(Y89ric)g<2[%'L-m0_\8BN0g:@;N^9\Nj3FtVZZpL:Kerc/#O5X"C>8O@fMq+e7n-d1!OUtHUuMVBYF%$BQJ+C:)2u2X1aN3m:fe^3.5`,btX+eDg#a$<eE&E-g>/>s5VS*+a5tcNLj$4WEK1]lkf[1EMfZl#35f+"r&]9(nbD?;u?7;+Hb<%0b^1;d&4F;68SdTT*<B;9^.7#$Xpp4:!T[^e3[n"GoP*[l5$`C#NAGa&k5$1Z11$@'N>2FpoA>MNu(3@-+p8?42Dl?D6LkTPaNli%!Zu[NFk)W?k3E8F2?N\r,^gR^s*TS)[u\ZgZZ#P=M;$l6+mBuM(AAe"d\qtB;5H]V)pl)-oDKP'lIhK`%J2,->Y&5VK"Lma6FMd4%pHjG,6uK2$,=mFaU5[$ZE<fa$Z/A*#V<Yq/1B"n[P8k^e01o$iisPX06*ZmBm<-f.hWZ[_083]6"ffN_e`h#MG5<-hkq?e;Lf2l"%545W;oG?PkB4CTI1sl+*qMXT/3E2okc]pBaHbk#'<?CCC5bu/^q3_sQ18_A)?R\:(Q$BSOeaE1$rW5(Fbk1YkjZEE0&VJK79V@+c%A)u;3`$kJ)>^MHf$+822H&.+YW*Ot%!kIG#0(/_@C%'D#'NV/@;9478:5Mf!?<8+DmAB6YfE'B]gn$eC/;K6V[#$3+EDdAkEQ\G>%,;6\V>7!jb1SB(^=q*'1l3?[+cKH(\*1PgIr[b"Hg,BXamu;=plE]@r)JKBj[r.tVaDn$K5X//0elM-(8_i%j1'=7;MT^AlV^cEV%E@rN@V'N18n)hnsSahPd]mfY,']ZKPJKuT:L7!1#\K;-;HPD/B$nb<TNI@aP2'Bp<hOTm;Ore*uD,P^eaaqT+Fjke!'X[7=KQbZ/%[MmKn+p<DoDm\o?;['`S^BK^oUfN,UAf>H6q<pZqMSFTW;O>BIU'pW!V;_\HlDk-Y'nZhScHH"VUH"s?\?85e"Z[364u&k/0pWr5%QArBfV_57?#_P+YoEo#uOKM0S8XLliR?YW]R3sfj3+YR0`K>9(GdC^W7[XibcqB1*#a:[@k<Yp'[o;F>8=:i?0TW#R6(ga(D#p$>%0p4+rU:Lp?8>47kM2[$A5F9rEbV[qfTZdG!1.u<&kWs>G-A_p5augh+PQYDL:5WLIR/tgOfhPj[rn%^?`Ti)tE@CIi;t@N6LZ0#]%oG+PrToIKC^,.I;)M_S@Ug=_Go9&Ia)di^:paVI&.S9IbpFoeA4:6Vd[IOm&(b(E+lOQfh#KdHP"*and-&f<!dZpI*3hXm>p7>;i%Z-pXTep8tZ'_AL;.)p?"'5bI=dT<YqI06mDN)V4mdB=gjHuG*;0dm@6C'ZgJ)krAl-3g1!`$K,-f`Do"Y9Z\NJ20_^P[a\-Esf^/%`Hti._GJOQDf%I9lfC,ME:;6JXI7a\-nXT;GrsnN+Uu-W'oON'%<Q`d1kYoPodg+qW%r]*6g6NUPZ:')/5coQ-n?/\i]Sn%X_'MZ%[;".R=ss#*h@k_7*moZNof8QSKTN9a?$bf"L5/1dPI>'0f+hq>;(g4A%o;eL`X-sGXC30OectOfV@eTfid`GQ`!n]!W\k+@@pZ=b%q>-"SkBi7Y[2RWUAmQ6Q8Wl1K'C,5M'ONgZkqH&+?"oqp7cU+0s*YDiM&/k@4bsmk=8);l@"ZePgT6=@GoQ(#"`UEb:nD+ohPJ73%`><8":C0]k;dl%H"elR6[tW/+1@A%Pds7Bm>/+CY@WJ=W8,9RGG^pfVDU_;#n/?4HEg/jAL$`p#CZfFY21`W9o!T<Nc3WOXK[J?Q%6o+,>[0JA6!_[G!_$EiZ8o!f,UsTCK26#P;>tL\4Bq_.JL#g/2UD#);<gn?WCd'TuZLP<t!#k"ATN_WH*PL&Yq@nc>\.W^',<1bO%?GeId\-,4#`kmLW48SEMqZLGQT8\RF$%@r4B18B2%]a4Xr%MI6c`o4CZB?#B81g1rX%hnU#&+!]h+,HdaeY70C9$T\V'3T!X'Q>8%l9Z4!i\mG=dmDaOaLG#*8g/XnNW=0]a&,oQ"+H8PV&FB;GG6DIFjrME<0$S1^4):XqlF[OR*i20]:AN20cNSBO>qF.r5$"1m7uEq%69P4fXl,@T=te^jNjp5W@C0R<Vqu0-ep*aOr^s)tj7AnBN=VN@N&3Q(B;@t8K1<_p?h\6n=o'1t.lX&JLHVaXQl')ts%6m_K[Hq'%`7A:dN\Gm&&2MS-!sY'[h3[\J`O(a=[r#phTUodu\6d%m,d"M3:`,@]NV>=pC0ET'kOrjk4XLWZi<1N)fuAUVUNNF-XCS$_=C;GL%F)+/>97a71,Bt/"FMQV)n3rHLf[3Dh!LZ\Dmk))f@0!.-D<jnpC0@#<[M^B&%YRJ[@-/,H+BS&9q7sf2;qH2o$53_9/!T[.eD?%(%-V3@rkSa,"mb!."f:Li+'^u`)#uB,\XI?U7(lIXa$#ufNSm+pDGe/MIOMTQ`MKuC8G`\qGIWuQa(!C\MZj3F,</N>Y^g'$#i1OlJ%P:)Td4G0TG@-P7J)-p]H8nWb2E-b.o4nFR+#A8@?g(LeX55^*.H-<=U"FK3i*-%=PK[E-t4jcm@%I:3U9e@Y/P'&aDg:MXUc0Inl%@>IqW=Z])C4dktc,si9_nA?iLUZQ>:D3.8'j^&?d1H(&LHI>GnaXicb'tY:B=W=&o0mc^BR6@KPoqG_E^D68a,\&4e7Nh,a-&`V&%Yg"CALZ&aS#ORh!S"G;?o,;UU(<M5#$!fOX,+4nD/uhP(K$jtEoG+HWL-.L-s#LR)RYP@h](t<CK""9%Y=3h)#@%ge3-hi/G:_B#%-+PLdJTYIklp4@e&tNO3ZSN-'3]+6^5'2^#>cp:DiZh_uefa!EL3`Uc^fC;GGmWHRZQ>$SYb5*)HmneBBL+j%Gjei,QRuf-V&oGT%7jR@r@:l3RO&6;SpcN6R(>]oT*O\&&8=KQgEu?Fd>'caM'pAE3]/^F(0-r/tn6s$8mkE?I-&ftiN9ia08]Of+9YoGI9UOfpcOI>"%3fKAOEl@WE#ts:[gXH.P,p(92q@3(sC+;s#Xs[MrrF(@"gVQgVR0Yp(-6j;W+rJ35</cs2Nask>mu&#$&L1Hh[)%Z9h0O)e]e<e4%7h\&]aIi&sOYh#_bVIbY5[)Gh/[Am\MG!Ol`N&^Pm$J_YA3V:B^QCQ+ZsHS*?lYY++0\oihc_K5e<urq+#iA[<*YB_5^LVk6=94l%H4J-&gqQ7oSF<`$.Psp^SZp;['I%8lEZM.n80+nRr.m,S8fo,%$XdeL9L=4l[R*MVmUng]T&0/Uh^B#nn_)?.((X$tFK$BC7=h0"%<C6iN_Ws_o'`9,X\j_(`<ORk)l,&/E4=F<iMBjFD+plIm,c;M3>X\]q`^LA68an/p^NAsC'a^O.MPDX6,g>`1iO)4RG`1a]NW`;F%<.M1f%LaeOl:<V<8Qp"('"DIq;it!OJt\\'X'1\8m&s020o##Lff-FCp)Go7?R6?S*Cn"uUaHJm'dX_1nH+5d-R`DR&*G[eG,.r-%?u.l6=\gi"W1kOQh)$Dq0ic?=NcJjnPa'kN&lYdflXQrX'BJ?+YHOsh5XJJ60iaLS"55lZ7-fCu;aQtRP@Soq21`H2+emMKbC%*!%=7S-5LB%Ad^W$Oo(9S=p%&Zd5!N[o2VioK&+L-5Gq8f4Z;GpJ%d&2^peu"-OE7`S'8?fXUh;!cR31c;$1WtMtgO/EWgqS9lM5[pN%j.)>J99VH=Lf[c5_[>!!(,hZa8'J:<JE>VMrOp,6?FVWdV-*/DD+*/Mfr-3%cRC_M2d7QYBkGCK!*>l^*\*leKZ"p6e^PC#<bY-W%&XV19]eF"c/Hm\B;j>cJY>]cR'djXOcpV>jiX&ZlWdU:l\"(g3Rn'R`U5HEgh)9qN,COA6P[u:lDl$<^-8,?RF!<F1(3)Vt5"8K@%(3+jM^O7;%YIr6K]](+=UmO33WH_u8CTQ:uQ34_iMCBbn`DZ4Q/F=U[p@SYA0n@!>n$"`UTk*a:=11A3R+Mq#W5AWfMuYL#ZZRK<%+F89&RjH4_gl3Pc%OR,]`1fipP9hutbtX<UUfR?KMSi1Pm?82l?M^Q0f>Lh4ddlB,p&"oXQM75j]Y$cZ9SYX'Z+stG#3_eL\!E.Y%A<JTY,-bDdlioVl&ladSYr7F3T]Jm>C`l#Q"#CRJNoWCoZdOu#ic1^(,RHO+<bjGn<_9C=/LYEd5u:\(&iE*9pK@NHj\Oh5]u-EU%2Z=='2NLBXlogJVNT@JIKPK87YT;NEaH<c1\3\7[,W:/qZ%3dL77Y7)%RE:*1B*HT@Vm\l7ba_!.Z&SAgOmH<HQfR_^4_NXCfcpl%q?WY#8phL2#u%RdU@>OfP5KgYqa0<.P8U[$eRI+0kfJtZ^4`K((HqT8TCY\g+8d5,/8KYAVWeZ@c>bDW;8<Y_nq:im+#7c<P3"Tt%ZC]ac)^4q<,KLK\h'`)oG)/pt-=rP=Y%mdX6K5UNAX,dIC95p7AHf\i=;%d>C6ef3euV,t8SXF\Ht?GU;Kak=bTspGb/6`MDV<p[%Vorh0LWnpg.?EH`jUsS-4([jm*WN7g\T3u:3)l1gWE7&?EXTA]PZ"*;JOg3L-.TR^%d#uMeeL02*l\K5\q2;bq)=1R"^Od$AY[Cm%I;>=rGtjSkoJXV)k!](9ha'^O1=OD%8afa+2ZPL2Xm@'-)t'jRa'o(se2M8K)5`:5bK=n"SY!^!oWTH6>#k\\bK;-6%G>\J6d+/\%F;<m98Zf3L1odTf"Tqn?nmh[lAdf3dAi*OQC.n_`0d8)t%c[)A,cV$nb6M%O9G`DsKf>6c)#9I]j]U`t.f(IaftnsaM/O*>-K@`n%<BFSi+;ZR6j&:]Q7*qo=MnBI]3CTRjE]f>8iO,5P6ukcUo?DCO$Dmt5fIK\-_C8nRqM1V:AY&n'j:2qjY\FJBIL]\qrCUm7]ZSpE%EE\CSBZ%DKhG$?7?&n`2:+J0e@t%0HfK3ek,d-o(@>Q=?2W^VEFt?b+fD[rU]5<"a_+1ZSDh5:NI:H^'1'U[rgOUH!8K`X6N;JJm%B2Vb>9,)6://odU7eE_m41*p/3b!P?5Ou^l8L2/\AOF/Y[$8lbJCtYl0=F3rqQR9!OD,htI0s!jFl,NDA\)K0&nSQ]^][]<bU$Qp%aGP,MD:A-$+kKNj_7_m/&bW$-e_J]P[u&cVU+^"k3,^Z3O0(B5E3eVE7On32[-:s-RSU7I0JG:gNYNVq]#aK9f2VSZZWP=*DcKru%b^0[BQ6J#h?G[.VlnZ#'r,l_C5n)%F@khfck%/RN"NA9IoP'dQ0f*0s`Hk+!^W%u*#0*H[g+aKBaWLiU-BL&sa38iiSVhdn)LkuH%2.IM0[oP5"lfhu$%t8i]H[iElfD?=S1^EGlH10tojXk-+RU2:(;KBU_qDrt@eJZJ@Y*X]mmq'B"I#4H%9T:J+rH4f!PVK;&g.Z+s%DKN[Y\M]hTbl`%@nM^\H+S9`J#:@$*Y@ua3_t)5DDC%r@mVP]nbM266)1XeW3b2!QkiIu["Nsk(LD:*cPZB_"kHRo(S!H-F:/ACd%NgMIAp2PXYYP\tKkZh/chJT+!/2sum=FnE(Q8-)Ocr40-hjn*:QfnmddC(C0AIn5=8adjh7arnN6@@;[guPD0c`/"0W+5)+PZ;s!%<0!e:oVK=C*P0$tAlIjj^/_:iAZ/cPZW$diSpcMsX_e$Q1gSjf0o18pC)9ukZ)&PJ+CF\7X`p1;27&`DR&l6^0L:eRpuld&6bptS%a'Y!C#!c,hIPd@GbPCZoAq.-dC7BjP?VM$`O=D]c'9ngEpt2l:,q(FP4o#=V1;r;Y"V%7,`QO$17qji]T]Wd^JU%BXO=26acC*k&%+EKYHS*<cR\u9LYIT0]I+7b$re"`IX90s_<,cajEWLb@M:DV-o_^qc(fW9*B1/050-MF`-WV>T*Cpkcil@Q=>DM]SrbYk8i.uTrQ%b8kJf]MmXVQn;;Rb]4h1\lA%0dEVA>0'd:WrqpK-lIN;=B[%&`9<7oT2(dLYBo4ZTRN''[PG@spl)CHaMY+X0'HnltDOMd1e<da0%d?>g>I0ihH;=p)B^<\I_fg9<AhR:MGH<b2M:3<TZS[:1_-i#h[q>kAt-o5:sF[>W*Pr5Bo"uiGS*V)8(aT$IiC'X+M6W+BNOG7R0%"u-1YSZK=,W^%%-ou)j[9:ho-LmX36GTLIFZ@,ip3Hj9'&Q2-glZH#QFkJLJ,RP`VKsjg*bE-=4?C%9fs5.<TXfK2mG%b>Y+Mf%,%W'I_9S0=:!UdQ9+V?r1q72!Jue\?PY/<+GYLm8:Aj3R1Q*NI*[i^md*'QDkkWF*->,'g::mIjSugqa2n@R=P*J]5,k0dYF59Tu:M%<lb@),l9J\>M52R^b_2ro9hUH'*'nFFLh]dIXX*i?qjY"2bf+0o$On+VNn8VDZ_51T"3CEPDNEi@L)&i4a1JA-5B:[SJG28ooR3,%RH:B%&6B/\I@N0u7cU18j"&[&PC'@1M0.;GGjU%:=8EagocX?$0bke1Bg6ZTaaGiCInHaf@?@@BP#=OO@::p>c8!`#aAdhJU_&'c%;3Ttl.n^<Pd+Z"H<==tV8lm2j?h\liN[u`-.?=ou'r@?Ue+>'3\uE-dEcYEd9]qMs$[A-soXT%%*G?G#6\T@q)0&kO+D7O'6=%#d%g_,=1$F@5%-TP6a^r4;5f'J$Nr#^5SFf?s['o9TlhKNgTeJGF2WiOrT_sT"BY;\OeB=P"<5/&p$=[dAjFmU&(*=J/fSpcMW_nBKq%E*#VJD!==&8ct43Ql'_RZQ:VU]!Ol2Z.f9(dq%=P4Wlc*<bAi&_3o!lOE-pUm1f>TCb^!]<+DMC'9`N^hqeq+[hG!,jYVV+)_A1u%4o5JC?SHmckI=m6A@cd(cuc*m/lARCUb>!!W>'G=9pW"T-Tp)=[*;MIZ.VbMd)_=^1G@e0,;V+s]Z`D_WL8ZE7J5c6X<s2ra^ABa%Df`1*+q5k*E/R<)BJMk<=3k3mGT!Ok,uVFX<fOTZaA^F5]SrUAS&rig4/7O<"d;V2;fc?4WYt+VEto3'>;f+>6B'c%DD[TN]#d@[%1$9=2niDFo_IddaVnc]j\#_c9o#:]2?!*9$f^O>SEnhWG-L-C5Ka[]gRB!3tFgRD)"\>n?TiN!LjhhGC*iq-*'bkh8*-l$M(J:ZP%%4Cj@,I:Ci`dFk;[Q6_`dE:*m\3!I&JkN,!fuMrWknO$+^;F:5EN7N],%[OaLgV!o@T=_TZe;\f!GO^-i77*>V+>Z5iO>0A8L371%/XADU,U>->#=aI\o^*`]T<j58bWkqAa`"Q6a`=N/Oi?+-,E"EuLQTAM8n7Y-f?rGbq7Cm$n$%Sb8G\6+N,0_:G,h-3WZn!$WV:N]%-U#ZV\NGq`\+3a1W_Wg1F=T%[LSU\k,T;ZOAaR#\S*SD.9q%hXT7!&2&qfKY4gO:R^3<8S@cX^V;@p,61OC8BP/kY\]*0:D)s+J>%2Dh^L6pT]8JF7,IIagg.nN10$`;i//]'luAi6JtQLHBIZdD_Pi`lHuPkt[LG5n!`"cY,3J#O:2u`L_dl=o,jq-ajH!"ZQ,+#0)#8%>>9T@*5BsK.kCEgT$lWFjT"oO_d$]i!<\.D)E2$qKXf)!L5B9Lbc[d)CGM$RNmqKU.9EQ<f._R6Tep8`l>5,-?FLRb:q^WA06C4F%N@#E+GA*;OS4C(T").AOIaN]$#=mNR/:Z:8?+hER_+p@(8%(@$ET=NsRa#pMlclYtS7nXA^-/`0Y*s&Fp2J>LN@I-M0mB@K6.KhI%2KqA>M-,FuQ#7-q#=:m_>(u:nXPBWGe23g^^J;p@NSN`>-*[gS!*l5,lmY7e;O\?8GF2J08slS.Remqi8csFb;@K&SUK-odnQ%NQ%7!)WM+s(0XYV`LlE@gR_1fhXj%4#.gX?;C2iDkhaXDFJ3*D#M?SjYFN8F`f"=LtMuREj\tM668Ap^VX^2<;&Y/)<B'!s>=L[3@]G%Yua9CJ<ZY#]eK/2d$g,%%6N+sdtfttl>JUT[*%*$8dUqmkN^eY-uY@t,DtF2krjo,S/7+:LQ`jb@ep:5DTBWe%N+g',ck44BO4F&%ae+f/`RbV+f>P?*JSDCGr(=#6),FFQ_F?1E+K^XJ92Mj=epUYTjo4KKobL3ckEAn$2lrh`(RbRO/H&$s-^eW/8#2KEXN%Y?DUklC%]D$D9dU.;,`b3G(G^d6Ec9@S#dd_&K@A6ZDfs,X6jOs53X;-X'8skkI6-t27,*L(lL^Q0n7mHH3A;3!8,[8OOn$Gb[+KT/FlUP?.%>f5.T%G"WHjnFdLM4&(e$L`+*/"!VqGQ53sbG3:"1#bW[]u2u/[J[?&&)C0fU"-U+&uh5D'tNK-9_6HXHO2ma4Zb3g/;uP[Dlq<X%Zc[:niXs$6908i\db2Du69&D4lNM<@D^PsB[C-5E",i>4f'9JS:$fr`\@r#;_^`[*^;85en<JHX]obL*%o3oEK5?o'Y^r`5JDLP3%k_Ns`$\0Yo7iMfPW>e@kZ&gY;DBMfW%fQe!D=4Y/XBqsrXbs+4]r-:!\.#bEYm#a_QC#(M!rEFmQhT0??J]8QTXtQfPJ)6So,7k[%$,k/WQ:IBPGdIfMQeCN&c"1\t>m30?Y(?tTX'e@[mTbZO?M<FlDsZ2'7#ZFoYp4WMbg"C8oG%LPGjPe0'uZ;J<0RKge$U0aH7gNr%T)&$6_NV-R[mDc+V'fj!!X[CG@!!1f6Is\CY>70@BM>s#)Nd(\]-&G%9UAHWi61jhhu5Z'9kQl_3bZ&^U3@?;IU]"S677rg3Ne^k%Ba>ikEb3LK"ORT.[d_7IH&i-V$d<;74YjLqkncX_F12nR]3XLq;QD%p)#!#]:qaZmEI5B#!_YQs?g;jf)lb9:$%6lD\-5"F=9j%q%FURXl2Dl`!bQ9TZ7Tj'iFQIgLl$^B1hq0cBNie%iNd+?[V"Z0/H/@c,8,f%9f?PiTZRAndIA3ZETa.N)^BLt/#sddSiCG*3HUAQ#%;3&3F1JC$gW*#=o=`%0d`Vblr\Q+Q*3=5;Wc15[^F^2b3lT7mKgO]GD<od(7]oL09gVpEY-63(`iQbP$]W^sr&07eU,U<ROJeV\'%qFW-SfZWPE\>A.Z9V1GJfJ"BL<PdH]_uP<Mh*>[Y$N3"h=NIjD$U^EIK+_Qa,DSt!F9CgSn(O]:<HO#&1^@"^"--2gI4@YXKIXUR%8Ij)>@IX*%E"FMD0F]L/fVTN,2WYk^jK^1*SV0CA,O)+6_d*(-hfngCR'2t,;%0,*S_Dr\(.[-/We[L'ODP4r9<!saZP3W`,RR<I%k/F2f*3$gL$jV=Jq='0U>$fF+YA2]lE7<<KKIIC;pQB=*0lt$^4iK^gO/^+&p?$(cMR,Q7]p:BQ_P&21"H/l>#-&E3VU0iAMq)$H%duCZ$8hal<3=]B9rNL's@<HqVg)WP)@('ho*2?W):o-a9H%=qe,DP749n`k$3-%\DOCn>N[;/3=6.iTbUq]U/CEXg1d9NYo/IA0p%eP_<jA?i%<hs=NV.(cgn;HLW+G)h5]/$QCe/or"[K-`G-fC^0Xk)R.<2Z#kIaI%hf@kpTmUkZ.U*/@0&@sqJ07;L='cS9c<L^=iJ%R5b2bm$9+V`61KO)!3dpXaJXTdrTCN=J5\W99t#S/?eIu=n)re=81BT>2:X<<.iN2?\S.FXt:B>IqCoZZ!hR5'6H4%YRce\>N(kp%l_gm9))2A_N/9P6l13Ao`>iGCJAlUioVS#tX(j7GLhX,e2t>#s^cclsUhu>PZ$U?A'chK?.O]*7','nDk++)a7e<j^k`2I"H'!pQ%O.V#,I3Q?:-Y>KY?UEW,;O&5-eh]h7!:[#Ol=lLqo>_3^]XCXe@IlG^ilmGYIn9bOFkQ%*-=n+>!<AH^!9%a[1%@fPeG;YkVIa@7%6uY1sa>T;)^jahnM]"<$c7H_:2f7Eth<\%UOl)NU#+_qdKSXn6.S$'Bj,aGN$HI2/8l%;JY,D!t7uk*JdPKcEYFr5gacZ50KIKD4%4o*0ko1O7/\@-<j-rftY<q%qZKO[U$$Z')@M.lslE@]5N8(T;q_T:`p3oJ&n^Wm!CHO>ldMhWG+7jIS7Ml"I7+I["?W>8V$+0d;:%PkS9hX7=c!&O(q$I\G+4Y@@M.VJ4$il*+^`k[cfqBN4BunW''gl4%mCJ"\uXk?#hQS%BZ;I.\dVn#Y'=OL/e?Fc5tfRh(&W=,NdW%Y`9\,ZlsVc"_JS%l;XYUV&"!-Wt2HJI;`&)GgjjKjP#g3+&:[Qjo*[\8*1aA?$e7'jb:B!5WTo#_ijN(L':hs_=IJqrT/7*j8hb*%%.slg_FMNue,dY"%#Q`L!6[FJ43Q>O/$ier=@Pso$d8aY21tR%6#=BHDWH1d:!*rBa/jl[5aCG%<"_PAJpO6ZE^2bZcpTV4`@I!a%X(gm2Z5CUB.W*=;$OeaWgJ&HI$4<*_<,Mt0BZq^Y,0RX<dnR/L7!oAsfm$IUaBJWfN$Z]$Yml:=-3+d7>%J\m"@O+DA.]Z^%c9.L%Sek[)j^Y2WV_GP&-B,Y)-l9n!4N:M^@Ed?DKJ>$l`=s^F&4d(:),jrP*M"]@<ifl44Vu+79Os,:lH$W=Q%(_<9GJ8]?H0Yd@h#7V%/:`Dj=Haa).t,,M('&gBQEj?P5%oaRfpiP'OMRXu1a0"'9j%7@m=dSIbZ1;BUZ)nW^J'7\j^s]s%nTFm,nmX&HFBg3<loe1E<U$m%d\r$<^O:_<c&?doLHU<ss5h;tlTb@2^](_BouB1T^])D@AW:)GT8<;YiiHnAcRFEVP+CSsr=Ar(YQ*b*kC<BhDu\q6n,N97rR_)0%oC)_:5Q:KMkE!CVm=5!0^\m,Aro`2=YM]BTkDt,gpV6_ms7kpKs8&r!p)eeaO+7)bpL!prQ[f"phuD`orqVVirr)lp\,R8crJ3?2%gY`"rs7kLMq#:Alhbg$~>%AI9_PrivateDataEnd